model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | join DailyTask_VIEW_USER_INFO EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26110403' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간 | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast `날짜` date 'YYYYMMDD', `날짜` date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | join DailyTask_VIEW_USER_INFO EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD  | where DailyTask_VIEW_USER_INFO_deptCd = '26110403' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'DailyTask_VIEW_USER_INFO' model_owner = root
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | join DailyTask_VIEW_USER_INFO EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26110402' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간 | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast `날짜` date 'YYYYMMDD', `날짜` date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | join DailyTask_VIEW_USER_INFO EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD  | where DailyTask_VIEW_USER_INFO_deptCd = '26110402' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'LTER_TB_CO_DU' model_owner = paru | where DU_ID in (0) | stats count(*)
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26210315' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26210315' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast `날짜` date 'YYYYMMDD', `날짜` date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'  | where  ( DEPT_LEVEL = 3  or  ( CHILD = 'N' and DEPT_LEVEL < 3 ) )  |  where DEPT_NM != '영업그룹'  | case when DEPT_NM = '연구소'  then '연구소(AI플랫폼연구팀/AI응용연구팀)' otherwise DEPT_NM as DEPT_NM
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where CHILD = 'N' and  DEPT_LEVEL <=  '4'  and ( PARENT = '26110600'  or ID = '26110600'  )  |  where ID not in ( 26210311, 26210313, 26210319, 26210321 )  | fields ID
model name = 'mo_SYS_USER_INFO' model_owner = demo | where   DEPT_CD in  ( 26110601,26110603,26110605, 26110600)   |  where CLS_DATE >=  '20220101'  |  distinct EMP_CD |  sort EMP_CD
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200601,200606,200806,200904,201106,201113,201576,201607,201627,201663,201706,201708,201730,201755,201769,201835,201836,201842,201859,201886,201907,201911,201913,201916,201935,201951,201958,202011,202023,202051,202052,202072,202089,221001,221041,221064,221066,221071,221097,221098,221101,222014,222015 )   | where L_CLASS = '11'  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | distinct PJT_CD
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |   where PJT_CD in (                                              'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200048','P2200114','P2200121','P2200135' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR    |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | substr ENT_YY 1 4 as  YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD  | where vBPS_PJT_CD in (                                              'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200048','P2200114','P2200121','P2200135' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD  | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD   | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액    | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명  |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                              'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200048','P2200114','P2200121','P2200135' )    | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint   | calculate  추정순매출 - 추정비용 as 추정이익  | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익  | typecast 추정이익 bigint | typecast 순매출  bigint | typecast 추정비용 bigint
model name = 'mo_PCOD_WORK_UNITCOST' model_owner = demo
model name = 'mo_SALE_STATUS' model_owner = demo
model name='12db677a-94a6-428a-9437-d4fa93a60d4f'  |   where PJT_CD is not null and CLS_DATE != '99991231'  and  APP_YN = '1'   |  merge  (  mo_MAPPING_SALE_CONT_PJT )  as MP on PJT_CD = MP.PJT_CD
model name = 'mo_BIZ_CONTRACT' model_owner = demo
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where ID = '26110600'   and USE_YN = 'Y'  |  fields DEPT_NM
model name = 'mo_PCOD_WORK_UNITCOST' model_owner = demo ENT_YEAR='2022'
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  APP_YN = '1'  and L_CLASS  in ( '31', '91' )  | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where ENT_YY = '202201'   | where PJT_CD in (                                                       'P2100245','P2200003','P2200004','P2200005','P2200011','P2200026','P2200028','P2200115','P2200127','P2200209','P2200212','P2100330','P2200007','P2200012','P2200013','P2200014','P2200025','P2200027','P2200085','P2200086','P2200120','P2200177','P2200179','P2200210','P2200211','P2200213' )   | where EMP_CD in (                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            '201576','201576','201627','201663','201663','201706','201706','201708','201708','201755','201755','201769','201842','201842','201859','201886','201886','201907','201907','201913','201913','201916','201916','201916','221001','221071','221101','221101','222015','200601','200606','200806','200904','201106','201113','201607','201730','201835','201836','201911','201935','201951','201958','202011','202023','202051','202052','202072','202089','221041','221064','221066','221097','221098','222014'  )  | where MM_YEAR > 0.0  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ENT_YEAR = '2022' ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN    | calculate  MM_YEAR * PWU_WORK_UNITCOST as   연구개발_전사투자인건비  | stats sum(연구개발_전사투자인건비) as 연구개발_전사투자인건비
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'  | where  ( DEPT_LEVEL = 3  or  ( CHILD = 'N' and DEPT_LEVEL < 3 ) )  | where DEPT_NM != '영업그룹'
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where ID = '26110600' |  fields DEPT_NM
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where CHILD = 'N' and  DEPT_LEVEL <=  '4'  and ( PARENT = '26110600'  or ID = '26110600'  )  | fields ID
model name = 'mo_SYS_DEPT_INFO' model_owner = demo |  where ID in (  26110601,26110603,26110605, 26110600)   | distinct  DEPT_NM
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |   where   DEPT_CD in  ( 26110601,26110603,26110605, 26110600)   or EMP_CD in  (                                                                                         '200601','200606','200806','200904','201106','201113','201576','201607','201627','201663','201706','201708','201730','201755','201769','201835','201836','201842','201859','201886','201907','201911','201913','201916','201935','201951','201958','202011','202023','202051','202052','202072','202089','221001','221041','221064','221066','221071','221097','221098','221101','222014','222015' )    | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  |  distinct EMP_CD  |  where EMP_CD like 'M%'   or  EMP_CD in  (                                                                                         '200601','200606','200806','200904','201106','201113','201576','201607','201627','201663','201706','201708','201730','201755','201769','201835','201836','201842','201859','201886','201907','201911','201913','201916','201935','201951','201958','202011','202023','202051','202052','202072','202089','221001','221041','221064','221066','221071','221097','221098','221101','222014','222015' )
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |   where  EMP_CD in  (                                                                                               '201911','201935','201916','201886','201730','M21050','M21051','M21052','201106','201576','201769','222015','M21057','202089','201958','200904','201951','202051','202072','201627','202011','202052','221064','201907','202023','221101','201842','201706','201708','201913','222014','201607','201663','201113','201835','221071','221098','200606','M21055','200806','201755','221097','221041','200601','201836','221066' )   | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR   | sort EMP_CD,PJT_CD  | where MM_YEAR  > 0.0  | case when  PJT_CD =  'P2200066'  and MM_03  > 0.0 then  0 otherwise MM_03  as MM_03  | case when  PJT_CD =  'P2200066'  and MM_04  > 0.0 then 0 otherwise  MM_04  as MM_04   |  stats sum(MM_01) as MM_01,sum(MM_02) as MM_02,sum(MM_03) as MM_03,sum(MM_04) as MM_04,sum(MM_05) as MM_05,sum(MM_06) as MM_06,sum(MM_07) as MM_07,sum(MM_08) as MM_08,sum(MM_09) as MM_09,sum(MM_10) as MM_10,sum(MM_11) as MM_11,sum(MM_12) as MM_12  by EMP_CD  | unpivot  EMP_CD MM_01,MM_02,MM_03,MM_04,MM_05,MM_06,MM_07,MM_08,MM_09,MM_10,MM_11,MM_12  |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD  | case when SU_EMP_NM is null then EMP_CD otherwise SU_EMP_NM as 이름  | replace col_id "MM_" "" | concat  col_id  , "월"  as 월 | sort 월  | case when  월  like '근무월수%'   then  '근무월수' otherwise 월 as 월  | replace 이름 "M" " 충원"  | adv heatmap sum(col_value) as MM   SPLITROW 월  SPLITCOL 이름 SORTROW asc
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where DEPT_CD  in (         '26110601','26110603','26110605' ) or  EMP_CD in  (                                                                                         '200601','200606','200806','200904','201106','201113','201576','201607','201627','201663','201706','201708','201730','201755','201769','201835','201836','201842','201859','201886','201907','201911','201913','201916','201935','201951','201958','202011','202023','202051','202052','202072','202089','221001','221041','221064','221066','221071','221097','221098','221101','222014','222015' )    | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  | where MM_YEAR  > 0.0  | case when  PJT_CD =  'P2200066'  and MM_03  > 0.0 then  0 otherwise MM_03  as MM_03  | case when  PJT_CD =  'P2200066'  and MM_04  > 0.0 then 0 otherwise  MM_04  as MM_04  | case when '05' = '01' then    MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    when '05' = '02' then MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    when '05' = '03' then MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12   when '05' = '04' then MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12   when '05' = '05' then MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12   when '05' = '06' then MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12   when '05' = '07' then MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12   when '05' = '08' then MM_08 + MM_09 + MM_10+ MM_11 + MM_12   when '05' = '09' then MM_09 + MM_10+ MM_11 + MM_12   when '05' = '10' then MM_10+ MM_11 + MM_12   when '05' = '11' then MM_11 + MM_12   when '05' = '12' then MM_12   otherwise 0 as  할당된MM합계  | typecast 할당된MM합계 real | stats sum(할당된MM합계) as 할당된MM합계  |  calculate 321.5 - 할당된MM합계  as  유휴MM
model name = 'mo_SYS_USER_INFO' model_owner = demo
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'  | where  ( DEPT_LEVEL = 3  or  ( CHILD = 'N' and DEPT_LEVEL < 3 ) )
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where CHILD = 'N' and  DEPT_LEVEL <=  '4'  and ( PARENT = '26110600'  or ID = '26110600'  ) | fields ID
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  mkdata [['','','','','', '','','','','','','','','','','','','','','','','']]  [ '영업코드','계약코드','PJT_CD','프로젝트분류','PJT시작일', 'PJT종료일','이름','팀','YEAR','연간MM','1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월']
model name = 'mo_SYS_USER_INFO' model_owner = demo |  where DEPT_CD  in (   26110601,26110603,26110605 , 26110600 ) and CLS_DATE >=  '20220101'  |  distinct EMP_CD |  sort EMP_CD
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200601,200606,200806,200904,201106,201113,201576,201607,201627,201663,201706,201708,201730,201755,201769,201835,201836,201842,201859,201886,201907,201911,201913,201916,201935,201951,201958,202011,202023,202051,202052,202072,202089,221001,221041,221064,221066,221071,221097,221098,221101,222014,222015 )  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                        'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200006','P2200048','P2200080','P2200091','P2200098','P2200114','P2200121','P2200135','P2200214' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  |  merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and    YEAR = PWU.ENT_YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   | case when  ENT_YY = '202201'  and '04' = '01' then MM_01   when ENT_YY = '202201'  and '04' = '02' then MM_01 + MM_02   when ENT_YY = '202201'  and '04' = '03' then MM_01 + MM_02 + MM_03   when ENT_YY = '202201'  and '04' = '04' then MM_01 + MM_02 + MM_03 + MM_04   when ENT_YY = '202201'  and '04' = '05' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05   when ENT_YY = '202201'  and '04' = '06' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06   when ENT_YY = '202201'  and '04' = '07' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07   when ENT_YY = '202201'  and '04' = '08' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08   when ENT_YY = '202201'  and '04' = '09' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09   when ENT_YY = '202201'  and '04' = '10' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10   when ENT_YY = '202201'  and '04' = '11' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11   when ENT_YY = '202201'  and '04' = '12'  then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    otherwise 0 as  투입된MM   |  case when ENT_YY = '202201'  then   MM_YEAR - 투입된MM  otherwise 0 as 남은MM  |  case when ENT_YY = '202201'   then   투입된MM  * PWU_WORK_UNITCOST otherwise 0 as 투입된_인건비  |  case when ENT_YY = '202201'  then   MM_YEAR * PWU_WORK_UNITCOST  otherwise 0 as 인건비합계  | fillna 인건비합계 0 | fields PJT_CD, EMP_CD, ENT_YY, MM_YEAR, 인건비합계, 투입된MM ,남은MM, 투입된_인건비   | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | stats sum(MM_YEAR) as MM_YEAR, sum(인건비합계) as 인건비합계,sum(투입된MM) as 투입된MM, sum(남은MM) as 남은MM, sum(투입된_인건비) as 투입된인건비 by MP_SALE_CD, ENT_YY  |  calculate 투입된MM  / MM_YEAR * 100  as 진도율  | fields MP_SALE_CD as 영업코드,진도율  | round 1 col = 진도율  | fillna 영업코드 | sort 영업코드
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                        'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200006','P2200048','P2200080','P2200091','P2200098','P2200114','P2200121','P2200135','P2200214' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD   | where vBPS_PJT_CD in (                                                        'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200006','P2200048','P2200080','P2200091','P2200098','P2200114','P2200121','P2200135','P2200214' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD   | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD    | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액  | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명   |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                                        'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200006','P2200048','P2200080','P2200091','P2200098','P2200114','P2200121','P2200135','P2200214' )  | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint  | typecast 추정비용 bigint | calculate  추정순매출 - 추정비용 as 추정이익 | typecast 추정이익 bigint | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | typecast 순매출  bigint  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율,MSCP_CONT_SEQ    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익
model name = 'mo_SALE_STATUS_ITEM' model_owner = demo |  where SALE_CD  = 'S2100262'  | sort  ITEM_SEQ,SUB_SEQ  |  typecast BUY_COST bigint |  typecast SALE_COST bigint  | substr BILL_TY 1 2 as L_CLASS | substr BILL_TY 3 2 as M_CLASS  | merge left_outer ( mo_PCOD_CLASS CLASS_TY = '007'   LEVEL_TY = '2' ) as PC  on L_CLASS = PC.L_CLASS and M_CLASS = PC.M_CLASS  | fields SALE_CD as 영업코드,  PC_CLASS_NM as 항목구분,SUPPLIER_NM as 공급회사,ITEM_NM as 항목,ENT_DATE as 납품예상일,CLS_DATE as 종료일,PJT_CD as 프로젝트코드,QTY as 수량,BUY_COST as 매입금액,SALE_COST as 매출금액,ITEM_BIGO as 비고
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo | where   SALE_CD =  'S2100262'  |  distinct PJT_CD |  where PJT_CD in  (                                                        'P1900199','P2100063','P2100283','P2100341','P2200096','P2200099','P2200100','P2200112','P2200119','P2200140','P2200145','P2200151','P2200168','P2100097','P2100115','P2100252','P2100273','P2100340','P2200006','P2200048','P2200080','P2200091','P2200098','P2200114','P2200121','P2200135','P2200214' )
model name = 'mo_PCOD_CLASS' model_owner = demo CLASS_TY='007' LEVEL_TY='2'