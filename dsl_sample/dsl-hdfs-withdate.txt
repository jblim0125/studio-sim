model name = '채널별_텍스트' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram') | where searchword = '건설'  | substr title 1 30 as title  | substr description 1 30 as description  | sort publishedat
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram') | stats sum(건수) as 건수 by label | sort -건수 | rename label 분류
model name = 'ex_vis_nlp' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | distinct searchword
model name = '최대언급채널_지표형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where keyword = '건설' and 매체 in ('youtube','google','naver','instagram') | stats sum(count) as 수 by 매체, keyword | sort -수
model name = 'word' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram') | where label != '중립' | stats sum(count) as count by label, word  | sql  " select  word, count, label, RANK() OVER (ORDER BY count desc) AS host_rank  from angora"  |fields host_rank  as 순위, label as `긍·부정`, word as 단어, count as 건수
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram') |  pivot sum(건수) SPLITROW 일시 SPLITCOL label | rename 일시 날짜
model name = 'word' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram')  | where  label = '긍정' | stats sum(count) as count by word  | sort -word
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram')  | where label = '긍정'  | sort -건수
model name = 'word' model_owner = dv2team start_date = 20220303000000 end_date = 20220303000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram')
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram') | stats sum(건수) as 전체
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram')  | where label = '부정'  | sort -건수
model name = 'word' model_owner = dv2team start_date = 20220224000000 end_date = 20220224000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram')
model name = 'word' model_owner = dv2team start_date = 20220217000000 end_date = 20220217000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram')
model name = 'word' model_owner = dv2team start_date = 20220301000000 end_date = 20220401000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram') | fields word as 단어, label as `긍·부정`,  count as 건수, week_in_month as 주차 | stats sum(건수) as 건수 by 단어,`긍·부정`, 주차 | where `긍·부정` != '중립' | sort -건수
model name = 'word' model_owner = dv2team start_date = 20220201000000 end_date = 20220301000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram') | fields word as 단어, label as `긍·부정`,  count as 건수, week_in_month as 주차 | stats sum(건수) as 건수 by 단어,`긍·부정`, 주차 | where `긍·부정` != '중립' | sort -건수
model name = 'word' model_owner = dv2team start_date = 20220101000000 end_date = 20220201000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram') | fields word as 단어, label as `긍·부정`,  count as 건수, week_in_month as 주차 | stats sum(건수) as 건수 by 단어,`긍·부정`, 주차 | where `긍·부정` != '중립' | sort -건수
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram') | stats sum(건수) as  건수 by label | where label = '부정' | calculate (건수/ 615) *100 as 값 | round 2 col = 값
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram') | stats sum(건수) as  건수 by label | where label = '긍정' | calculate (건수/ 615) *100 as 값 | round 2 col = 값
model name = '채널별_텍스트' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where publishedat between '2020-01-01' and '2022-03-03' and searchword = '건설' | rename title 제목, description 본문, channel 채널
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220610135000 end_date = 20220610135149  | count
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220610135000 end_date = 20220610135149
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220610135000 end_date = 20220610135156  | count
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220610135000 end_date = 20220610135156
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220610125200 end_date = 20220610135200
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220610125200 end_date = 20220610135200  | count
model name = '감정_추세형태' model_owner = dv2team start_date = 20220523132400 end_date = 20220523132520  | count
model name = '감정_추세형태' model_owner = dv2team start_date = 20220523132400 end_date = 20220523132520
model name = '카카오 일별 주가 (2020년 1월 1일 ~ 2021년 1월 1일)' model_owner = hwdhyeon start_date = 20220603135200 end_date = 20220603135330
model name = '카카오 일별 주가 (2020년 1월 1일 ~ 2021년 1월 1일)' model_owner = hwdhyeon start_date = 20220603135200 end_date = 20220603135330  | count
model name = 'TEST_TB_ICN_WEATHER_TEST' model_owner = dv2team start_date = 20220602091900 end_date = 20220602092017
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220602092000 end_date = 20220602092150
model name = 'DEMO_PIVOT' model_owner = demo start_date = 20220602092100 end_date = 20220602092250
model name = '샘플_데이터_차트_11_모션' model_owner = paru start_date = 20220602110700 end_date = 20220602110852
model name = '샘플_데이터_차트_11_모션' model_owner = paru start_date = 20220602110700 end_date = 20220602110852  | count
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram') | pivot sum(건수) SPLITROW 일시 SPLITCOL label | weeknumber 일시 "YYYY-MM-DD" as 주차 | substr 일시 1 4 as 년도  | concat 년도, "년 ",주차,"주차" as 날짜 | stats sum(중립) as 중립, sum(부정) as 부정, sum(긍정) as 긍정 by 날짜
model name = '카카오 일별 주가 (2020년 1월 1일 ~ 2021년 1월 1일)' model_owner = hwdhyeon start_date = 20220609132300 end_date = 20220609132454 | pivot count(*)
model name = '감정_추세형태' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where 검색어 = '건설' and 매체 in ('youtube','google','naver','instagram') | pivot sum(건수) SPLITROW 일시 SPLITCOL label | substr 일시 1 7 as 날짜 | stats sum(중립) as 중립, sum(부정) as 부정, sum(긍정) as 긍정 by 날짜
model name = 'word' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram')  | where  label = '중립' | stats sum(count) as count by word  | sort -word
model name = 'word' model_owner = dv2team start_date = 20200101000000 end_date = 20220303000000 | where searchword = '건설' and channel in ('youtube','google','naver','instagram')  | where  label = '부정' | stats sum(count) as count by word  | sort -word
model name = 'MME-attach' model_owner = jmlee start_date = 20220527082800 end_date = 20220527082924
model name = 'amhs_collect_sts_memory' model_owner = amhs start_date=202111241000 end_date=202111241000
model name = 'amhs_collect_sts_up' model_owner = amhs start_date=202111241000 end_date=202111241000
model name = 'amhs_collect_sts_down' model_owner = amhs start_date=202111241000 end_date=202111241000
model name = 'amhs_collect_sts_ping' model_owner = amhs start_date=202111241000 end_date=202111241000
model name = 'amhs_collect_sts_vehicle_session' model_owner = amhs start_date=202111241000 end_date=202111241000
model name = 'word' model_owner = dv2team start_date = 20220527155500 end_date = 20220527155607  | count
model name = 'word' model_owner = dv2team start_date = 20220527155500 end_date = 20220527155607
model name = '채널별_텍스트' model_owner = dv2team start_date = 20220527155500 end_date = 20220527155632
model name = '채널별_텍스트' model_owner = dv2team start_date = 20220527155500 end_date = 20220527155632  | count
model name = 'word' model_owner = dv2team start_date = 20220520103900 end_date = 20220520104040  | count
model name = 'word' model_owner = dv2team start_date = 20220520103900 end_date = 20220520104040
model name = 'MME-attach' model_owner = jmlee start_date = 20220601134700 end_date = 20220601134833
model name = 'S21_TBIS_ST_ACCRCY_data_1' model_owner = root start_date = 20211102000000 end_date = 20211102235959 |  stats sum(AVRG_2BELOW_CO) as 2분이하, sum(AVRG_2EXCESS_CO) as 2분초과 by STDR_DE | unpivot STDR_DE 2분이하, 2분초과 | rename col_id 평균, col_value 건수
model name = 'S21_TBIS_ST_CRSRD_OPRAT_data_1' model_owner = root start_date = 20211102000000 end_date = 20211102235959 |  stats sum(COMM_DELAY_ACMTL60) as 통신지연누계, sum(ACMTL_CO) as 누계건수 by AVRG_VE | unpivot AVRG_VE 통신지연누계, 누계건수 | rename col_id 평균속도, col_value 누계건수
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM | distinct ROUTE_NM
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields NODE_NM  | distinct NODE_NM
model name = 'S21_TBIS_ST_PASNGSPD_SUMMARY_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_TY | distinct ROUTE_TY
model name = 'S21_TBIS_ST_PASNGSPD_TMZON_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields TMZON as 시간대, ACMTL_CO , SPCE_VE | stats sum(ACMTL_CO) as 누계건수, avg(SPCE_VE) as 공간속도 by 시간대  | sort +시간대
model name = 'S21_TBIS_ST_TMGAP_TIME_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields TMZON as 시간대, PRECAR_DTGAP_NRMLTCO, PRECAR_DTGAP_ABNRMLCO1, PRECAR_DTGAP_ABNRMLCO2 | stats sum(PRECAR_DTGAP_NRMLTCO) as 앞차이격정상횟수, sum(PRECAR_DTGAP_ABNRMLCO1) as 앞차이격이상횟수1, sum(PRECAR_DTGAP_ABNRMLCO2) as 앞차이격이상횟수2 by 시간대
model name = 'TBIS_ST_VEH_RUNS' model_owner = root start_date = 20210119000000 end_date = 20210119000000 | fields STDR_DE as 일자, OPRAT_DSTNC, TOUR_TIME, CSTTN_SN  |stats sum(OPRAT_DSTNC) as 운행거리, sum(TOUR_TIME) as 여행시간, sum(CSTTN_SN) as 정류장갯수 by 일자
model name = 'S21_TBIS_ST_CSCTN_TIME_data_1' model_owner = root start_date = 20211101000000 end_date = 20211102235959 |  stats sum(COMM_DELAY_ACMTL60) as 통신지연누계, sum(ACMTL_CO) as 누계건수 by AVRG_VE | unpivot AVRG_VE 통신지연누계, 누계건수 | rename col_id 평균속도, col_value 누계건수
model name = 'TBIS_ST_VEH_RUNS' model_owner = root start_date = 20210119000000 end_date = 20210119000000 | fields STDR_DE as 일자, TKCAR_NMPR, GFF_NMPR  |stats sum(TKCAR_NMPR) as 승차인원, sum(GFF_NMPR) as 하차인원 by 일자
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, STDR_DETECT_CO62, STDR_DETECT_CO63, STDR_DETECT_CO65 | where 노선명 =  '102' | stats  sum(STDR_DETECT_CO62) as 기준검출건수62, sum(STDR_DETECT_CO63) as 기준검출건수63, sum(STDR_DETECT_CO65) as 기준검출건수65 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, DETECT_CO62, DETECT_CO63, DETECT_CO65 | where 노선명 =  '102' | stats sum(DETECT_CO62) as 검출건수62, sum(DETECT_CO63) as 검출건수63, sum(DETECT_CO65) as 검출건수65  by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명,   COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 노선명 =  '102' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, STPCAR_TIME_ACMTL, OPDR_TIME_ACMTL, PASAGE_TIME_ACMTL | where 노선명 =  '102' | stats sum(STPCAR_TIME_ACMTL) as 정차시간누계, sum(OPDR_TIME_ACMTL) as 개문시간누계, sum(PASAGE_TIME_ACMTL) as 통과시간누계  by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, AVRG_VE, ACMTL_CO | where 노선명 =  '102' | stats avg(AVRG_VE) as 평균속도, sum(ACMTL_CO) as 누계건수 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, TKCAR_NMPR, GFF_NMPR | where 노선명 =  '102'    | stats sum(TKCAR_NMPR) as 승차인원, sum(GFF_NMPR) as 하차인원 by 정류장명
model name = 'S21_TBIS_ST_PASNGSPD_SUMMARY_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_TY, STTN_TY | where ROUTE_TY ='1' | distinct STTN_TY
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, DETECT_CO62, DETECT_CO63, DETECT_CO65, STDR_DETECT_CO62, STDR_DETECT_CO63, STDR_DETECT_CO65 | where 노선명 =  '102' | stats sum(DETECT_CO62) as 검출건수62, sum(DETECT_CO63) as 검출건수63, sum(DETECT_CO65) as 검출건수65, sum(STDR_DETECT_CO62) as 기준검출건수62, sum(STDR_DETECT_CO63) as 기준검출건수63, sum(STDR_DETECT_CO65) as 기준검출건수65 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 정류장명 =  '흥국빌딩' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 노선명
model name = 'S21_TBIS_ST_PASNGSPD_SUMMARY_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields TMZON as 시간대, ACMTL_CO , SPCE_VE, ROUTE_TY as 노선유형, STTN_TY as 정류장유형  | where 노선유형 = '1' and 정류장유형 = '1'  | stats sum(ACMTL_CO) as 누계건수, avg(SPCE_VE) as 공간속도 by 시간대  | sort +시간대
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, TKCAR_NMPR, GFF_NMPR | where 노선명 =  '102' and 정류장명 =  '어린이교통공원'  | stats sum(TKCAR_NMPR) as 승차인원, sum(GFF_NMPR) as 하차인원 by 정류장명  | unpivot 정류장명 승차인원, 하차인원 | rename col_id 분류, col_value 승객수
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 정류장명 = '퇴계로3가' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 노선명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 정류장명 = '흥국빌딩' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 노선명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 정류장명 = '퇴계로5가.제일병원' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 노선명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 정류장명 = '백범삼거리' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 노선명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 정류장명 = '국민은행수유지점' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 노선명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 정류장명 = '한성대입구역_동소문로_진입_1' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 노선명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, TKCAR_NMPR, GFF_NMPR | where 노선명 =  '102' and 정류장명 = '상계주공3단지'  | stats sum(TKCAR_NMPR) as 승차인원, sum(GFF_NMPR) as 하차인원 by 정류장명  | unpivot 정류장명 승차인원, 하차인원 | rename col_id 분류, col_value 승객수
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명,   COMM_DELAY_ACMTL62, COMM_DELAY_ACMTL63, COMM_DELAY_ACMTL65  | where 노선명 = '102' | stats sum(COMM_DELAY_ACMTL62) as 통신지연누계62, sum(COMM_DELAY_ACMTL63) as 통신지연누계63, sum(COMM_DELAY_ACMTL65) as 통신지연누계65 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, STDR_DETECT_CO62, STDR_DETECT_CO63, STDR_DETECT_CO65 | where 노선명 = '102' | stats  sum(STDR_DETECT_CO62) as 기준검출건수62, sum(STDR_DETECT_CO63) as 기준검출건수63, sum(STDR_DETECT_CO65) as 기준검출건수65 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, AVRG_VE, ACMTL_CO | where 노선명 = '102' | stats avg(AVRG_VE) as 평균속도, sum(ACMTL_CO) as 누계건수 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, DETECT_CO62, DETECT_CO63, DETECT_CO65 | where 노선명 = '102' | stats sum(DETECT_CO62) as 검출건수62, sum(DETECT_CO63) as 검출건수63, sum(DETECT_CO65) as 검출건수65  by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, STPCAR_TIME_ACMTL, OPDR_TIME_ACMTL, PASAGE_TIME_ACMTL | where 노선명 = '102' | stats sum(STPCAR_TIME_ACMTL) as 정차시간누계, sum(OPDR_TIME_ACMTL) as 개문시간누계, sum(PASAGE_TIME_ACMTL) as 통과시간누계  by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, TKCAR_NMPR, GFF_NMPR | where 노선명 = '102'    | stats sum(TKCAR_NMPR) as 승차인원, sum(GFF_NMPR) as 하차인원 by 정류장명
model name = 'S21_TBIS_ST_STTN_OPRAT_data_1' model_owner = root start_date = 20211026000000 end_date = 20211026235959 | fields ROUTE_NM as 노선명,  NODE_NM as 정류장명, DETECT_CO62, DETECT_CO63, DETECT_CO65, STDR_DETECT_CO62, STDR_DETECT_CO63, STDR_DETECT_CO65 | where 노선명 = '102' | stats sum(DETECT_CO62) as 검출건수62, sum(DETECT_CO63) as 검출건수63, sum(DETECT_CO65) as 검출건수65, sum(STDR_DETECT_CO62) as 기준검출건수62, sum(STDR_DETECT_CO63) as 기준검출건수63, sum(STDR_DETECT_CO65) as 기준검출건수65 by 정류장명
model name = 'S20_ICC_ST_MONTHLY_TOPIS_TRF_ALL_STATS_data' model_owner = gksekdus12 start_date = 20211001000000 end_date = 20211117093457 | fields STND_MON as 월, TIME_GRP_CD as 시간대그룹, TIME_GRP_NM as 시간대, AVG_SPD as 평균속도  | sort 시간대그룹
