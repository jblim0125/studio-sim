model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD in (    'P2200100' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  |  merge left_outer ( mo_SYS_USER_INFO ) as SU on EMP_CD = SU.EMP_CD  | concat "S2100262" , ""  as 영업코드    | merge left_outer ( mo_BIZ_PROJECT ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트' when BP_L_CLASS = '21' then '과제개발프로젝트' when BP_L_CLASS = '31' then '연구개발프로젝트' when BP_L_CLASS = '90' then '그룹투자프로젝트' when BP_L_CLASS = '91' then '전사투자프로젝트' otherwise '기타' as  프로젝트분류   | fields  영업코드,계약코드,PJT_CD,프로젝트분류,BP_ENT_DATE  as PJT시작일, BP_CLS_DATE as PJT종료일,SU_EMP_NM as 이름,SU_DEPT_NM as 팀,YEAR,MM_YEAR as 연간MM,인건비_YEAR, MM_01 as 1월,MM_02 as 2월,MM_03 as 3월,MM_04 as  4월,MM_05 as 5월,MM_06 as 6월,MM_07 as 7월,MM_08 as 8월,MM_09 as 9월,MM_10 as 10월,MM_11 as 11월,MM_12 as 12월  |  where 연간MM > 0.0  | sort PJT_CD  | fillna 이름 투입예정  | calculate add col  | fillna 영업코드 합계  | typecast 인건비_YEAR bigint
model name = 'mo_BIZ_PROJECT' model_owner = demo
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26110512' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast 날짜 date 'YYYYMMDD', 날짜 date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26110512' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 EVENT_TIME | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 EVENT_TIME
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10 | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where CHILD = 'N' and  DEPT_LEVEL <=  '4'  and ( PARENT = '26110700'  or ID = '26110700'  ) | fields ID
model name = 'mo_SYS_USER_INFO' model_owner = demo |  where DEPT_CD  in (   26110711,26110712 , 26110700 ) and CLS_DATE >=  '20220101'  |  distinct EMP_CD |  sort EMP_CD
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200005,200102,200902,201208,201314,201413,201424,201426,201504,201513,201565,201632,201734,201739,201768,201834,202026,221008,221020,221021,221056,221077,221092,222018,222021,222023 )  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                          'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  |  merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and    YEAR = PWU.ENT_YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   | case when  ENT_YY = '202201'  and '04' = '01' then MM_01   when ENT_YY = '202201'  and '04' = '02' then MM_01 + MM_02   when ENT_YY = '202201'  and '04' = '03' then MM_01 + MM_02 + MM_03   when ENT_YY = '202201'  and '04' = '04' then MM_01 + MM_02 + MM_03 + MM_04   when ENT_YY = '202201'  and '04' = '05' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05   when ENT_YY = '202201'  and '04' = '06' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06   when ENT_YY = '202201'  and '04' = '07' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07   when ENT_YY = '202201'  and '04' = '08' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08   when ENT_YY = '202201'  and '04' = '09' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09   when ENT_YY = '202201'  and '04' = '10' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10   when ENT_YY = '202201'  and '04' = '11' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11   when ENT_YY = '202201'  and '04' = '12'  then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    otherwise 0 as  투입된MM   |  case when ENT_YY = '202201'  then   MM_YEAR - 투입된MM  otherwise 0 as 남은MM  |  case when ENT_YY = '202201'   then   투입된MM  * PWU_WORK_UNITCOST otherwise 0 as 투입된_인건비  |  case when ENT_YY = '202201'  then   MM_YEAR * PWU_WORK_UNITCOST  otherwise 0 as 인건비합계  | fillna 인건비합계 0 | fields PJT_CD, EMP_CD, ENT_YY, MM_YEAR, 인건비합계, 투입된MM ,남은MM, 투입된_인건비   | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | stats sum(MM_YEAR) as MM_YEAR, sum(인건비합계) as 인건비합계,sum(투입된MM) as 투입된MM, sum(남은MM) as 남은MM, sum(투입된_인건비) as 투입된인건비 by MP_SALE_CD, ENT_YY  |  calculate 투입된MM  / MM_YEAR * 100  as 진도율  | fields MP_SALE_CD as 영업코드,진도율  | round 1 col = 진도율  | fillna 영업코드 | sort 영업코드
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                          'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD   | where vBPS_PJT_CD in (                                                          'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD   | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD    | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액  | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명   |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                                          'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )  | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint  | typecast 추정비용 bigint | calculate  추정순매출 - 추정비용 as 추정이익 | typecast 추정이익 bigint | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | typecast 순매출  bigint  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율,MSCP_CONT_SEQ    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo | where   SALE_CD =  'S2100260'  |  distinct PJT_CD |  where PJT_CD in  (                                                          'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )
model name = 'mo_SALE_STATUS_ITEM' model_owner = demo |  where SALE_CD  = 'S2100260'  | sort  ITEM_SEQ,SUB_SEQ  |  typecast BUY_COST bigint |  typecast SALE_COST bigint  | substr BILL_TY 1 2 as L_CLASS | substr BILL_TY 3 2 as M_CLASS  | merge left_outer ( mo_PCOD_CLASS CLASS_TY = '007'   LEVEL_TY = '2' ) as PC  on L_CLASS = PC.L_CLASS and M_CLASS = PC.M_CLASS  | fields SALE_CD as 영업코드,  PC_CLASS_NM as 항목구분,SUPPLIER_NM as 공급회사,ITEM_NM as 항목,ENT_DATE as 납품예상일,CLS_DATE as 종료일,PJT_CD as 프로젝트코드,QTY as 수량,BUY_COST as 매입금액,SALE_COST as 매출금액,ITEM_BIGO as 비고
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD in (      'P2200150','P2200264' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  |  merge left_outer ( mo_SYS_USER_INFO ) as SU on EMP_CD = SU.EMP_CD  | concat "S2100260" , ""  as 영업코드    | merge left_outer ( mo_BIZ_PROJECT ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트' when BP_L_CLASS = '21' then '과제개발프로젝트' when BP_L_CLASS = '31' then '연구개발프로젝트' when BP_L_CLASS = '90' then '그룹투자프로젝트' when BP_L_CLASS = '91' then '전사투자프로젝트' otherwise '기타' as  프로젝트분류   | fields  영업코드,계약코드,PJT_CD,프로젝트분류,BP_ENT_DATE  as PJT시작일, BP_CLS_DATE as PJT종료일,SU_EMP_NM as 이름,SU_DEPT_NM as 팀,YEAR,MM_YEAR as 연간MM,인건비_YEAR, MM_01 as 1월,MM_02 as 2월,MM_03 as 3월,MM_04 as  4월,MM_05 as 5월,MM_06 as 6월,MM_07 as 7월,MM_08 as 8월,MM_09 as 9월,MM_10 as 10월,MM_11 as 11월,MM_12 as 12월  |  where 연간MM > 0.0  | sort PJT_CD  | fillna 이름 투입예정  | calculate add col  | fillna 영업코드 합계  | typecast 인건비_YEAR bigint
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR  |  substr EVENT_TIME  15 2 as MIN
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR  |  substr EVENT_TIME  15 2 as MIN | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR  |  substr EVENT_TIME  15 2 as MIN |  substr EVENT_TIME  18 2 as SEC
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | fields EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR  |  substr EVENT_TIME  15 2 as MIN |  substr EVENT_TIME  18 2 as SEC | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR  |  substr EVENT_TIME  15 2 as MIN |  substr EVENT_TIME  18 2 as SEC  | fields YEAR, HOUR, MIN, SEC | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME  |  substr EVENT_TIME  1 10 as YEAR |  substr EVENT_TIME  12 2 as HOUR  |  substr EVENT_TIME  15 2 as MIN |  substr EVENT_TIME  18 2 as SEC  | fields YEAR, HOUR, MIN, SEC
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | substr EVENT_TIME  1 10 as YEAR | substr EVENT_TIME  12 2 as HOUR | substr EVENT_TIME  15 2 as MIN | substr EVENT_TIME  18 2 as SEC | fields YEAR, HOUR, MIN, SEC
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where CHILD = 'N' and  DEPT_LEVEL <=  '4'  and ( PARENT = '26110300'  or ID = '26110300'  ) | fields ID
model name = 'mo_SYS_USER_INFO' model_owner = demo |  where DEPT_CD  in (   26110301,26110302,26110314 , 26110300 ) and CLS_DATE >=  '20220101'  |  distinct EMP_CD |  sort EMP_CD
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200095,200504,200507,201203,201209,201401,201435,201439,201507,201701,201756,201804,201825,201865,201881,201883,201902,201921,201928,202018,202021,202055,202060,202063,202074,202076,221029,221036,221043,221055,221091 )  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                      'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  |  merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and    YEAR = PWU.ENT_YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   | case when  ENT_YY = '202201'  and '04' = '01' then MM_01   when ENT_YY = '202201'  and '04' = '02' then MM_01 + MM_02   when ENT_YY = '202201'  and '04' = '03' then MM_01 + MM_02 + MM_03   when ENT_YY = '202201'  and '04' = '04' then MM_01 + MM_02 + MM_03 + MM_04   when ENT_YY = '202201'  and '04' = '05' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05   when ENT_YY = '202201'  and '04' = '06' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06   when ENT_YY = '202201'  and '04' = '07' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07   when ENT_YY = '202201'  and '04' = '08' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08   when ENT_YY = '202201'  and '04' = '09' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09   when ENT_YY = '202201'  and '04' = '10' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10   when ENT_YY = '202201'  and '04' = '11' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11   when ENT_YY = '202201'  and '04' = '12'  then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    otherwise 0 as  투입된MM   |  case when ENT_YY = '202201'  then   MM_YEAR - 투입된MM  otherwise 0 as 남은MM  |  case when ENT_YY = '202201'   then   투입된MM  * PWU_WORK_UNITCOST otherwise 0 as 투입된_인건비  |  case when ENT_YY = '202201'  then   MM_YEAR * PWU_WORK_UNITCOST  otherwise 0 as 인건비합계  | fillna 인건비합계 0 | fields PJT_CD, EMP_CD, ENT_YY, MM_YEAR, 인건비합계, 투입된MM ,남은MM, 투입된_인건비   | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | stats sum(MM_YEAR) as MM_YEAR, sum(인건비합계) as 인건비합계,sum(투입된MM) as 투입된MM, sum(남은MM) as 남은MM, sum(투입된_인건비) as 투입된인건비 by MP_SALE_CD, ENT_YY  |  calculate 투입된MM  / MM_YEAR * 100  as 진도율  | fields MP_SALE_CD as 영업코드,진도율  | round 1 col = 진도율  | fillna 영업코드 | sort 영업코드
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                      'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD   | where vBPS_PJT_CD in (                                                      'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD   | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD    | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액  | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명   |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                                      'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint  | typecast 추정비용 bigint | calculate  추정순매출 - 추정비용 as 추정이익 | typecast 추정이익 bigint | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | typecast 순매출  bigint  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율,MSCP_CONT_SEQ    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo | where   SALE_CD =  'S2200022'  |  distinct PJT_CD |  where PJT_CD in  (                                                      'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )
model name = 'mo_SALE_STATUS_ITEM' model_owner = demo |  where SALE_CD  = 'S2200022'  | sort  ITEM_SEQ,SUB_SEQ  |  typecast BUY_COST bigint |  typecast SALE_COST bigint  | substr BILL_TY 1 2 as L_CLASS | substr BILL_TY 3 2 as M_CLASS  | merge left_outer ( mo_PCOD_CLASS CLASS_TY = '007'   LEVEL_TY = '2' ) as PC  on L_CLASS = PC.L_CLASS and M_CLASS = PC.M_CLASS  | fields SALE_CD as 영업코드,  PC_CLASS_NM as 항목구분,SUPPLIER_NM as 공급회사,ITEM_NM as 항목,ENT_DATE as 납품예상일,CLS_DATE as 종료일,PJT_CD as 프로젝트코드,QTY as 수량,BUY_COST as 매입금액,SALE_COST as 매출금액,ITEM_BIGO as 비고
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD in (      'P2200015','P2200104' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  |  merge left_outer ( mo_SYS_USER_INFO ) as SU on EMP_CD = SU.EMP_CD  | concat "S2200022" , ""  as 영업코드    | merge left_outer ( mo_BIZ_PROJECT ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트' when BP_L_CLASS = '21' then '과제개발프로젝트' when BP_L_CLASS = '31' then '연구개발프로젝트' when BP_L_CLASS = '90' then '그룹투자프로젝트' when BP_L_CLASS = '91' then '전사투자프로젝트' otherwise '기타' as  프로젝트분류   | fields  영업코드,계약코드,PJT_CD,프로젝트분류,BP_ENT_DATE  as PJT시작일, BP_CLS_DATE as PJT종료일,SU_EMP_NM as 이름,SU_DEPT_NM as 팀,YEAR,MM_YEAR as 연간MM,인건비_YEAR, MM_01 as 1월,MM_02 as 2월,MM_03 as 3월,MM_04 as  4월,MM_05 as 5월,MM_06 as 6월,MM_07 as 7월,MM_08 as 8월,MM_09 as 9월,MM_10 as 10월,MM_11 as 11월,MM_12 as 12월  |  where 연간MM > 0.0  | sort PJT_CD  | fillna 이름 투입예정  | calculate add col  | fillna 영업코드 합계  | typecast 인건비_YEAR bigint
model name = '속도테스트_TB_CO_MME' model_owner = root
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team mkdata [['2022-05-31 10:36:15']] ['date']
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team mkdata [['2022-05-31 10:36:15']] ['date'] | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team mkdata [[2022-05-31 10:36:15]] [date] | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team mkdata [[2022-05-31 10:36:15]] [date]
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | mkdata [['2022-05-31 10:36:15']] ['date'] | count
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | mkdata [['2022-05-31 10:36:15']] ['date']
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo | where   SALE_CD =  'S2200094'  |  distinct PJT_CD |  where PJT_CD in  (                                                      'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )
model name = 'mo_SALE_STATUS_ITEM' model_owner = demo |  where SALE_CD  = 'S2200094'  | sort  ITEM_SEQ,SUB_SEQ  |  typecast BUY_COST bigint |  typecast SALE_COST bigint  | substr BILL_TY 1 2 as L_CLASS | substr BILL_TY 3 2 as M_CLASS  | merge left_outer ( mo_PCOD_CLASS CLASS_TY = '007'   LEVEL_TY = '2' ) as PC  on L_CLASS = PC.L_CLASS and M_CLASS = PC.M_CLASS  | fields SALE_CD as 영업코드,  PC_CLASS_NM as 항목구분,SUPPLIER_NM as 공급회사,ITEM_NM as 항목,ENT_DATE as 납품예상일,CLS_DATE as 종료일,PJT_CD as 프로젝트코드,QTY as 수량,BUY_COST as 매입금액,SALE_COST as 매출금액,ITEM_BIGO as 비고
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD in (    'P2200193' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  |  merge left_outer ( mo_SYS_USER_INFO ) as SU on EMP_CD = SU.EMP_CD  | concat "S2200094" , ""  as 영업코드    | merge left_outer ( mo_BIZ_PROJECT ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트' when BP_L_CLASS = '21' then '과제개발프로젝트' when BP_L_CLASS = '31' then '연구개발프로젝트' when BP_L_CLASS = '90' then '그룹투자프로젝트' when BP_L_CLASS = '91' then '전사투자프로젝트' otherwise '기타' as  프로젝트분류   | fields  영업코드,계약코드,PJT_CD,프로젝트분류,BP_ENT_DATE  as PJT시작일, BP_CLS_DATE as PJT종료일,SU_EMP_NM as 이름,SU_DEPT_NM as 팀,YEAR,MM_YEAR as 연간MM,인건비_YEAR, MM_01 as 1월,MM_02 as 2월,MM_03 as 3월,MM_04 as  4월,MM_05 as 5월,MM_06 as 6월,MM_07 as 7월,MM_08 as 8월,MM_09 as 9월,MM_10 as 10월,MM_11 as 11월,MM_12 as 12월  |  where 연간MM > 0.0  | sort PJT_CD  | fillna 이름 투입예정  | calculate add col  | fillna 영업코드 합계  | typecast 인건비_YEAR bigint
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where CHILD = 'N' and  DEPT_LEVEL <=  '4'  and ( PARENT = '26110700'  or ID = '26110700'  )  |  where ID not in ( 26210311, 26210313, 26210319, 26210321 )  | fields ID
model name = 'mo_SYS_USER_INFO' model_owner = demo | where   DEPT_CD in  ( 26110711,26110712, 26110700)   |  where CLS_DATE >=  '20220101'  |  distinct EMP_CD |  sort EMP_CD
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200005,200102,200902,201208,201314,201413,201424,201426,201504,201513,201565,201632,201734,201739,201768,201834,202026,221008,221020,221021,221056,221077,221092,222018,222021,222023 )   | where L_CLASS = '11'  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |   where PJT_CD in (                                        'P2000304','P2100092','P2100126','P2100141','P2200037','P2200123','P2200131','P2200170','P2200174','P2200204','P2200234','P2000187','P2100338','P2200034','P2200122','P2200150','P2200155','P2200236','P2200248' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR    |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | substr ENT_YY 1 4 as  YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD  | where vBPS_PJT_CD in (                                        'P2000304','P2100092','P2100126','P2100141','P2200037','P2200123','P2200131','P2200170','P2200174','P2200204','P2200234','P2000187','P2100338','P2200034','P2200122','P2200150','P2200155','P2200236','P2200248' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD  | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD   | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액    | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명  |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                        'P2000304','P2100092','P2100126','P2100141','P2200037','P2200123','P2200131','P2200170','P2200174','P2200204','P2200234','P2000187','P2100338','P2200034','P2200122','P2200150','P2200155','P2200236','P2200248' )    | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint   | calculate  추정순매출 - 추정비용 as 추정이익  | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익  | typecast 추정이익 bigint | typecast 순매출  bigint | typecast 추정비용 bigint
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where ID = '26110700'   and USE_YN = 'Y'  |  fields DEPT_NM
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where ENT_YY = '202201'   | where PJT_CD in (                                                       'P2100245','P2200003','P2200004','P2200005','P2200011','P2200026','P2200028','P2200115','P2200127','P2200209','P2200212','P2100330','P2200007','P2200012','P2200013','P2200014','P2200025','P2200027','P2200085','P2200086','P2200120','P2200177','P2200179','P2200210','P2200211','P2200213' )   | where EMP_CD in (                                                                                                                                                                                                                                                               '201513','201513','202081','221077','200005','200102','200902','201208','201314','201413','201424','201426','201504','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221092','222018','222021','222023'  )  | where MM_YEAR > 0.0  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ENT_YEAR = '2022' ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN    | calculate  MM_YEAR * PWU_WORK_UNITCOST as   연구개발_전사투자인건비  | stats sum(연구개발_전사투자인건비) as 연구개발_전사투자인건비
model name = 'LTER_TB_PS_MME_ATCH_ENB' model_owner = dv2team | top 1 - EVENT_TIME | substr EVENT_TIME  1 4 as YYYY | substr EVENT_TIME  6 2 as MM | substr EVENT_TIME  9 2 as DD | substr EVENT_TIME  12 2 as HH | substr EVENT_TIME  15 2 as MIN | substr EVENT_TIME  18 2 as SS | fields YYYY, MM, DD, HH, MIN, SS
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                    'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  |  merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and    YEAR = PWU.ENT_YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   | case when  ENT_YY = '202201'  and '04' = '01' then MM_01   when ENT_YY = '202201'  and '04' = '02' then MM_01 + MM_02   when ENT_YY = '202201'  and '04' = '03' then MM_01 + MM_02 + MM_03   when ENT_YY = '202201'  and '04' = '04' then MM_01 + MM_02 + MM_03 + MM_04   when ENT_YY = '202201'  and '04' = '05' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05   when ENT_YY = '202201'  and '04' = '06' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06   when ENT_YY = '202201'  and '04' = '07' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07   when ENT_YY = '202201'  and '04' = '08' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08   when ENT_YY = '202201'  and '04' = '09' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09   when ENT_YY = '202201'  and '04' = '10' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10   when ENT_YY = '202201'  and '04' = '11' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11   when ENT_YY = '202201'  and '04' = '12'  then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    otherwise 0 as  투입된MM   |  case when ENT_YY = '202201'  then   MM_YEAR - 투입된MM  otherwise 0 as 남은MM  |  case when ENT_YY = '202201'   then   투입된MM  * PWU_WORK_UNITCOST otherwise 0 as 투입된_인건비  |  case when ENT_YY = '202201'  then   MM_YEAR * PWU_WORK_UNITCOST  otherwise 0 as 인건비합계  | fillna 인건비합계 0 | fields PJT_CD, EMP_CD, ENT_YY, MM_YEAR, 인건비합계, 투입된MM ,남은MM, 투입된_인건비   | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | stats sum(MM_YEAR) as MM_YEAR, sum(인건비합계) as 인건비합계,sum(투입된MM) as 투입된MM, sum(남은MM) as 남은MM, sum(투입된_인건비) as 투입된인건비 by MP_SALE_CD, ENT_YY  |  calculate 투입된MM  / MM_YEAR * 100  as 진도율  | fields MP_SALE_CD as 영업코드,진도율  | round 1 col = 진도율  | fillna 영업코드 | sort 영업코드
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                    'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD   | where vBPS_PJT_CD in (                                                    'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD   | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD    | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액  | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명   |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                                    'P2100229','P2100337','P2200015','P2200018','P2200040','P2200084','P2200104','P2200106','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint  | typecast 추정비용 bigint | calculate  추정순매출 - 추정비용 as 추정이익 | typecast 추정이익 bigint | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | typecast 순매출  bigint  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율,MSCP_CONT_SEQ    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'  | where  ( DEPT_LEVEL = 3  or  ( CHILD = 'N' and DEPT_LEVEL < 3 ) )  | where DEPT_NM  not in (  '영업그룹', 'NI솔루션기획실')
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where  CHILD = 'N' and  DEPT_LEVEL <=  '4'  and  ( PARENT = '26110700'  or ID = '26110700'  )  | fields ID
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in (                                                      '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )   | distinct PJT_CD
model name = 'mo_BIZ_PROJECT' model_owner = demo |  where  CLS_DATE >= '20220101'  | where PJT_CD  in (                                                           'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )    |  case when  APP_YN = '1' then '승인' otherwise  '미승인'  as 승인여부  |  case when L_CLASS = '11' then '과제수행프로젝트'      when L_CLASS = '21' then '과제개발프로젝트'      when L_CLASS = '31' then '연구개발프로젝트'      when L_CLASS = '90' then '그룹투자프로젝트'      when L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  | fields PJT_CD, 구분,DEPT_CD,PJT_NM,PJTPM_CD,ENT_DATE,CLS_DATE,AMT_CONT,승인여부,MP_SALE_CD,MP_CONT_CD, MP_CONT_SEQ,L_CLASS    | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on DEPT_CD = SD.ID  | merge left_outer ( mo_SYS_USER_INFO ) as SU on PJTPM_CD = SU.EMP_CD  | fields PJT_CD,구분,SD_DEPT_NM  as 등록팀,SU_EMP_NM as PM이름,SU_DEPT_NM as PM팀,PJT_NM as 프로젝트명,ENT_DATE as 시작일,CLS_DATE as 종료일,승인여부  | sort PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD  in (                                                           'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )   | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  | where BP_L_CLASS  not in ( '91', '31' )    | rename BP_PJT_NM 프로젝트명  | where EMP_CD not in (                                                      '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )    |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD  | rename SU_DEPT_NM  팀 | rename SU_DEPT_CD  팀코드  | where  팀코드 not in (      '26110711','26110712' )    | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on  팀코드 = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  팀코드  as  그룹코드  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on 그룹코드 = NSD.ID  | rename NSD_DEPT_NM 그룹명  | fillna 그룹명  | case when 그룹명 = '연구소'  and  팀  not in ( 'AI응용연구팀', 'AI플랫폼연구팀' ) then  '연구소'   when 그룹명 = '연구소'  and  팀   in ( 'AI응용연구팀', 'AI플랫폼연구팀' ) then '연구소_AI'  when 그룹명 = '(주)모비젠'  then 팀  otherwise  그룹명 as 그룹명    |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | where   EMP_CD not like 'M%'    | calculate MM_YEAR * PWU_WORK_UNITCOST as  연간인건비  | fields EMP_CD,SU_EMP_NM as 이름,팀, PJT_CD,구분,프로젝트명,MM_YEAR as  연간MM,연간인건비,팀코드,그룹명  | sort  PJT_CD  | stats sum(연간MM) as MM합계, sum(연간인건비)  as  인건비합계 by 그룹명  | sort - 인건비합계  | calculate add col  MM합계, 인건비합계  | typecast 인건비합계 bigint  | fillna 그룹명 합계
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD  in (                                                           'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )   | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  | where BP_L_CLASS  not in ( '91', '31' )   | rename BP_PJT_NM 프로젝트명  | where EMP_CD not in (                                                      '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )     |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD  | rename SU_DEPT_NM  팀 | rename SU_DEPT_CD  팀코드  | where  팀코드 not in (      '26110711','26110712' )      | merge left_outer ( mo_SYS_DEPT_INFO  USE_YN = 'Y' ) as SD on  팀코드 = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  팀코드  as  그룹코드  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on 그룹코드 = NSD.ID  | rename NSD_DEPT_NM 그룹명  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | where   EMP_CD not like 'M%'    | calculate MM_YEAR * PWU_WORK_UNITCOST as  연간인건비  | fields EMP_CD,SU_EMP_NM as 이름,팀,그룹명, PJT_CD,구분,프로젝트명,MM_YEAR as  연간MM,연간인건비,팀코드  | sort  PJT_CD  | calculate add col 연간인건비  | typecast 연간인건비 bigint  | fillna 그룹명 합계
model name = 'mo_SYS_DEPT_INFO' model_owner = demo
model name = 'mo_SYS_DEPT_INFO' model_owner = demo USE_YN='Y'
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'  | where  ( DEPT_LEVEL = 3  or  ( CHILD = 'N' and DEPT_LEVEL < 3 ) )  | where DEPT_NM not in ( '영업그룹' )
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in (                                                      '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )   | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where DEPT_CD  in (       '26110711','26110712' ) or  EMP_CD in  (                                                       '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )     | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD   | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  |  merge left_outer ( mo_SYS_USER_INFO   ) as PJTSU on BP_PJTPM_CD =  PJTSU.EMP_CD  | rename PJTSU_DEPT_CD PM_DEPT_CD  | rename PJTSU_DEPT_NM PM부서  | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on PM_DEPT_CD = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  PM_DEPT_CD  as PM그룹_ID  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on PM그룹_ID = NSD.ID  | rename NSD_DEPT_NM PM그룹  |  case when  PM_DEPT_CD  in ( 26110711,26110712, 26110700  ) then 1 otherwise 0  as FLAG   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  | sort EMP_CD,PJT_CD  | fields EMP_CD,SU_EMP_NM as 이름,SU_DEPT_NM as 팀, PJT_CD,구분, BP_PJT_NM as 프로젝트명,PM부서,PM그룹,MM_YEAR as  연간MM,연간인건비,MM_01 as 1월,MM_02 as 2월,MM_03 as 3월,MM_04 as 4월,MM_05 as 5월,MM_06 as 6월,MM_07 as 7월,MM_08 as 8월,MM_09 as 9월,MM_10 as 10월,MM_11 as 11월,MM_12 as 12월,FLAG
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where DEPT_CD  in (       '26110711','26110712' ) or  EMP_CD in  (                                                       '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )     | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD    | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  |  merge left_outer ( mo_SYS_USER_INFO   ) as PJTSU on BP_PJTPM_CD =  PJTSU.EMP_CD  | rename PJTSU_DEPT_NM PM부서 | rename PJTSU_DEPT_CD PM_DEPT_CD  | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on PM_DEPT_CD = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  PM_DEPT_CD  as PM그룹_ID  |  case when PM_DEPT_CD  in ( 26110711,26110712, 26110700  ) then 1 otherwise 0  as FLAG  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  연간인건비  | fields EMP_CD,SU_EMP_NM as 이름,SU_DEPT_NM as 팀, PJT_CD,구분, PM부서,MM_YEAR as  연간MM,연간인건비,FLAG,PM_DEPT_CD,PM그룹_ID  |  where FLAG = 0  or 구분  in ( '전사투자프로젝트', '연구개발프로젝트' )  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on PM그룹_ID = NSD.ID  | rename NSD_DEPT_NM PM그룹  | case when  구분  in ( '연구개발프로젝트', '전사투자프로젝트')  then '전사투자/연구개발'   otherwise PM그룹  as 그룹명  |  stats countDistinct(PJT_CD) as 프로젝트수, sum(연간MM) as MM합계, sum(연간인건비)  as  인건비합계 by  그룹명  | sort  - 인건비합계   |  case when 그룹명 is null or 그룹명 = '' then '그룹명 없음'  otherwise 그룹명 as 그룹명  | calculate add col 인건비합계, MM합계, 프로젝트수  | typecast 인건비합계 bigint   | fillna 그룹명  합계
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY  | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200005,200102,200902,201208,201314,201413,201424,201426,201504,201513,201565,201632,201734,201739,201768,201834,202026,221008,221020,221021,221056,221077,221092,222018,222021,222023 )  | where L_CLASS = '11'  | distinct PJT_CD
model name='12db677a-94a6-428a-9437-d4fa93a60d4f'  |  where  CLS_DATE >= '20220101'  and CLS_DATE  != '99991231'  |    merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as SP on PJT_CD = SP.PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where DEPT_CD  in (       '26110711','26110712' ) or  EMP_CD in  (                                                       '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )    | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD   | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  |  merge left_outer ( mo_SYS_USER_INFO   ) as PJTSU on BP_PJTPM_CD =  PJTSU.EMP_CD  | rename PJTSU_DEPT_NM PM부서 | rename PJTSU_DEPT_CD PM_DEPT_CD  | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on PM_DEPT_CD = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  PM_DEPT_CD  as PM그룹_ID  |  case when PM_DEPT_CD  in ( 26110711,26110712, 26110700  ) then 1 otherwise 0  as FLAG  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  연간인건비  | fields EMP_CD,SU_EMP_NM as 이름,SU_DEPT_NM as 팀, PJT_CD,구분, PM부서,MM_YEAR as  연간MM,연간인건비,FLAG,PM_DEPT_CD,PM그룹_ID  |  where FLAG = 0  or 구분  in ( '전사투자프로젝트', '연구개발프로젝트' )  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on PM그룹_ID = NSD.ID  | rename NSD_DEPT_NM PM그룹  | case when  구분  in ( '연구개발프로젝트', '전사투자프로젝트')  then '전사투자/연구개발'   otherwise PM그룹  as 그룹명  |  stats countDistinct(PJT_CD) as 프로젝트수, sum(연간MM) as MM합계, sum(연간인건비)  as  인건비합계 by  그룹명  | sort  - 인건비합계   |  case when 그룹명 is null or 그룹명 = '' then '그룹명 없음'  otherwise 그룹명 as 그룹명  | where 그룹명 != '전사투자/연구개발'  | calculate add col 인건비합계, MM합계, 프로젝트수  | typecast 인건비합계 bigint   | fillna 그룹명  합계
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD  in (                                                           'P2000304','P2100092','P2100126','P2100141','P2200037','P2200054','P2200115','P2200123','P2200131','P2200170','P2200174','P2200185','P2200204','P2200234','P2000187','P2100287','P2100338','P2100348','P2200034','P2200117','P2200122','P2200134','P2200150','P2200155','P2200236','P2200246','P2200248','P2200264' )   | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  | where BP_L_CLASS  not in ( '91', '31' )   | rename BP_PJT_NM 프로젝트명  | where EMP_CD not in (                                                      '200005','200102','200902','201208','201314','201413','201424','201426','201504','201513','201565','201632','201734','201739','201768','201834','202026','221008','221020','221021','221056','221077','221092','222018','222021','222023' )    |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD  | rename SU_DEPT_NM  팀 | rename SU_DEPT_CD  팀코드  | where  팀코드 not in (      '26110711','26110712' )    | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on  팀코드 = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  팀코드  as  그룹코드  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on 그룹코드 = NSD.ID  | rename NSD_DEPT_NM 그룹명  | fillna 그룹명  | case when 그룹명 = '연구소'  and  팀  not in ( 'AI응용연구팀', 'AI플랫폼연구팀' ) then  '연구소'   when 그룹명 = '연구소'  and  팀   in ( 'AI응용연구팀', 'AI플랫폼연구팀' ) then '연구소_AI'  when 그룹명 = '(주)모비젠'  then 팀  otherwise  그룹명 as 그룹명   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | where   EMP_CD not like 'M%'    | calculate MM_YEAR * PWU_WORK_UNITCOST as  연간인건비  | fields EMP_CD,SU_EMP_NM as 이름,팀, PJT_CD,구분,프로젝트명,MM_YEAR as  연간MM,연간인건비,팀코드,그룹명  | sort  PJT_CD  | stats sum(연간MM) as MM합계, sum(연간인건비)  as  인건비합계 by 그룹명  | sort - 인건비합계  | calculate add col  MM합계, 인건비합계  | typecast 인건비합계 bigint  | fillna 그룹명 합계
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | join DailyTask_VIEW_USER_INFO EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26110401' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간 | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast 날짜 date 'YYYYMMDD', 날짜 date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | join DailyTask_VIEW_USER_INFO EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD  | where DailyTask_VIEW_USER_INFO_deptCd = '26110401' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 23:59:59' | sort  EVENT_TIME   | merge (LTER_TB_CO_TEAM) as TEAM on TEAM_ID =TEAM.TEAM_ID     | fields EVENT_TIME as 날짜, USER_ID as 이름, TT_NUMBER as 수신번호, EQUIP_TYPE as 장비타입, ALARM_CODE as 알람코드, ALARM_NAME as 알람이름, TT_MSG as 수신내용
model name = 'LTER_TB_CO_TEAM' model_owner = paru
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 00:59:59' | sort  EVENT_TIME   | merge (LTER_TB_CO_TEAM) as TEAM on TEAM_ID =TEAM.TEAM_ID     | fields EVENT_TIME as 날짜, USER_ID as 이름, TT_NUMBER as 수신번호, EQUIP_TYPE as 장비타입, ALARM_CODE as 알람코드, ALARM_NAME as 알람이름, TT_MSG as 수신내용
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 23:59:59' | sort  EVENT_TIME
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 23:59:59' | sort  EVENT_TIME | count
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 23:59:59' | where ALARM_CODE = 'A2116378' | sort  EVENT_TIME | count
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 23:59:59' | where ALARM_CODE = 'A2116378' | sort  EVENT_TIME
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 00:59:59' | sort  EVENT_TIME
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 00:59:59' | sort  EVENT_TIME | count
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 00:01:59' | sort  EVENT_TIME
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 00:01:59' | sort  EVENT_TIME | count
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 00:00:30' | sort  EVENT_TIME
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | where EVENT_TIME >= '2022-05-31 00:00:00' and EVENT_TIME <= '2022-05-31 00:00:30' | sort  EVENT_TIME | count
model name = 'LTER_TB_CO_LINE' model_owner = dv2team
model name = 'LTER_TB_PM_ALARM_FILTER_SYSTEM' model_owner = dv2team | where EQUIP_TYPE = '2' and MONITOR_FLAG = '1' | distinct SYSTEM_ID
model name = 'LTER_TB_SM_COLLECT_LOG' model_owner = dv2team | where DATA_NAME IN ('TB_PM_ACCESS_KPI' , 'TB_PM_ALM_ACCESS_DTP', 'TB_PM_ACCESS_HANDOVER')  | top 1 - COLLECT_DATE   | fields EVENT_TIME
model name = 'LTER_TB_PM_ALARM_FILTER_SEVERITY' model_owner = dv2team | where USER_ID = 'admin' and EQUIP_TYPE = 2  | fields SEVERITY
model name = 'LTER_TB_PM_ALARM_FILTER_SYSTEM' model_owner = dv2team | where EQUIP_TYPE = '2' and MONITOR_FLAG = '0' | distinct SYSTEM_ID
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1145'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME       | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1145'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL       | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1145'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL        | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME    | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL,  ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL,  RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL,  ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL,  ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`,  CD_RATE_LEVEL
model name = 'LTER_VW_SYSTEM_DETAIL' model_owner = dv2team EQUIP_TYPE='2'
model name = 'LTER_TB_PM_THD_DU' model_owner = dv2team
model name = 'LTER_TB_SM_COLLECT_LOG' model_owner = dv2team | where DATA_NAME IN ('TB_PM_ACCESS_KPI') | top 1 - COLLECT_DATE   | fields EVENT_TIME
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0845' and C_TIME <= '1145'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0845' and C_TIME <= '1145'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME    | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0845' and C_TIME <= '1145'   | where DU_ID in ('51503')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0845' and C_TIME <= '1145'   | where DU_ID in ('51503')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME    | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '50' and C_TIME <= '1150'   | where DU_ID in ('')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME    | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '50' and C_TIME <= '1150'   | where DU_ID in ('')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1150'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME       | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1150'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL       | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1150'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL        | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME    | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL,  ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL,  RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL,  ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL,  ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`,  CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0850' and C_TIME <= '1150'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0850' and C_TIME <= '1150'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME    | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_SM_COLLECT_LOG' model_owner = dv2team | where DATA_NAME IN ('TB_PM_ALM_ACCESS_DTP') | top 1 - COLLECT_DATE   | fields EVENT_TIME
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0855' and C_TIME <= '1155'   | where DU_ID in ('51102')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | calculate UP_VOLUMN + DW_VOLUMN | rename calculated TOT_VOLUMN | calculate UP_DTP + DW_DTP | rename calculated TOT_DT   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOT_VOLUMN, TOT_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | sort - EVENT_TIME   | fields EVENT_TIME as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, TOT_VOLUMN as `Total Volume(KByte)`, TOT_DT as `Total Throughput(KBps)`, UP_VOLUMN as `UP Volume(KByte)`, DW_VOLUMN as `Download Volume(KByte)`, UP_DTP as `UP Throughput(KBps)`, DW_DTP as `Download Throughput(KBps)`
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0855' and C_TIME <= '1155'   | where DU_ID in ('51102')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | calculate UP_VOLUMN + DW_VOLUMN | rename calculated TOT_VOLUMN | calculate UP_DTP + DW_DTP | rename calculated TOT_DT   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOT_VOLUMN, TOT_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | sort EVENT_TIME   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, TOT_VOLUMN as `Total Volume(KByte)`, TOT_DT as `Total Throughput(KBps)`, UP_VOLUMN as `UP Volume(KByte)`, DW_VOLUMN as `Download Volume(KByte)`, UP_DTP as `UP Throughput(KBps)`, DW_DTP as `Download Throughput(KBps)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0855' and C_TIME <= '1155'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME    | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0855' and C_TIME <= '1155'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1155'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL       | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1155'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME       | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1155'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL        | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME    | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL,  ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL,  RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL,  ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL,  ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`,  CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0900' and C_TIME <= '1200'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0900' and C_TIME <= '1200'   | where DU_ID in ('51102')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME, DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME    | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0900' and C_TIME <= '1200'   | where DU_ID in ('51102')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | calculate UP_VOLUMN + DW_VOLUMN | rename calculated TOT_VOLUMN | calculate UP_DTP + DW_DTP | rename calculated TOT_DT   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOT_VOLUMN, TOT_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | sort EVENT_TIME   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, TOT_VOLUMN as `Total Volume(KByte)`, TOT_DT as `Total Throughput(KBps)`, UP_VOLUMN as `UP Volume(KByte)`, DW_VOLUMN as `Download Volume(KByte)`, UP_DTP as `UP Throughput(KBps)`, DW_DTP as `Download Throughput(KBps)`
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0900' and C_TIME <= '1200'   | where DU_ID in ('51503')   | where STATISTICS_TYPE in ('X2 IN HANDOVER')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | sort EVENT_TIME   | fields HOUR as `일시`,  DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0900' and C_TIME <= '1200'   | where DU_ID in ('51503')   | where STATISTICS_TYPE in ('X2 IN HANDOVER')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME   | sort - EVENT_TIME   | fields  EVENT_TIME as `일시`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0900' and C_TIME <= '1200'   | where DU_ID in ('51102')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | calculate UP_VOLUMN + DW_VOLUMN | rename calculated TOT_VOLUMN | calculate UP_DTP + DW_DTP | rename calculated TOT_DT   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOT_VOLUMN, TOT_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | sort - EVENT_TIME   | fields EVENT_TIME as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, TOT_VOLUMN as `Total Volume(KByte)`, TOT_DT as `Total Throughput(KBps)`, UP_VOLUMN as `UP Volume(KByte)`, DW_VOLUMN as `Download Volume(KByte)`, UP_DTP as `UP Throughput(KBps)`, DW_DTP as `Download Throughput(KBps)`
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1200'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL       | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1200'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME       | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1200'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL        | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME    | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL,  ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL,  RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL,  ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL,  ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`,  CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1200'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL      | where ATT_RATE_5M_LEVEL <= '3' or ERAB_ATT_RATE_LEVEL <= '3' or RRC_RATE_LEVEL <= '3' or ANSWER_RATE_LEVEL <= '3' or CD_RATE_LEVEL <= '3'   | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME   | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, RU_RU_NAME as `중계기`,  CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`, CD_RATE_LEVEL
model name = 'LTER_TB_CO_RU' model_owner = dv2team
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1205'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME       | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1205'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL       | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1205'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL        | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME    | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL,  ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL,  RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL,  ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL,  ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`,  CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1205'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL      | where ATT_RATE_5M_LEVEL <= '3' or ERAB_ATT_RATE_LEVEL <= '3' or RRC_RATE_LEVEL <= '3' or ANSWER_RATE_LEVEL <= '3' or CD_RATE_LEVEL <= '3'   | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME   | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, RU_RU_NAME as `중계기`,  CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`, CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1210'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME       | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1210'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL       | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1210'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL        | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME    | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL,  ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL,  RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL,  ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL,  ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`,  CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1210'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL      | where ATT_RATE_5M_LEVEL <= '3' or ERAB_ATT_RATE_LEVEL <= '3' or RRC_RATE_LEVEL <= '3' or ANSWER_RATE_LEVEL <= '3' or CD_RATE_LEVEL <= '3'   | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME   | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, RU_RU_NAME as `중계기`,  CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`, CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0910' and C_TIME <= '1210'   | where DU_ID in ('53009')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME   | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0910' and C_TIME <= '1210'   | where DU_ID in ('53009')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0910' and C_TIME <= '1210'   | where DU_ID in ('51102')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | calculate UP_VOLUMN + DW_VOLUMN | rename calculated TOT_VOLUMN | calculate UP_DTP + DW_DTP | rename calculated TOT_DT   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOT_VOLUMN, TOT_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | sort - EVENT_TIME   | fields EVENT_TIME as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, TOT_VOLUMN as `Total Volume(KByte)`, TOT_DT as `Total Throughput(KBps)`, UP_VOLUMN as `UP Volume(KByte)`, DW_VOLUMN as `Download Volume(KByte)`, UP_DTP as `UP Throughput(KBps)`, DW_DTP as `Download Throughput(KBps)`
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0910' and C_TIME <= '1210'   | where DU_ID in ('51102')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | calculate UP_VOLUMN + DW_VOLUMN | rename calculated TOT_VOLUMN | calculate UP_DTP + DW_DTP | rename calculated TOT_DT   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOT_VOLUMN, TOT_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | sort EVENT_TIME   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, TOT_VOLUMN as `Total Volume(KByte)`, TOT_DT as `Total Throughput(KBps)`, UP_VOLUMN as `UP Volume(KByte)`, DW_VOLUMN as `Download Volume(KByte)`, UP_DTP as `UP Throughput(KBps)`, DW_DTP as `Download Throughput(KBps)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0910' and C_TIME <= '1210'   | where DU_ID in ('52206')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL   | sort - EVENT_TIME   | fields EVENT_TIME as `일시`, DU_ID as `장비ID`, DU_NAME as `기지국`, CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0910' and C_TIME <= '1210'   | where DU_ID in ('52206')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields EVENT_TIME,  DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL   | sort EVENT_TIME   | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MM | concat HH, ":", MM as HOUR   | fields HOUR as `일시`,  DU_ID as `장비ID`, DU_NAME as `기지국`, CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME       | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL       | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')     | stats sum(ATTEMPT) as ATTEMPT, sum(STD_ATT_5M) as STD_ATT_5M, sum(RRC) as RRC, sum(ANSWER) as ANSWER, sum(CD) as CD, sum(ERAB_ATTEMPT) as ERAB_ATTEMPT, sum(STD_ERAB_5M) as STD_ERAB_5M,   sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCC by EVENT_TIME, C_UID, DU_ID, DU_NAME, WEEKDAY, HOUR_SCOPE   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M) * 100  | case when STD_ATT_5M is null or STD_ATT_5M = 0 then 100 when ATTEMPT < STD_ATT_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ATT_RATE   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100  | case when STD_ERAB_5M is null or STD_ERAB_5M = 0 then 100 when ERAB_ATTEMPT < STD_ERAB_5M then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ERAB_ATT_RATE    | calculate (RRC / ATTEMPT)  * 100  | case when ATTEMPT = 0 then 100 when ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated RRC_RATE   | calculate (ANSWER / ATTEMPT )  * 100  | case when ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ATT_RATE   | calculate (ANSWER / ERAB_ATTEMPT)  * 100  | case when ERAB_ATTEMPT = 0 then 100 when ERAB_ATTEMPT is null  then 100 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated ANSWER_ERAB_RATE   | calculate (CD /(RRC + ERAB_ADD_SUCC)) * 100  | case when RRC + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_RRC_RATE    | calculate (CD /(ANSWER + ERAB_ADD_SUCC)) * 100  | case when ANSWER + ERAB_ADD_SUCC = 0 then 0 when calculated is null then 0 otherwise calculated as calculated  | typecast calculated real | round 2 col = calculated toString=True | rename calculated CD_ERAB_RATE   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ATT_5M = 0 then 4 when ATT_RATE >= THD_ATT_RATE_CRI_INCR then 1 when ATT_RATE >= THD_ATT_RATE_MAJ_INCR then 2 when ATT_RATE >= THD_ATT_RATE_MIN_INCR then 3 when ATT_RATE <= THD_ATT_RATE_CRI_DECR then 1 when ATT_RATE <= THD_ATT_RATE_MAJ_DECR then 2 when ATT_RATE <= THD_ATT_RATE_MIN_DECR then 3 otherwise 4 as ATT_RATE_5M_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when STD_ERAB_5M = 0 then 4 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_CRI_INCR then 1 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MAJ_INCR then 2 when ERAB_ATT_RATE >= THD_ERAB_ATT_RATE_MIN_INCR then 3 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_CRI_DECR then 1 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MAJ_DECR then 2 when ERAB_ATT_RATE <= THD_ERAB_ATT_RATE_MIN_DECR then 3 otherwise 4 as ERAB_ATT_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ATTEMPT = 0 then 4 when RRC_RATE <= THD_SEIZER_RATE_CRI then 1 when RRC_RATE <= THD_SEIZER_RATE_MAJ then 2 when RRC_RATE <= THD_SEIZER_RATE_MIN then 3 otherwise 4 as RRC_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ERAB_ATTEMPT = 0 then 4 when ERAB_ATTEMPT is null then 4 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_CRI then 1 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MAJ then 2 when ANSWER_ERAB_RATE <= THD_ANSWER_RATE_MIN then 3 otherwise 4 as ANSWER_RATE_LEVEL   | case when ATTEMPT <= THD_ATTEMPT then 4 when ANSWER + ERAB_ADD_SUCC = 0 then 4 when ERAB_ATTEMPT is null then 4 when CD_ERAB_RATE >= THD_CD_RATE_CRI then 1 when CD_ERAB_RATE >= THD_CD_RATE_MAJ then 2 when CD_ERAB_RATE >= THD_CD_RATE_MIN then 3 otherwise 4 as CD_RATE_LEVEL   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT, STD_ERAB_5M , ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCC, CD, CD_ERAB_RATE, CD_RATE_LEVEL        | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME    | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL,  ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL,  RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL,  ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL,  ERAB_ADD_SUCC as `ERAB Setup Add 성공호`, CD as `절단호`, CD_ERAB_RATE as `절단율 (%)`,  CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL      | where ATT_RATE_5M_LEVEL <= '3' or ERAB_ATT_RATE_LEVEL <= '3' or RRC_RATE_LEVEL <= '3' or ANSWER_RATE_LEVEL <= '3' or CD_RATE_LEVEL <= '3'   | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME   | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, RU_RU_NAME as `중계기`,  CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`, CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME   | where DU_LINE_ID = '5'     | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | where DU_LINE_ID = '5'     | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL   | where DU_LINE_ID = '5'    | where ATT_RATE_5M_LEVEL <= '3' or ERAB_ATT_RATE_LEVEL <= '3' or RRC_RATE_LEVEL <= '3' or ANSWER_RATE_LEVEL <= '3' or CD_RATE_LEVEL <= '3'   | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME   | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, RU_RU_NAME as `중계기`,  CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`, CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME   | where DU_LINE_ID = '0'     | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | where DU_LINE_ID = '0'     | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL   | where DU_LINE_ID = '0'    | where ATT_RATE_5M_LEVEL <= '3' or ERAB_ATT_RATE_LEVEL <= '3' or RRC_RATE_LEVEL <= '3' or ANSWER_RATE_LEVEL <= '3' or CD_RATE_LEVEL <= '3'   | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME   | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, RU_RU_NAME as `중계기`,  CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`, CD_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_HANDOVER' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna SUCCESS 0 | typecast SUCCESS integer   | fields  EVENT_TIME, C_UID, DU_ID, DU_NAME, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, WEEKDAY, DU_LINE_ID, DU_LINE_NAME   | where DU_LINE_ID = '6'     | sort ATT_RATE_LEVEL, SUCC_RATE_LEVEL, DU_NAME   | fields  DU_LINE_NAME as `호선`, DU_ID as `장비 ID`, DU_NAME as `기지국`, STATISTICS_TYPE as `타입`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율(%)`, ATT_RATE_LEVEL, SUCCESS as `성공호`, SUCC_RATE as `성공율(%)`, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ALM_ACCESS_DTP' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')   | case when UP_VOLUMN is null then 0 otherwise UP_VOLUMN as UP_VOLUMN | case when STD_UP_VOLUMN_5M is null then 0 otherwise STD_UP_VOLUMN_5M as UP_VOLUMN_STD | case when UP_DTP is null then 0 otherwise UP_DTP as UP_DTP | case when STD_UP_DTP_5M is null then 0 otherwise STD_UP_DTP_5M as UP_DTP_STD | case when DW_VOLUMN is null then 0 otherwise DW_VOLUMN as DW_VOLUMN | case when STD_DW_VOLUMN_5M is null then 0 otherwise STD_DW_VOLUMN_5M as DW_VOLUMN_STD | case when DW_DTP is null then 0 otherwise DW_DTP as DW_DTP | case when STD_DW_DTP_5M is null then 0 otherwise STD_DW_DTP_5M as DW_DTP_STD | case when UP_VOLUMN + DW_VOLUMN is null then 0 otherwise 0 as TOTAL_VOLUMN | case when UP_DTP + DW_DTP is null then 0 otherwise 0 as TOTAL_DTP   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID    | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, UP_VOLUMN, UP_VOLUMN_STD, UP_VOLUMN_RATE, UP_DTP, UP_DTP_STD, UP_DTP_RATE, DW_VOLUMN, DW_VOLUMN_STD, DW_VOLUMN_RATE, DW_DTP, DW_DTP_STD, DW_DTP_RATE, TOTAL_VOLUMN, TOTAL_DT, UP_DTP_LEVEL, DW_DTP_LEVEL   | where DU_LINE_ID = '6'     | sort UP_DTP_LEVEL, DW_DTP_LEVEL, DU_NAME   | fields DU_LINE_NAME  as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, UP_VOLUMN as `UP Volume(KByte)`, UP_VOLUMN_STD as `기준 UP Volume(KByte)`, UP_VOLUMN_RATE as `UP Volume 증감율(%)`, UP_DTP as `UP Throughput(KBps)`, UP_DTP_STD as `기준 UP Throughput(KBps)`, UP_DTP_RATE as `UP Throughput 증감율(%)`, UP_DTP_LEVEL, DW_VOLUMN as `Download Volume(KByte)`, DW_VOLUMN_STD as `기준 Download Volume(KByte)`, DW_VOLUMN_RATE as `Download Volume 증감율(%)`, DW_DTP as `Download Throughput(KBps)`, DW_DTP_STD as `기준 Download Throughput(KBps)`, DW_DTP_RATE as `Download Throughput 증감율(%)`, DW_DTP_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where C_DATE = '20220531' and C_TIME = '1215'      | where DU_ID in ('51503','51604','52206','52607','53009','51102','52105','52708','53110')  | where DU_ID not in ('51001')      | replace RU_CUID 'cNum' '' | concat "cNum",  RU_CUID as CELL_NAME | merge (LTER_TB_CO_RU) as RU on RU_CUID = RU.CELL_NUM and DU_ID = RU.DU_ID   | merge (LTER_VW_SYSTEM_DETAIL EQUIP_TYPE = '2') as DU on DU_ID = DU.SYSTEM_ID       | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer  | case  when ATTEMPT = 0 then 100 otherwise RRC_RATE as RRC_RATE | typecast RRC_RATE real | round 2 col = RRC_RATE toString=True  | case when ERAB_ATTEMPT = 0 then 100 otherwise ANSWER_RATE as ANSWER_ERAB_RATE | typecast ANSWER_ERAB_RATE real | round 2 col = ANSWER_ERAB_RATE toString=True  | case when ANSWER + ERAB_ADD_SUCCESS = 0 then 0 otherwise CD_RATE as CD_RATE | typecast CD_RATE real | round 2 col = CD_RATE toString=True   | merge (LTER_TB_PM_THD_DU) as THD on WEEKDAY = THD.WEEKDAY and HOUR_SCOPE = THD.HOUR_SCOPE   | case when ATTEMPT < THD_ATTEMPT then 0 otherwise 1 as ATT_FLAG   | fields DU_LINE_ID, DU_LINE_NAME, DU_ID, DU_NAME, RU_RU_NAME, CELL_NAME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT,   STD_ERAB_5M, ERAB_ATT_RATE, ERAB_ATT_RATE_LEVEL, RRC, RRC_RATE, RRC_RATE_LEVEL, ANSWER, ANSWER_ERAB_RATE, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS, CD,   CD_RATE, CD_RATE_LEVEL   | where DU_LINE_ID = '6'    | where ATT_RATE_5M_LEVEL <= '3' or ERAB_ATT_RATE_LEVEL <= '3' or RRC_RATE_LEVEL <= '3' or ANSWER_RATE_LEVEL <= '3' or CD_RATE_LEVEL <= '3'   | sort ATT_RATE_5M_LEVEL, RRC_RATE_LEVEL, ANSWER_RATE_LEVEL, CD_RATE_LEVEL, DU_NAME   | fields DU_LINE_NAME as `호선`, DU_ID as `장비ID`, DU_NAME as `기지국`, RU_RU_NAME as `중계기`,  CELL_NAME as `Cell`,  ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ATT_RATE_5M_LEVEL, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB SEtup 시도호 증감율(%)`, ERAB_ATT_RATE_LEVEL, RRC as `소통호 (RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, RRC_RATE_LEVEL, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_ERAB_RATE as `완료율(ERAB Setup 성공율)(%)`, ANSWER_RATE_LEVEL, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율 (%)`, CD_RATE_LEVEL
model name = 'LTER_TB_PM_ALARM_FILTER_SEVERITY' model_owner = dv2team | where USER_ID = 'admin' and EQUIP_TYPE = 1  | fields SEVERITY
model name = 'LTER_TB_PM_ALARM_FILTER_SEVERITY' model_owner = dv2team | where USER_ID = 'admin' and EQUIP_TYPE = 5 | fields SEVERITY
model name = 'LTER_TB_PM_ALARM_FILTER_SEVERITY' model_owner = dv2team | where USER_ID = 'admin' and EQUIP_TYPE = 6 | fields SEVERITY
model name = 'LTER_TB_PM_ALARM_FILTER_SEVERITY' model_owner = dv2team | where USER_ID = 'admin' and EQUIP_TYPE = 7 | fields SEVERITY
model name = 'LTER_TB_SM_COLLECT_LOG' model_owner = dv2team | where DATA_NAME in ( 'TB_PM_MME_ATTACH' , 'TB_PM_MME_SR' , 'TB_PM_MME_SGSAP', 'TB_PM_PGW_CREATE', 'TB_PM_PGW_DELETE', 'TB_PM_PGW_MODIFY', 'TB_PM_SGW_ATTACH', 'TB_PM_SGW_MODIFY', 'TB_PM_HSS', 'TB_PM_PCRF' )  | top 1 - COLLECT_DATE   | fields EVENT_TIME
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-12:40`, max (PCA_B1) as `PCEF-시도호-`, max (PCAS_N) as `PCEF-기준시도호-12:40`, max (PCAS_B1) as `PCEF-기준시도호-`, max (PCAR_N) as `PCEF-시도호 증감율(%)-12:40`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-`, max (PCS_N) as `PCEF-성공호-12:40`, max (PCS_B1) as `PCEF-성공호-`, max (PCSR_N) as `PCEF-성공율(%)-12:40`, max (PCSR_B1) as `PCEF-성공율(%)-`, max (SPA_N) as `SPR-시도호-12:40`, max (SPA_B1) as `SPR-시도호-`, max (SPAS_N) as `SPR-기준시도호-12:40`, max (SPAS_B1) as `SPR-기준시도호-`, max (SPAR_N) as `SPR-시도호 증감율(%)-12:40`, max (SPAR_B1) as `SPR-시도호 증감율(%)-`, max (SPS_N) as `SPR-성공호-12:40`, max (SPS_B1) as `SPR-성공호-`, max (SPSR_N) as `SPR-성공율(%)-12:40`, max (SPSR_B1) as `SPR-성공율(%)-`, max (AFA_N) as `AF-시도호-12:40`, max (AFA_B1) as `AF-시도호-`, max (AFAS_N) as `AF-기준시도호-12:40`, max (AFAS_B1) as `AF-기준시도호-`, max (AFAR_N) as `AF-시도호 증감율(%)-12:40`, max (AFAR_B1) as `AF-시도호 증감율(%)-`, max (AFS_N) as `AF-성공호-12:40`, max (AFS_B1) as `AF-성공호-`, max (AFSR_N) as `AF-성공율(%)-12:40`, max (AFSR_B1) as `AF-성공율(%)-`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '' and  C_DATE <= '20220531' and  C_TIME >= '' and  C_TIME <= '1240'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-12:40`, max (HDA_B1) as `Diameter Stack-시도호-`, max (HDAS_N) as `Diameter Stack-기준시도호-12:40`, max (HDAS_B1) as `Diameter Stack-기준시도호-`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-12:40`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-`, max (HDS_N) as `Diameter Stack-성공호-12:40`, max (HDS_B1) as `Diameter Stack-성공호-`, max (HDSR_N) as `Diameter Stack-성공율(%)-12:40`, max (HDSR_B1) as `Diameter Stack-성공율(%)-`, max (H13A_N) as `S13A Interface-시도호-12:40`, max (H13A_B1) as `S13A Interface-시도호-`, max (H13AS_N) as `S13A Interface-기준시도호-12:40`, max (H13AS_B1) as `S13A Interface-기준시도호-`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-12:40`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-`, max (H13S_N) as `S13A Interface-성공호-12:40`, max (H13S_B1) as `S13A Interface-성공호-`, max (H13SR_N) as `S13A Interface-성공율(%)-12:40`, max (H13SR_B1) as `S13A Interface-성공율(%)-`, max (H6A_N) as `S6A Interface-시도호-12:40`, max (H6A_B1) as `S6A Interface-시도호-`, max (H6AS_N) as `S6A Interface-기준시도호-12:40`, max (H6AS_B1) as `S6A Interface-기준시도호-`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-12:40`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-`, max (H6S_N) as `S6A Interface-성공호-12:40`, max (H6S_B1) as `S6A Interface-성공호-`, max (H6SR_N) as `S6A Interface-성공율(%)-12:40`, max (H6SR_B1) as `S6A Interface-성공율(%)-`, max (HSA_N) as `SP Interface-시도호-12:40`, max (HSA_B1) as `SP Interface-시도호-`, max (HSAS_N) as `SP Interface-기준시도호-12:40`, max (HSAS_B1) as `SP Interface-기준시도호-`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-12:40`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-`, max (HSS_N) as `SP Interface-성공호-12:40`, max (HSS_B1) as `SP Interface-성공호-`, max (HSSR_N) as `SP Interface-성공율(%)-12:40`, max (HSSR_B1) as `SP Interface-성공율(%)-`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-12:45`, max (PCA_B1) as `PCEF-시도호-12:40`, max (PCAS_N) as `PCEF-기준시도호-12:45`, max (PCAS_B1) as `PCEF-기준시도호-12:40`, max (PCAR_N) as `PCEF-시도호 증감율(%)-12:45`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-12:40`, max (PCS_N) as `PCEF-성공호-12:45`, max (PCS_B1) as `PCEF-성공호-12:40`, max (PCSR_N) as `PCEF-성공율(%)-12:45`, max (PCSR_B1) as `PCEF-성공율(%)-12:40`, max (SPA_N) as `SPR-시도호-12:45`, max (SPA_B1) as `SPR-시도호-12:40`, max (SPAS_N) as `SPR-기준시도호-12:45`, max (SPAS_B1) as `SPR-기준시도호-12:40`, max (SPAR_N) as `SPR-시도호 증감율(%)-12:45`, max (SPAR_B1) as `SPR-시도호 증감율(%)-12:40`, max (SPS_N) as `SPR-성공호-12:45`, max (SPS_B1) as `SPR-성공호-12:40`, max (SPSR_N) as `SPR-성공율(%)-12:45`, max (SPSR_B1) as `SPR-성공율(%)-12:40`, max (AFA_N) as `AF-시도호-12:45`, max (AFA_B1) as `AF-시도호-12:40`, max (AFAS_N) as `AF-기준시도호-12:45`, max (AFAS_B1) as `AF-기준시도호-12:40`, max (AFAR_N) as `AF-시도호 증감율(%)-12:45`, max (AFAR_B1) as `AF-시도호 증감율(%)-12:40`, max (AFS_N) as `AF-성공호-12:45`, max (AFS_B1) as `AF-성공호-12:40`, max (AFSR_N) as `AF-성공율(%)-12:45`, max (AFSR_B1) as `AF-성공율(%)-12:40`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and  C_TIME <= '1245'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 12:25:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-12:45`, max (HDA_B1) as `Diameter Stack-시도호-12:40`, max (HDAS_N) as `Diameter Stack-기준시도호-12:45`, max (HDAS_B1) as `Diameter Stack-기준시도호-12:40`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-12:45`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-12:40`, max (HDS_N) as `Diameter Stack-성공호-12:45`, max (HDS_B1) as `Diameter Stack-성공호-12:40`, max (HDSR_N) as `Diameter Stack-성공율(%)-12:45`, max (HDSR_B1) as `Diameter Stack-성공율(%)-12:40`, max (H13A_N) as `S13A Interface-시도호-12:45`, max (H13A_B1) as `S13A Interface-시도호-12:40`, max (H13AS_N) as `S13A Interface-기준시도호-12:45`, max (H13AS_B1) as `S13A Interface-기준시도호-12:40`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-12:45`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-12:40`, max (H13S_N) as `S13A Interface-성공호-12:45`, max (H13S_B1) as `S13A Interface-성공호-12:40`, max (H13SR_N) as `S13A Interface-성공율(%)-12:45`, max (H13SR_B1) as `S13A Interface-성공율(%)-12:40`, max (H6A_N) as `S6A Interface-시도호-12:45`, max (H6A_B1) as `S6A Interface-시도호-12:40`, max (H6AS_N) as `S6A Interface-기준시도호-12:45`, max (H6AS_B1) as `S6A Interface-기준시도호-12:40`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-12:45`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-12:40`, max (H6S_N) as `S6A Interface-성공호-12:45`, max (H6S_B1) as `S6A Interface-성공호-12:40`, max (H6SR_N) as `S6A Interface-성공율(%)-12:45`, max (H6SR_B1) as `S6A Interface-성공율(%)-12:40`, max (HSA_N) as `SP Interface-시도호-12:45`, max (HSA_B1) as `SP Interface-시도호-12:40`, max (HSAS_N) as `SP Interface-기준시도호-12:45`, max (HSAS_B1) as `SP Interface-기준시도호-12:40`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-12:45`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-12:40`, max (HSS_N) as `SP Interface-성공호-12:45`, max (HSS_B1) as `SP Interface-성공호-12:40`, max (HSSR_N) as `SP Interface-성공율(%)-12:45`, max (HSSR_B1) as `SP Interface-성공율(%)-12:40`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-12:50`, max (PCA_B1) as `PCEF-시도호-12:45`, max (PCAS_N) as `PCEF-기준시도호-12:50`, max (PCAS_B1) as `PCEF-기준시도호-12:45`, max (PCAR_N) as `PCEF-시도호 증감율(%)-12:50`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-12:45`, max (PCS_N) as `PCEF-성공호-12:50`, max (PCS_B1) as `PCEF-성공호-12:45`, max (PCSR_N) as `PCEF-성공율(%)-12:50`, max (PCSR_B1) as `PCEF-성공율(%)-12:45`, max (SPA_N) as `SPR-시도호-12:50`, max (SPA_B1) as `SPR-시도호-12:45`, max (SPAS_N) as `SPR-기준시도호-12:50`, max (SPAS_B1) as `SPR-기준시도호-12:45`, max (SPAR_N) as `SPR-시도호 증감율(%)-12:50`, max (SPAR_B1) as `SPR-시도호 증감율(%)-12:45`, max (SPS_N) as `SPR-성공호-12:50`, max (SPS_B1) as `SPR-성공호-12:45`, max (SPSR_N) as `SPR-성공율(%)-12:50`, max (SPSR_B1) as `SPR-성공율(%)-12:45`, max (AFA_N) as `AF-시도호-12:50`, max (AFA_B1) as `AF-시도호-12:45`, max (AFAS_N) as `AF-기준시도호-12:50`, max (AFAS_B1) as `AF-기준시도호-12:45`, max (AFAR_N) as `AF-시도호 증감율(%)-12:50`, max (AFAR_B1) as `AF-시도호 증감율(%)-12:45`, max (AFS_N) as `AF-성공호-12:50`, max (AFS_B1) as `AF-성공호-12:45`, max (AFSR_N) as `AF-성공율(%)-12:50`, max (AFSR_B1) as `AF-성공율(%)-12:45`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1230' and  C_TIME <= '1250'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 12:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-12:50`, max (HDA_B1) as `Diameter Stack-시도호-12:45`, max (HDAS_N) as `Diameter Stack-기준시도호-12:50`, max (HDAS_B1) as `Diameter Stack-기준시도호-12:45`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-12:50`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-12:45`, max (HDS_N) as `Diameter Stack-성공호-12:50`, max (HDS_B1) as `Diameter Stack-성공호-12:45`, max (HDSR_N) as `Diameter Stack-성공율(%)-12:50`, max (HDSR_B1) as `Diameter Stack-성공율(%)-12:45`, max (H13A_N) as `S13A Interface-시도호-12:50`, max (H13A_B1) as `S13A Interface-시도호-12:45`, max (H13AS_N) as `S13A Interface-기준시도호-12:50`, max (H13AS_B1) as `S13A Interface-기준시도호-12:45`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-12:50`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-12:45`, max (H13S_N) as `S13A Interface-성공호-12:50`, max (H13S_B1) as `S13A Interface-성공호-12:45`, max (H13SR_N) as `S13A Interface-성공율(%)-12:50`, max (H13SR_B1) as `S13A Interface-성공율(%)-12:45`, max (H6A_N) as `S6A Interface-시도호-12:50`, max (H6A_B1) as `S6A Interface-시도호-12:45`, max (H6AS_N) as `S6A Interface-기준시도호-12:50`, max (H6AS_B1) as `S6A Interface-기준시도호-12:45`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-12:50`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-12:45`, max (H6S_N) as `S6A Interface-성공호-12:50`, max (H6S_B1) as `S6A Interface-성공호-12:45`, max (H6SR_N) as `S6A Interface-성공율(%)-12:50`, max (H6SR_B1) as `S6A Interface-성공율(%)-12:45`, max (HSA_N) as `SP Interface-시도호-12:50`, max (HSA_B1) as `SP Interface-시도호-12:45`, max (HSAS_N) as `SP Interface-기준시도호-12:50`, max (HSAS_B1) as `SP Interface-기준시도호-12:45`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-12:50`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-12:45`, max (HSS_N) as `SP Interface-성공호-12:50`, max (HSS_B1) as `SP Interface-성공호-12:45`, max (HSSR_N) as `SP Interface-성공율(%)-12:50`, max (HSSR_B1) as `SP Interface-성공율(%)-12:45`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-12:55`, max (PCA_B1) as `PCEF-시도호-12:50`, max (PCAS_N) as `PCEF-기준시도호-12:55`, max (PCAS_B1) as `PCEF-기준시도호-12:50`, max (PCAR_N) as `PCEF-시도호 증감율(%)-12:55`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-12:50`, max (PCS_N) as `PCEF-성공호-12:55`, max (PCS_B1) as `PCEF-성공호-12:50`, max (PCSR_N) as `PCEF-성공율(%)-12:55`, max (PCSR_B1) as `PCEF-성공율(%)-12:50`, max (SPA_N) as `SPR-시도호-12:55`, max (SPA_B1) as `SPR-시도호-12:50`, max (SPAS_N) as `SPR-기준시도호-12:55`, max (SPAS_B1) as `SPR-기준시도호-12:50`, max (SPAR_N) as `SPR-시도호 증감율(%)-12:55`, max (SPAR_B1) as `SPR-시도호 증감율(%)-12:50`, max (SPS_N) as `SPR-성공호-12:55`, max (SPS_B1) as `SPR-성공호-12:50`, max (SPSR_N) as `SPR-성공율(%)-12:55`, max (SPSR_B1) as `SPR-성공율(%)-12:50`, max (AFA_N) as `AF-시도호-12:55`, max (AFA_B1) as `AF-시도호-12:50`, max (AFAS_N) as `AF-기준시도호-12:55`, max (AFAS_B1) as `AF-기준시도호-12:50`, max (AFAR_N) as `AF-시도호 증감율(%)-12:55`, max (AFAR_B1) as `AF-시도호 증감율(%)-12:50`, max (AFS_N) as `AF-성공호-12:55`, max (AFS_B1) as `AF-성공호-12:50`, max (AFSR_N) as `AF-성공율(%)-12:55`, max (AFSR_B1) as `AF-성공율(%)-12:50`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1235' and  C_TIME <= '1255'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 12:50:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 12:45:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 12:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 12:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-12:55`, max (HDA_B1) as `Diameter Stack-시도호-12:50`, max (HDAS_N) as `Diameter Stack-기준시도호-12:55`, max (HDAS_B1) as `Diameter Stack-기준시도호-12:50`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-12:55`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-12:50`, max (HDS_N) as `Diameter Stack-성공호-12:55`, max (HDS_B1) as `Diameter Stack-성공호-12:50`, max (HDSR_N) as `Diameter Stack-성공율(%)-12:55`, max (HDSR_B1) as `Diameter Stack-성공율(%)-12:50`, max (H13A_N) as `S13A Interface-시도호-12:55`, max (H13A_B1) as `S13A Interface-시도호-12:50`, max (H13AS_N) as `S13A Interface-기준시도호-12:55`, max (H13AS_B1) as `S13A Interface-기준시도호-12:50`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-12:55`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-12:50`, max (H13S_N) as `S13A Interface-성공호-12:55`, max (H13S_B1) as `S13A Interface-성공호-12:50`, max (H13SR_N) as `S13A Interface-성공율(%)-12:55`, max (H13SR_B1) as `S13A Interface-성공율(%)-12:50`, max (H6A_N) as `S6A Interface-시도호-12:55`, max (H6A_B1) as `S6A Interface-시도호-12:50`, max (H6AS_N) as `S6A Interface-기준시도호-12:55`, max (H6AS_B1) as `S6A Interface-기준시도호-12:50`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-12:55`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-12:50`, max (H6S_N) as `S6A Interface-성공호-12:55`, max (H6S_B1) as `S6A Interface-성공호-12:50`, max (H6SR_N) as `S6A Interface-성공율(%)-12:55`, max (H6SR_B1) as `S6A Interface-성공율(%)-12:50`, max (HSA_N) as `SP Interface-시도호-12:55`, max (HSA_B1) as `SP Interface-시도호-12:50`, max (HSAS_N) as `SP Interface-기준시도호-12:55`, max (HSAS_B1) as `SP Interface-기준시도호-12:50`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-12:55`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-12:50`, max (HSS_N) as `SP Interface-성공호-12:55`, max (HSS_B1) as `SP Interface-성공호-12:50`, max (HSSR_N) as `SP Interface-성공율(%)-12:55`, max (HSSR_B1) as `SP Interface-성공율(%)-12:50`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0955' and C_TIME <= '1255'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '0955' and C_TIME <= '1255'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                          ['Attach','0001','SEOUL-METRO-MME1','20220531','0955','0','5','40','186','-78.49','2','32','77.5','2','31','80','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1000','0','5','162','21','671.43','4','105','58.64','1','95','64.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1005','0','5','103','159','-35.22','3','70','55.34','1','57','67.96','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1010','0','5','160','168','-4.76','4','97','51.88','1','83','60.62','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1015','0','5','1','16','-93.75','4','1','100','4','1','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1020','0','5','161','187','-13.9','4','133','77.02','2','124','82.61','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1025','0','5','150','16','837.5','4','77','51.33','1','77','51.33','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1030','0','5','152','47','223.4','4','81','49.34','1','75','53.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1035','0','5','93','160','-41.88','3','51','54.84','1','51','54.84','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1040','0','5','46','178','-74.16','3','44','82.61','3','38','95.65','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1045','0','5','161','105','53.33','4','150','88.82','3','143','93.17','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1050','0','5','192','22','772.73','4','141','69.27','1','133','73.44','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1055','0','5','106','6','1666.67','4','63','50.94','1','54','59.43','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1100','0','5','4','185','-97.84','4','4','100','4','4','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1105','0','5','96','55','74.55','4','92','81.25','3','78','95.83','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1110','0','5','197','133','48.12','4','119','54.31','1','107','60.41','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1115','0','5','123','70','75.71','4','120','93.5','4','115','97.56','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1120','0','5','131','170','-22.94','3','126','79.39','2','104','96.18','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1125','0','5','1','131','-99.24','4','1','100','4','1','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1130','0','5','192','177','8.47','4','118','58.85','1','113','61.46','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1135','0','5','78','48','62.5','4','47','60.26','1','47','60.26','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1140','0','5','166','79','110.13','4','105','51.2','1','85','63.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1145','0','5','30','45','-33.33','3','16','50','1','15','53.33','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1150','0','5','134','14','857.14','4','72','53.73','1','72','53.73','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1155','0','5','10','109','-90.83','4','10','90','4','9','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1200','0','5','26','141','-81.56','1','23','84.62','3','22','88.46','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1205','0','5','82','140','-41.43','3','78','89.02','3','73','95.12','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1210','0','5','143','14','921.43','4','137','89.51','3','128','95.8','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1215','0','5','181','21','761.9','4','166','88.95','3','161','91.71','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1220','0','5','185','156','18.59','4','94','45.41','1','84','50.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1225','0','5','74','24','208.33','4','51','66.22','1','49','68.92','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1230','0','5','89','179','-50.28','3','76','79.78','2','71','85.39','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1235','0','5','118','16','637.5','4','66','46.61','1','55','55.93','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1240','0','5','112','196','-42.86','3','72','52.68','1','59','64.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],                                          ['SR','0001','SEOUL-METRO-MME1','20220531','0955','0','5','481','688','-30.09','4','377','78.38','2','350','72.77','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1000','0','5','828','401','106.48','4','646','78.02','2','579','69.93','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1005','0','5','700','911','-23.16','4','536','76.57','2','503','71.86','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1010','0','5','100','183','-45.36','4','77','77','2','70','70','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1015','0','5','768','767','0.13','4','551','71.74','2','547','71.22','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1020','0','5','579','714','-18.91','4','537','92.75','4','487','84.11','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1025','0','5','827','604','36.92','4','798','96.49','4','784','94.8','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1030','0','5','646','516','25.19','4','504','78.02','2','409','63.31','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1035','0','5','329','422','-22.04','4','195','59.27','1','186','56.53','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1040','0','5','154','234','-34.19','4','113','73.38','2','99','64.29','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1045','0','5','126','509','-75.25','2','97','76.98','2','93','73.81','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1050','0','5','888','754','17.77','4','533','60.02','1','525','59.12','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1055','0','5','409','581','-29.6','4','292','71.39','2','241','58.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1100','0','5','423','393','7.63','4','267','63.12','1','239','56.5','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1105','0','5','322','705','-54.33','4','172','53.42','1','170','52.8','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1110','0','5','626','698','-10.32','4','513','81.95','3','456','72.84','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1115','0','5','116','490','-76.33','2','73','62.93','1','71','61.21','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1120','0','5','700','743','-5.79','4','559','79.86','2','497','71','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1125','0','5','782','51','1433.33','3','591','75.58','2','569','72.76','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1130','0','5','19','405','-95.31','1','13','68.42','1','12','63.16','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1135','0','5','887','477','85.95','4','790','89.06','3','698','78.69','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1140','0','5','155','63','146.03','4','103','66.45','1','98','63.23','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1145','0','5','746','874','-14.65','4','733','98.26','4','624','83.65','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1150','0','5','179','310','-42.26','4','100','55.87','1','81','45.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1155','0','5','946','46','1956.52','3','746','78.86','2','653','69.03','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1200','0','5','68','247','-72.47','2','52','76.47','2','43','63.24','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1205','0','5','173','361','-52.08','4','96','55.49','1','96','55.49','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1210','0','5','339','416','-18.51','4','219','64.6','1','198','58.41','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1215','0','5','478','186','156.99','4','456','95.4','4','436','91.21','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1220','0','5','490','37','1224.32','3','385','78.57','2','354','72.24','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1225','0','5','797','611','30.44','4','725','90.97','4','646','81.05','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1230','0','5','651','710','-8.31','4','513','78.8','2','509','78.19','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1235','0','5','802','848','-5.42','4','797','99.38','4','781','97.38','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1240','0','5','835','400','108.75','4','577','69.1','1','508','60.84','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'   | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1000' and C_TIME <= '1300'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1000' and C_TIME <= '1300'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1000' and C_TIME <= '1300'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1000' and C_TIME <= '1300'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1000' and C_TIME <= '1300'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                          ['Attach','0001','SEOUL-METRO-MME1','20220531','1000','0','5','162','21','671.43','4','105','58.64','1','95','64.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1005','0','5','103','159','-35.22','3','70','55.34','1','57','67.96','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1010','0','5','160','168','-4.76','4','97','51.88','1','83','60.62','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1015','0','5','1','16','-93.75','4','1','100','4','1','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1020','0','5','161','187','-13.9','4','133','77.02','2','124','82.61','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1025','0','5','150','16','837.5','4','77','51.33','1','77','51.33','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1030','0','5','152','47','223.4','4','81','49.34','1','75','53.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1035','0','5','93','160','-41.88','3','51','54.84','1','51','54.84','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1040','0','5','46','178','-74.16','3','44','82.61','3','38','95.65','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1045','0','5','161','105','53.33','4','150','88.82','3','143','93.17','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1050','0','5','192','22','772.73','4','141','69.27','1','133','73.44','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1055','0','5','106','6','1666.67','4','63','50.94','1','54','59.43','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1100','0','5','4','185','-97.84','4','4','100','4','4','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1105','0','5','96','55','74.55','4','92','81.25','3','78','95.83','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1110','0','5','197','133','48.12','4','119','54.31','1','107','60.41','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1115','0','5','123','70','75.71','4','120','93.5','4','115','97.56','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1120','0','5','131','170','-22.94','3','126','79.39','2','104','96.18','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1125','0','5','1','131','-99.24','4','1','100','4','1','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1130','0','5','192','177','8.47','4','118','58.85','1','113','61.46','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1135','0','5','78','48','62.5','4','47','60.26','1','47','60.26','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1140','0','5','166','79','110.13','4','105','51.2','1','85','63.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1145','0','5','30','45','-33.33','3','16','50','1','15','53.33','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1150','0','5','134','14','857.14','4','72','53.73','1','72','53.73','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1155','0','5','10','109','-90.83','4','10','90','4','9','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1200','0','5','26','141','-81.56','1','23','84.62','3','22','88.46','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1205','0','5','82','140','-41.43','3','78','89.02','3','73','95.12','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1210','0','5','143','14','921.43','4','137','89.51','3','128','95.8','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1215','0','5','181','21','761.9','4','166','88.95','3','161','91.71','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1220','0','5','185','156','18.59','4','94','45.41','1','84','50.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1225','0','5','74','24','208.33','4','51','66.22','1','49','68.92','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1230','0','5','89','179','-50.28','3','76','79.78','2','71','85.39','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1235','0','5','118','16','637.5','4','66','46.61','1','55','55.93','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1240','0','5','112','196','-42.86','3','72','52.68','1','59','64.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],                                          ['SR','0001','SEOUL-METRO-MME1','20220531','1000','0','5','828','401','106.48','4','646','78.02','2','579','69.93','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1005','0','5','700','911','-23.16','4','536','76.57','2','503','71.86','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1010','0','5','100','183','-45.36','4','77','77','2','70','70','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1015','0','5','768','767','0.13','4','551','71.74','2','547','71.22','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1020','0','5','579','714','-18.91','4','537','92.75','4','487','84.11','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1025','0','5','827','604','36.92','4','798','96.49','4','784','94.8','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1030','0','5','646','516','25.19','4','504','78.02','2','409','63.31','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1035','0','5','329','422','-22.04','4','195','59.27','1','186','56.53','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1040','0','5','154','234','-34.19','4','113','73.38','2','99','64.29','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1045','0','5','126','509','-75.25','2','97','76.98','2','93','73.81','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1050','0','5','888','754','17.77','4','533','60.02','1','525','59.12','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1055','0','5','409','581','-29.6','4','292','71.39','2','241','58.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1100','0','5','423','393','7.63','4','267','63.12','1','239','56.5','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1105','0','5','322','705','-54.33','4','172','53.42','1','170','52.8','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1110','0','5','626','698','-10.32','4','513','81.95','3','456','72.84','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1115','0','5','116','490','-76.33','2','73','62.93','1','71','61.21','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1120','0','5','700','743','-5.79','4','559','79.86','2','497','71','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1125','0','5','782','51','1433.33','3','591','75.58','2','569','72.76','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1130','0','5','19','405','-95.31','1','13','68.42','1','12','63.16','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1135','0','5','887','477','85.95','4','790','89.06','3','698','78.69','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1140','0','5','155','63','146.03','4','103','66.45','1','98','63.23','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1145','0','5','746','874','-14.65','4','733','98.26','4','624','83.65','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1150','0','5','179','310','-42.26','4','100','55.87','1','81','45.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1155','0','5','946','46','1956.52','3','746','78.86','2','653','69.03','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1200','0','5','68','247','-72.47','2','52','76.47','2','43','63.24','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1205','0','5','173','361','-52.08','4','96','55.49','1','96','55.49','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1210','0','5','339','416','-18.51','4','219','64.6','1','198','58.41','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1215','0','5','478','186','156.99','4','456','95.4','4','436','91.21','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1220','0','5','490','37','1224.32','3','385','78.57','2','354','72.24','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1225','0','5','797','611','30.44','4','725','90.97','4','646','81.05','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1230','0','5','651','710','-8.31','4','513','78.8','2','509','78.19','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1235','0','5','802','848','-5.42','4','797','99.38','4','781','97.38','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1240','0','5','835','400','108.75','4','577','69.1','1','508','60.84','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'   | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-13:15`, max (PCA_B1) as `PCEF-시도호-13:10`, max (PCAS_N) as `PCEF-기준시도호-13:15`, max (PCAS_B1) as `PCEF-기준시도호-13:10`, max (PCAR_N) as `PCEF-시도호 증감율(%)-13:15`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-13:10`, max (PCS_N) as `PCEF-성공호-13:15`, max (PCS_B1) as `PCEF-성공호-13:10`, max (PCSR_N) as `PCEF-성공율(%)-13:15`, max (PCSR_B1) as `PCEF-성공율(%)-13:10`, max (SPA_N) as `SPR-시도호-13:15`, max (SPA_B1) as `SPR-시도호-13:10`, max (SPAS_N) as `SPR-기준시도호-13:15`, max (SPAS_B1) as `SPR-기준시도호-13:10`, max (SPAR_N) as `SPR-시도호 증감율(%)-13:15`, max (SPAR_B1) as `SPR-시도호 증감율(%)-13:10`, max (SPS_N) as `SPR-성공호-13:15`, max (SPS_B1) as `SPR-성공호-13:10`, max (SPSR_N) as `SPR-성공율(%)-13:15`, max (SPSR_B1) as `SPR-성공율(%)-13:10`, max (AFA_N) as `AF-시도호-13:15`, max (AFA_B1) as `AF-시도호-13:10`, max (AFAS_N) as `AF-기준시도호-13:15`, max (AFAS_B1) as `AF-기준시도호-13:10`, max (AFAR_N) as `AF-시도호 증감율(%)-13:15`, max (AFAR_B1) as `AF-시도호 증감율(%)-13:10`, max (AFS_N) as `AF-성공호-13:15`, max (AFS_B1) as `AF-성공호-13:10`, max (AFSR_N) as `AF-성공율(%)-13:15`, max (AFSR_B1) as `AF-성공율(%)-13:10`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1255' and  C_TIME <= '1315'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 12:55:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-13:15`, max (HDA_B1) as `Diameter Stack-시도호-13:10`, max (HDAS_N) as `Diameter Stack-기준시도호-13:15`, max (HDAS_B1) as `Diameter Stack-기준시도호-13:10`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-13:15`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-13:10`, max (HDS_N) as `Diameter Stack-성공호-13:15`, max (HDS_B1) as `Diameter Stack-성공호-13:10`, max (HDSR_N) as `Diameter Stack-성공율(%)-13:15`, max (HDSR_B1) as `Diameter Stack-성공율(%)-13:10`, max (H13A_N) as `S13A Interface-시도호-13:15`, max (H13A_B1) as `S13A Interface-시도호-13:10`, max (H13AS_N) as `S13A Interface-기준시도호-13:15`, max (H13AS_B1) as `S13A Interface-기준시도호-13:10`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-13:15`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-13:10`, max (H13S_N) as `S13A Interface-성공호-13:15`, max (H13S_B1) as `S13A Interface-성공호-13:10`, max (H13SR_N) as `S13A Interface-성공율(%)-13:15`, max (H13SR_B1) as `S13A Interface-성공율(%)-13:10`, max (H6A_N) as `S6A Interface-시도호-13:15`, max (H6A_B1) as `S6A Interface-시도호-13:10`, max (H6AS_N) as `S6A Interface-기준시도호-13:15`, max (H6AS_B1) as `S6A Interface-기준시도호-13:10`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-13:15`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-13:10`, max (H6S_N) as `S6A Interface-성공호-13:15`, max (H6S_B1) as `S6A Interface-성공호-13:10`, max (H6SR_N) as `S6A Interface-성공율(%)-13:15`, max (H6SR_B1) as `S6A Interface-성공율(%)-13:10`, max (HSA_N) as `SP Interface-시도호-13:15`, max (HSA_B1) as `SP Interface-시도호-13:10`, max (HSAS_N) as `SP Interface-기준시도호-13:15`, max (HSAS_B1) as `SP Interface-기준시도호-13:10`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-13:15`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-13:10`, max (HSS_N) as `SP Interface-성공호-13:15`, max (HSS_B1) as `SP Interface-성공호-13:10`, max (HSSR_N) as `SP Interface-성공율(%)-13:15`, max (HSSR_B1) as `SP Interface-성공율(%)-13:10`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-13:20`, max (PCA_B1) as `PCEF-시도호-13:15`, max (PCAS_N) as `PCEF-기준시도호-13:20`, max (PCAS_B1) as `PCEF-기준시도호-13:15`, max (PCAR_N) as `PCEF-시도호 증감율(%)-13:20`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-13:15`, max (PCS_N) as `PCEF-성공호-13:20`, max (PCS_B1) as `PCEF-성공호-13:15`, max (PCSR_N) as `PCEF-성공율(%)-13:20`, max (PCSR_B1) as `PCEF-성공율(%)-13:15`, max (SPA_N) as `SPR-시도호-13:20`, max (SPA_B1) as `SPR-시도호-13:15`, max (SPAS_N) as `SPR-기준시도호-13:20`, max (SPAS_B1) as `SPR-기준시도호-13:15`, max (SPAR_N) as `SPR-시도호 증감율(%)-13:20`, max (SPAR_B1) as `SPR-시도호 증감율(%)-13:15`, max (SPS_N) as `SPR-성공호-13:20`, max (SPS_B1) as `SPR-성공호-13:15`, max (SPSR_N) as `SPR-성공율(%)-13:20`, max (SPSR_B1) as `SPR-성공율(%)-13:15`, max (AFA_N) as `AF-시도호-13:20`, max (AFA_B1) as `AF-시도호-13:15`, max (AFAS_N) as `AF-기준시도호-13:20`, max (AFAS_B1) as `AF-기준시도호-13:15`, max (AFAR_N) as `AF-시도호 증감율(%)-13:20`, max (AFAR_B1) as `AF-시도호 증감율(%)-13:15`, max (AFS_N) as `AF-성공호-13:20`, max (AFS_B1) as `AF-성공호-13:15`, max (AFSR_N) as `AF-성공율(%)-13:20`, max (AFSR_B1) as `AF-성공율(%)-13:15`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1300' and  C_TIME <= '1320'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 13:20:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 13:15:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 13:10:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 13:05:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 13:00:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-13:20`, max (HDA_B1) as `Diameter Stack-시도호-13:15`, max (HDAS_N) as `Diameter Stack-기준시도호-13:20`, max (HDAS_B1) as `Diameter Stack-기준시도호-13:15`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-13:20`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-13:15`, max (HDS_N) as `Diameter Stack-성공호-13:20`, max (HDS_B1) as `Diameter Stack-성공호-13:15`, max (HDSR_N) as `Diameter Stack-성공율(%)-13:20`, max (HDSR_B1) as `Diameter Stack-성공율(%)-13:15`, max (H13A_N) as `S13A Interface-시도호-13:20`, max (H13A_B1) as `S13A Interface-시도호-13:15`, max (H13AS_N) as `S13A Interface-기준시도호-13:20`, max (H13AS_B1) as `S13A Interface-기준시도호-13:15`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-13:20`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-13:15`, max (H13S_N) as `S13A Interface-성공호-13:20`, max (H13S_B1) as `S13A Interface-성공호-13:15`, max (H13SR_N) as `S13A Interface-성공율(%)-13:20`, max (H13SR_B1) as `S13A Interface-성공율(%)-13:15`, max (H6A_N) as `S6A Interface-시도호-13:20`, max (H6A_B1) as `S6A Interface-시도호-13:15`, max (H6AS_N) as `S6A Interface-기준시도호-13:20`, max (H6AS_B1) as `S6A Interface-기준시도호-13:15`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-13:20`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-13:15`, max (H6S_N) as `S6A Interface-성공호-13:20`, max (H6S_B1) as `S6A Interface-성공호-13:15`, max (H6SR_N) as `S6A Interface-성공율(%)-13:20`, max (H6SR_B1) as `S6A Interface-성공율(%)-13:15`, max (HSA_N) as `SP Interface-시도호-13:20`, max (HSA_B1) as `SP Interface-시도호-13:15`, max (HSAS_N) as `SP Interface-기준시도호-13:20`, max (HSAS_B1) as `SP Interface-기준시도호-13:15`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-13:20`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-13:15`, max (HSS_N) as `SP Interface-성공호-13:20`, max (HSS_B1) as `SP Interface-성공호-13:15`, max (HSSR_N) as `SP Interface-성공율(%)-13:20`, max (HSSR_B1) as `SP Interface-성공율(%)-13:15`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1020' and C_TIME <= '1320'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1020' and C_TIME <= '1320'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                          ['Attach','0001','SEOUL-METRO-MME1','20220531','1020','0','5','161','187','-13.9','4','133','77.02','2','124','82.61','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1025','0','5','150','16','837.5','4','77','51.33','1','77','51.33','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1030','0','5','152','47','223.4','4','81','49.34','1','75','53.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1035','0','5','93','160','-41.88','3','51','54.84','1','51','54.84','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1040','0','5','46','178','-74.16','3','44','82.61','3','38','95.65','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1045','0','5','161','105','53.33','4','150','88.82','3','143','93.17','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1050','0','5','192','22','772.73','4','141','69.27','1','133','73.44','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1055','0','5','106','6','1666.67','4','63','50.94','1','54','59.43','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1100','0','5','4','185','-97.84','4','4','100','4','4','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1105','0','5','96','55','74.55','4','92','81.25','3','78','95.83','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1110','0','5','197','133','48.12','4','119','54.31','1','107','60.41','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1115','0','5','123','70','75.71','4','120','93.5','4','115','97.56','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1120','0','5','131','170','-22.94','3','126','79.39','2','104','96.18','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1125','0','5','1','131','-99.24','4','1','100','4','1','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1130','0','5','192','177','8.47','4','118','58.85','1','113','61.46','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1135','0','5','78','48','62.5','4','47','60.26','1','47','60.26','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1140','0','5','166','79','110.13','4','105','51.2','1','85','63.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1145','0','5','30','45','-33.33','3','16','50','1','15','53.33','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1150','0','5','134','14','857.14','4','72','53.73','1','72','53.73','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1155','0','5','10','109','-90.83','4','10','90','4','9','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1200','0','5','26','141','-81.56','1','23','84.62','3','22','88.46','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1205','0','5','82','140','-41.43','3','78','89.02','3','73','95.12','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1210','0','5','143','14','921.43','4','137','89.51','3','128','95.8','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1215','0','5','181','21','761.9','4','166','88.95','3','161','91.71','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1220','0','5','185','156','18.59','4','94','45.41','1','84','50.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1225','0','5','74','24','208.33','4','51','66.22','1','49','68.92','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1230','0','5','89','179','-50.28','3','76','79.78','2','71','85.39','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1235','0','5','118','16','637.5','4','66','46.61','1','55','55.93','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1240','0','5','112','196','-42.86','3','72','52.68','1','59','64.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],                                          ['SR','0001','SEOUL-METRO-MME1','20220531','1020','0','5','579','714','-18.91','4','537','92.75','4','487','84.11','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1025','0','5','827','604','36.92','4','798','96.49','4','784','94.8','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1030','0','5','646','516','25.19','4','504','78.02','2','409','63.31','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1035','0','5','329','422','-22.04','4','195','59.27','1','186','56.53','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1040','0','5','154','234','-34.19','4','113','73.38','2','99','64.29','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1045','0','5','126','509','-75.25','2','97','76.98','2','93','73.81','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1050','0','5','888','754','17.77','4','533','60.02','1','525','59.12','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1055','0','5','409','581','-29.6','4','292','71.39','2','241','58.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1100','0','5','423','393','7.63','4','267','63.12','1','239','56.5','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1105','0','5','322','705','-54.33','4','172','53.42','1','170','52.8','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1110','0','5','626','698','-10.32','4','513','81.95','3','456','72.84','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1115','0','5','116','490','-76.33','2','73','62.93','1','71','61.21','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1120','0','5','700','743','-5.79','4','559','79.86','2','497','71','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1125','0','5','782','51','1433.33','3','591','75.58','2','569','72.76','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1130','0','5','19','405','-95.31','1','13','68.42','1','12','63.16','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1135','0','5','887','477','85.95','4','790','89.06','3','698','78.69','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1140','0','5','155','63','146.03','4','103','66.45','1','98','63.23','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1145','0','5','746','874','-14.65','4','733','98.26','4','624','83.65','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1150','0','5','179','310','-42.26','4','100','55.87','1','81','45.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1155','0','5','946','46','1956.52','3','746','78.86','2','653','69.03','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1200','0','5','68','247','-72.47','2','52','76.47','2','43','63.24','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1205','0','5','173','361','-52.08','4','96','55.49','1','96','55.49','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1210','0','5','339','416','-18.51','4','219','64.6','1','198','58.41','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1215','0','5','478','186','156.99','4','456','95.4','4','436','91.21','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1220','0','5','490','37','1224.32','3','385','78.57','2','354','72.24','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1225','0','5','797','611','30.44','4','725','90.97','4','646','81.05','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1230','0','5','651','710','-8.31','4','513','78.8','2','509','78.19','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1235','0','5','802','848','-5.42','4','797','99.38','4','781','97.38','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1240','0','5','835','400','108.75','4','577','69.1','1','508','60.84','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1035' and C_TIME <= '1335'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1035' and C_TIME <= '1335'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [            ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1040' and C_TIME <= '1340'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1040' and C_TIME <= '1340'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                              'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200198','P2200231' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  |  merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and    YEAR = PWU.ENT_YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   | case when  ENT_YY = '202201'  and '04' = '01' then MM_01   when ENT_YY = '202201'  and '04' = '02' then MM_01 + MM_02   when ENT_YY = '202201'  and '04' = '03' then MM_01 + MM_02 + MM_03   when ENT_YY = '202201'  and '04' = '04' then MM_01 + MM_02 + MM_03 + MM_04   when ENT_YY = '202201'  and '04' = '05' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05   when ENT_YY = '202201'  and '04' = '06' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06   when ENT_YY = '202201'  and '04' = '07' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07   when ENT_YY = '202201'  and '04' = '08' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08   when ENT_YY = '202201'  and '04' = '09' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09   when ENT_YY = '202201'  and '04' = '10' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10   when ENT_YY = '202201'  and '04' = '11' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11   when ENT_YY = '202201'  and '04' = '12'  then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    otherwise 0 as  투입된MM   |  case when ENT_YY = '202201'  then   MM_YEAR - 투입된MM  otherwise 0 as 남은MM  |  case when ENT_YY = '202201'   then   투입된MM  * PWU_WORK_UNITCOST otherwise 0 as 투입된_인건비  |  case when ENT_YY = '202201'  then   MM_YEAR * PWU_WORK_UNITCOST  otherwise 0 as 인건비합계  | fillna 인건비합계 0 | fields PJT_CD, EMP_CD, ENT_YY, MM_YEAR, 인건비합계, 투입된MM ,남은MM, 투입된_인건비   | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | stats sum(MM_YEAR) as MM_YEAR, sum(인건비합계) as 인건비합계,sum(투입된MM) as 투입된MM, sum(남은MM) as 남은MM, sum(투입된_인건비) as 투입된인건비 by MP_SALE_CD, ENT_YY  |  calculate 투입된MM  / MM_YEAR * 100  as 진도율  | fields MP_SALE_CD as 영업코드,진도율  | round 1 col = 진도율  | fillna 영업코드 | sort 영업코드
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                              'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200198','P2200231' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD   | where vBPS_PJT_CD in (                                              'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200198','P2200231' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD   | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD    | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액  | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명   |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                              'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200198','P2200231' )  | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint  | typecast 추정비용 bigint | calculate  추정순매출 - 추정비용 as 추정이익 | typecast 추정이익 bigint | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | typecast 순매출  bigint  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율,MSCP_CONT_SEQ    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo | where   SALE_CD =  'S1900309'  |  distinct PJT_CD |  where PJT_CD in  (                                              'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200198','P2200231' )
model name = 'mo_SALE_STATUS_ITEM' model_owner = demo |  where SALE_CD  = 'S1900309'  | sort  ITEM_SEQ,SUB_SEQ  |  typecast BUY_COST bigint |  typecast SALE_COST bigint  | substr BILL_TY 1 2 as L_CLASS | substr BILL_TY 3 2 as M_CLASS  | merge left_outer ( mo_PCOD_CLASS CLASS_TY = '007'   LEVEL_TY = '2' ) as PC  on L_CLASS = PC.L_CLASS and M_CLASS = PC.M_CLASS  | fields SALE_CD as 영업코드,  PC_CLASS_NM as 항목구분,SUPPLIER_NM as 공급회사,ITEM_NM as 항목,ENT_DATE as 납품예상일,CLS_DATE as 종료일,PJT_CD as 프로젝트코드,QTY as 수량,BUY_COST as 매입금액,SALE_COST as 매출금액,ITEM_BIGO as 비고
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD in (    'P2200018' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  |  merge left_outer ( mo_SYS_USER_INFO ) as SU on EMP_CD = SU.EMP_CD  | concat "S1900309" , ""  as 영업코드    | merge left_outer ( mo_BIZ_PROJECT ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트' when BP_L_CLASS = '21' then '과제개발프로젝트' when BP_L_CLASS = '31' then '연구개발프로젝트' when BP_L_CLASS = '90' then '그룹투자프로젝트' when BP_L_CLASS = '91' then '전사투자프로젝트' otherwise '기타' as  프로젝트분류   | fields  영업코드,계약코드,PJT_CD,프로젝트분류,BP_ENT_DATE  as PJT시작일, BP_CLS_DATE as PJT종료일,SU_EMP_NM as 이름,SU_DEPT_NM as 팀,YEAR,MM_YEAR as 연간MM,인건비_YEAR, MM_01 as 1월,MM_02 as 2월,MM_03 as 3월,MM_04 as  4월,MM_05 as 5월,MM_06 as 6월,MM_07 as 7월,MM_08 as 8월,MM_09 as 9월,MM_10 as 10월,MM_11 as 11월,MM_12 as 12월  |  where 연간MM > 0.0  | sort PJT_CD  | fillna 이름 투입예정  | calculate add col  | fillna 영업코드 합계  | typecast 인건비_YEAR bigint
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo | where   SALE_CD =  ''  |  distinct PJT_CD |  where PJT_CD in  (                                              'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200198','P2200231' )
model name = 'mo_SALE_STATUS_ITEM' model_owner = demo |  where SALE_CD  = ''  | sort  ITEM_SEQ,SUB_SEQ  |  typecast BUY_COST bigint |  typecast SALE_COST bigint  | substr BILL_TY 1 2 as L_CLASS | substr BILL_TY 3 2 as M_CLASS  | merge left_outer ( mo_PCOD_CLASS CLASS_TY = '007'   LEVEL_TY = '2' ) as PC  on L_CLASS = PC.L_CLASS and M_CLASS = PC.M_CLASS  | fields SALE_CD as 영업코드,  PC_CLASS_NM as 항목구분,SUPPLIER_NM as 공급회사,ITEM_NM as 항목,ENT_DATE as 납품예상일,CLS_DATE as 종료일,PJT_CD as 프로젝트코드,QTY as 수량,BUY_COST as 매입금액,SALE_COST as 매출금액,ITEM_BIGO as 비고
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1050' and C_TIME <= '1350'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1050' and C_TIME <= '1350'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1050' and C_TIME <= '1350'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1050' and C_TIME <= '1350'   | where SGW_ID in ('')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1050' and C_TIME <= '1350'   | where SGW_ID in ('')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1050' and C_TIME <= '1350'   | where SGW_ID in ('')    | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where   USE_YN = 'Y'   | where CHILD = 'N' and  DEPT_LEVEL <=  '4'  and ( PARENT = '26110300'  or ID = '26110300'  )  |  where ID not in ( 26210311, 26210313, 26210319, 26210321 )  | fields ID
model name = 'mo_SYS_USER_INFO' model_owner = demo | where   DEPT_CD in  ( 26110301,26110302,26110314, 26110300)   |  where CLS_DATE >=  '20220101'  |  distinct EMP_CD |  sort EMP_CD
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY  | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200095,200504,200507,201203,201209,201401,201435,201439,201507,201701,201756,201804,201825,201865,201881,201883,201902,201921,201928,202018,202021,202055,202060,202063,202074,202076,221029,221036,221043,221055,221091 )  | where L_CLASS = '11'  | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where DEPT_CD  in (         '26110301','26110302','26110314' ) or  EMP_CD in  (                                                                 '200095','200504','200507','201203','201209','201401','201435','201439','201507','201701','201756','201804','201825','201865','201881','201883','201902','201921','201928','202018','202021','202055','202060','202063','202074','202076','221029','221036','221043','221055','221091' )    | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD   | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  |  merge left_outer ( mo_SYS_USER_INFO   ) as PJTSU on BP_PJTPM_CD =  PJTSU.EMP_CD  | rename PJTSU_DEPT_NM PM부서 | rename PJTSU_DEPT_CD PM_DEPT_CD  | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on PM_DEPT_CD = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  PM_DEPT_CD  as PM그룹_ID  |  case when PM_DEPT_CD  in ( 26110301,26110302,26110314, 26110300  ) then 1 otherwise 0  as FLAG  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  연간인건비  | fields EMP_CD,SU_EMP_NM as 이름,SU_DEPT_NM as 팀, PJT_CD,구분, PM부서,MM_YEAR as  연간MM,연간인건비,FLAG,PM_DEPT_CD,PM그룹_ID  |  where FLAG = 0  or 구분  in ( '전사투자프로젝트', '연구개발프로젝트' )  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on PM그룹_ID = NSD.ID  | rename NSD_DEPT_NM PM그룹  | case when  구분  in ( '연구개발프로젝트', '전사투자프로젝트')  then '전사투자/연구개발'   otherwise PM그룹  as 그룹명  |  stats countDistinct(PJT_CD) as 프로젝트수, sum(연간MM) as MM합계, sum(연간인건비)  as  인건비합계 by  그룹명  | sort  - 인건비합계   |  case when 그룹명 is null or 그룹명 = '' then '그룹명 없음'  otherwise 그룹명 as 그룹명  | where 그룹명 != '전사투자/연구개발'  | calculate add col 인건비합계, MM합계, 프로젝트수  | typecast 인건비합계 bigint   | fillna 그룹명  합계
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where PJT_CD  in (                                                   'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )   | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as YEAR  | merge left_outer ( mo_BIZ_PROJECT  ) as BP on PJT_CD = BP.PJT_CD  | case when BP_L_CLASS = '11' then '과제수행프로젝트'      when BP_L_CLASS = '21' then '과제개발프로젝트'      when BP_L_CLASS = '31' then '연구개발프로젝트'      when BP_L_CLASS = '90' then '그룹투자프로젝트'      when BP_L_CLASS = '91' then '전사투자프로젝트'      otherwise '기타' as 구분  | where BP_L_CLASS  not in ( '91', '31' )   | rename BP_PJT_NM 프로젝트명  | where EMP_CD not in (                                                                '200095','200504','200507','201203','201209','201401','201435','201439','201507','201701','201756','201804','201825','201865','201881','201883','201902','201921','201928','202018','202021','202055','202060','202063','202074','202076','221029','221036','221043','221055','221091' )    |  merge left_outer ( mo_SYS_USER_INFO   ) as SU on EMP_CD =  SU.EMP_CD  | rename SU_DEPT_NM  팀 | rename SU_DEPT_CD  팀코드  | where  팀코드 not in (        '26110301','26110302','26110314' )    | merge left_outer ( mo_SYS_DEPT_INFO ) as SD on  팀코드 = SD.ID  | case when SD_CHILD = 'N'  then SD_PARENT otherwise  팀코드  as  그룹코드  | merge left_outer ( mo_SYS_DEPT_INFO ) as NSD on 그룹코드 = NSD.ID  | rename NSD_DEPT_NM 그룹명  | fillna 그룹명  | case when 그룹명 = '연구소'  and  팀  not in ( 'AI응용연구팀', 'AI플랫폼연구팀' ) then  '연구소'   when 그룹명 = '연구소'  and  팀   in ( 'AI응용연구팀', 'AI플랫폼연구팀' ) then '연구소_AI'  when 그룹명 = '(주)모비젠'  then 팀  otherwise  그룹명 as 그룹명   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR     | where  MM_YEAR > 0.0  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | where   EMP_CD not like 'M%'    | calculate MM_YEAR * PWU_WORK_UNITCOST as  연간인건비  | fields EMP_CD,SU_EMP_NM as 이름,팀, PJT_CD,구분,프로젝트명,MM_YEAR as  연간MM,연간인건비,팀코드,그룹명  | sort  PJT_CD  | stats sum(연간MM) as MM합계, sum(연간인건비)  as  인건비합계 by 그룹명  | sort - 인건비합계  | calculate add col  MM합계, 인건비합계  | typecast 인건비합계 bigint  | fillna 그룹명 합계
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |   where PJT_CD in (                                  'P2100229','P2100337','P2200104','P2200106','P2200107','P2200232','P2100130','P2100278','P2200047','P2200082','P2200083','P2200094','P2200105','P2200193','P2200198','P2200231' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0 |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR    |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | substr ENT_YY 1 4 as  YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD  | where vBPS_PJT_CD in (                                  'P2100229','P2100337','P2200104','P2200106','P2200107','P2200232','P2100130','P2100278','P2200047','P2200082','P2200083','P2200094','P2200105','P2200193','P2200198','P2200231' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD  | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD   | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액    | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명  |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                  'P2100229','P2100337','P2200104','P2200106','P2200107','P2200232','P2100130','P2100278','P2200047','P2200082','P2200083','P2200094','P2200105','P2200193','P2200198','P2200231' )    | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint   | calculate  추정순매출 - 추정비용 as 추정이익  | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익  | typecast 추정이익 bigint | typecast 순매출  bigint | typecast 추정비용 bigint
model name = 'mo_SYS_DEPT_INFO' model_owner = demo | where ID = '26110300'   and USE_YN = 'Y'  |  fields DEPT_NM
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo |  where ENT_YY = '202201'   | where PJT_CD in (                                                       'P2100245','P2200003','P2200004','P2200005','P2200011','P2200026','P2200028','P2200115','P2200127','P2200209','P2200212','P2100330','P2200007','P2200012','P2200013','P2200014','P2200025','P2200027','P2200085','P2200086','P2200120','P2200177','P2200179','P2200210','P2200211','P2200213' )   | where EMP_CD in (                                                                                                                                                                                                                                                                                              '201439','201439','201883','201921','221091','200504','200507','201203','201209','201401','201435','201507','201701','201756','201804','201825','201865','201881','201902','201928','202018','202021','202055','202060','202063','202074','202076','221029','221036','221043','221055'  )  | where MM_YEAR > 0.0  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ENT_YEAR = '2022' ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN    | calculate  MM_YEAR * PWU_WORK_UNITCOST as   연구개발_전사투자인건비  | stats sum(연구개발_전사투자인건비) as 연구개발_전사투자인건비
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1055' and C_TIME <= '1355'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort - C_DATE, - C_TIME, - STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:00`, max (PCA_B1) as `PCEF-시도호-13:55`, max (PCAS_N) as `PCEF-기준시도호-14:00`, max (PCAS_B1) as `PCEF-기준시도호-13:55`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:00`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-13:55`, max (PCS_N) as `PCEF-성공호-14:00`, max (PCS_B1) as `PCEF-성공호-13:55`, max (PCSR_N) as `PCEF-성공율(%)-14:00`, max (PCSR_B1) as `PCEF-성공율(%)-13:55`, max (SPA_N) as `SPR-시도호-14:00`, max (SPA_B1) as `SPR-시도호-13:55`, max (SPAS_N) as `SPR-기준시도호-14:00`, max (SPAS_B1) as `SPR-기준시도호-13:55`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:00`, max (SPAR_B1) as `SPR-시도호 증감율(%)-13:55`, max (SPS_N) as `SPR-성공호-14:00`, max (SPS_B1) as `SPR-성공호-13:55`, max (SPSR_N) as `SPR-성공율(%)-14:00`, max (SPSR_B1) as `SPR-성공율(%)-13:55`, max (AFA_N) as `AF-시도호-14:00`, max (AFA_B1) as `AF-시도호-13:55`, max (AFAS_N) as `AF-기준시도호-14:00`, max (AFAS_B1) as `AF-기준시도호-13:55`, max (AFAR_N) as `AF-시도호 증감율(%)-14:00`, max (AFAR_B1) as `AF-시도호 증감율(%)-13:55`, max (AFS_N) as `AF-성공호-14:00`, max (AFS_B1) as `AF-성공호-13:55`, max (AFSR_N) as `AF-성공율(%)-14:00`, max (AFSR_B1) as `AF-성공율(%)-13:55`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1340' and  C_TIME <= '1400'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 13:50:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 13:45:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 13:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:00`, max (HDA_B1) as `Diameter Stack-시도호-13:55`, max (HDAS_N) as `Diameter Stack-기준시도호-14:00`, max (HDAS_B1) as `Diameter Stack-기준시도호-13:55`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:00`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-13:55`, max (HDS_N) as `Diameter Stack-성공호-14:00`, max (HDS_B1) as `Diameter Stack-성공호-13:55`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:00`, max (HDSR_B1) as `Diameter Stack-성공율(%)-13:55`, max (H13A_N) as `S13A Interface-시도호-14:00`, max (H13A_B1) as `S13A Interface-시도호-13:55`, max (H13AS_N) as `S13A Interface-기준시도호-14:00`, max (H13AS_B1) as `S13A Interface-기준시도호-13:55`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:00`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-13:55`, max (H13S_N) as `S13A Interface-성공호-14:00`, max (H13S_B1) as `S13A Interface-성공호-13:55`, max (H13SR_N) as `S13A Interface-성공율(%)-14:00`, max (H13SR_B1) as `S13A Interface-성공율(%)-13:55`, max (H6A_N) as `S6A Interface-시도호-14:00`, max (H6A_B1) as `S6A Interface-시도호-13:55`, max (H6AS_N) as `S6A Interface-기준시도호-14:00`, max (H6AS_B1) as `S6A Interface-기준시도호-13:55`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:00`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-13:55`, max (H6S_N) as `S6A Interface-성공호-14:00`, max (H6S_B1) as `S6A Interface-성공호-13:55`, max (H6SR_N) as `S6A Interface-성공율(%)-14:00`, max (H6SR_B1) as `S6A Interface-성공율(%)-13:55`, max (HSA_N) as `SP Interface-시도호-14:00`, max (HSA_B1) as `SP Interface-시도호-13:55`, max (HSAS_N) as `SP Interface-기준시도호-14:00`, max (HSAS_B1) as `SP Interface-기준시도호-13:55`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:00`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-13:55`, max (HSS_N) as `SP Interface-성공호-14:00`, max (HSS_B1) as `SP Interface-성공호-13:55`, max (HSSR_N) as `SP Interface-성공율(%)-14:00`, max (HSSR_B1) as `SP Interface-성공율(%)-13:55`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1100' and C_TIME <= '1400'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort C_DATE, C_TIME, STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""   | where STATISTICS_TYPE = 'Diameter'   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1100' and C_TIME <= '1400'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort - C_DATE, - C_TIME, - STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1100' and C_TIME <= '1400'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort - C_DATE, - C_TIME, - STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""   | where STATISTICS_TYPE = 'S6A'    | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1100' and C_TIME <= '1400'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort C_DATE, C_TIME, STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""   | where STATISTICS_TYPE = 'S6A'    | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:15`, max (PCA_B1) as `PCEF-시도호-14:10`, max (PCAS_N) as `PCEF-기준시도호-14:15`, max (PCAS_B1) as `PCEF-기준시도호-14:10`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:15`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:10`, max (PCS_N) as `PCEF-성공호-14:15`, max (PCS_B1) as `PCEF-성공호-14:10`, max (PCSR_N) as `PCEF-성공율(%)-14:15`, max (PCSR_B1) as `PCEF-성공율(%)-14:10`, max (SPA_N) as `SPR-시도호-14:15`, max (SPA_B1) as `SPR-시도호-14:10`, max (SPAS_N) as `SPR-기준시도호-14:15`, max (SPAS_B1) as `SPR-기준시도호-14:10`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:15`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:10`, max (SPS_N) as `SPR-성공호-14:15`, max (SPS_B1) as `SPR-성공호-14:10`, max (SPSR_N) as `SPR-성공율(%)-14:15`, max (SPSR_B1) as `SPR-성공율(%)-14:10`, max (AFA_N) as `AF-시도호-14:15`, max (AFA_B1) as `AF-시도호-14:10`, max (AFAS_N) as `AF-기준시도호-14:15`, max (AFAS_B1) as `AF-기준시도호-14:10`, max (AFAR_N) as `AF-시도호 증감율(%)-14:15`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:10`, max (AFS_N) as `AF-성공호-14:15`, max (AFS_B1) as `AF-성공호-14:10`, max (AFSR_N) as `AF-성공율(%)-14:15`, max (AFSR_B1) as `AF-성공율(%)-14:10`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1355' and  C_TIME <= '1415'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 13:55:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:15`, max (HDA_B1) as `Diameter Stack-시도호-14:10`, max (HDAS_N) as `Diameter Stack-기준시도호-14:15`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:10`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:15`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:10`, max (HDS_N) as `Diameter Stack-성공호-14:15`, max (HDS_B1) as `Diameter Stack-성공호-14:10`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:15`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:10`, max (H13A_N) as `S13A Interface-시도호-14:15`, max (H13A_B1) as `S13A Interface-시도호-14:10`, max (H13AS_N) as `S13A Interface-기준시도호-14:15`, max (H13AS_B1) as `S13A Interface-기준시도호-14:10`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:15`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:10`, max (H13S_N) as `S13A Interface-성공호-14:15`, max (H13S_B1) as `S13A Interface-성공호-14:10`, max (H13SR_N) as `S13A Interface-성공율(%)-14:15`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:10`, max (H6A_N) as `S6A Interface-시도호-14:15`, max (H6A_B1) as `S6A Interface-시도호-14:10`, max (H6AS_N) as `S6A Interface-기준시도호-14:15`, max (H6AS_B1) as `S6A Interface-기준시도호-14:10`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:15`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:10`, max (H6S_N) as `S6A Interface-성공호-14:15`, max (H6S_B1) as `S6A Interface-성공호-14:10`, max (H6SR_N) as `S6A Interface-성공율(%)-14:15`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:10`, max (HSA_N) as `SP Interface-시도호-14:15`, max (HSA_B1) as `SP Interface-시도호-14:10`, max (HSAS_N) as `SP Interface-기준시도호-14:15`, max (HSAS_B1) as `SP Interface-기준시도호-14:10`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:15`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:10`, max (HSS_N) as `SP Interface-성공호-14:15`, max (HSS_B1) as `SP Interface-성공호-14:10`, max (HSSR_N) as `SP Interface-성공율(%)-14:15`, max (HSSR_B1) as `SP Interface-성공율(%)-14:10`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1115' and C_TIME <= '1415'   | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort C_DATE, C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1115' and C_TIME <= '1415'   | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort - C_DATE, - C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1115' and C_TIME <= '1415'   | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort C_DATE, C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE   | where KPI_TYPE = 'SPR'    | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1115' and C_TIME <= '1415'   | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort C_DATE, C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE   | where KPI_TYPE = 'AF'    | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:20`, max (PCA_B1) as `PCEF-시도호-14:15`, max (PCAS_N) as `PCEF-기준시도호-14:20`, max (PCAS_B1) as `PCEF-기준시도호-14:15`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:20`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:15`, max (PCS_N) as `PCEF-성공호-14:20`, max (PCS_B1) as `PCEF-성공호-14:15`, max (PCSR_N) as `PCEF-성공율(%)-14:20`, max (PCSR_B1) as `PCEF-성공율(%)-14:15`, max (SPA_N) as `SPR-시도호-14:20`, max (SPA_B1) as `SPR-시도호-14:15`, max (SPAS_N) as `SPR-기준시도호-14:20`, max (SPAS_B1) as `SPR-기준시도호-14:15`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:20`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:15`, max (SPS_N) as `SPR-성공호-14:20`, max (SPS_B1) as `SPR-성공호-14:15`, max (SPSR_N) as `SPR-성공율(%)-14:20`, max (SPSR_B1) as `SPR-성공율(%)-14:15`, max (AFA_N) as `AF-시도호-14:20`, max (AFA_B1) as `AF-시도호-14:15`, max (AFAS_N) as `AF-기준시도호-14:20`, max (AFAS_B1) as `AF-기준시도호-14:15`, max (AFAR_N) as `AF-시도호 증감율(%)-14:20`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:15`, max (AFS_N) as `AF-성공호-14:20`, max (AFS_B1) as `AF-성공호-14:15`, max (AFSR_N) as `AF-성공율(%)-14:20`, max (AFSR_B1) as `AF-성공율(%)-14:15`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1400' and  C_TIME <= '1420'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 14:00:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:20`, max (HDA_B1) as `Diameter Stack-시도호-14:15`, max (HDAS_N) as `Diameter Stack-기준시도호-14:20`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:15`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:20`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:15`, max (HDS_N) as `Diameter Stack-성공호-14:20`, max (HDS_B1) as `Diameter Stack-성공호-14:15`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:20`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:15`, max (H13A_N) as `S13A Interface-시도호-14:20`, max (H13A_B1) as `S13A Interface-시도호-14:15`, max (H13AS_N) as `S13A Interface-기준시도호-14:20`, max (H13AS_B1) as `S13A Interface-기준시도호-14:15`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:20`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:15`, max (H13S_N) as `S13A Interface-성공호-14:20`, max (H13S_B1) as `S13A Interface-성공호-14:15`, max (H13SR_N) as `S13A Interface-성공율(%)-14:20`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:15`, max (H6A_N) as `S6A Interface-시도호-14:20`, max (H6A_B1) as `S6A Interface-시도호-14:15`, max (H6AS_N) as `S6A Interface-기준시도호-14:20`, max (H6AS_B1) as `S6A Interface-기준시도호-14:15`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:20`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:15`, max (H6S_N) as `S6A Interface-성공호-14:20`, max (H6S_B1) as `S6A Interface-성공호-14:15`, max (H6SR_N) as `S6A Interface-성공율(%)-14:20`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:15`, max (HSA_N) as `SP Interface-시도호-14:20`, max (HSA_B1) as `SP Interface-시도호-14:15`, max (HSAS_N) as `SP Interface-기준시도호-14:20`, max (HSAS_B1) as `SP Interface-기준시도호-14:15`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:20`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:15`, max (HSS_N) as `SP Interface-성공호-14:20`, max (HSS_B1) as `SP Interface-성공호-14:15`, max (HSSR_N) as `SP Interface-성공율(%)-14:20`, max (HSSR_B1) as `SP Interface-성공율(%)-14:15`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:25`, max (PCA_B1) as `PCEF-시도호-14:20`, max (PCAS_N) as `PCEF-기준시도호-14:25`, max (PCAS_B1) as `PCEF-기준시도호-14:20`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:25`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:20`, max (PCS_N) as `PCEF-성공호-14:25`, max (PCS_B1) as `PCEF-성공호-14:20`, max (PCSR_N) as `PCEF-성공율(%)-14:25`, max (PCSR_B1) as `PCEF-성공율(%)-14:20`, max (SPA_N) as `SPR-시도호-14:25`, max (SPA_B1) as `SPR-시도호-14:20`, max (SPAS_N) as `SPR-기준시도호-14:25`, max (SPAS_B1) as `SPR-기준시도호-14:20`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:25`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:20`, max (SPS_N) as `SPR-성공호-14:25`, max (SPS_B1) as `SPR-성공호-14:20`, max (SPSR_N) as `SPR-성공율(%)-14:25`, max (SPSR_B1) as `SPR-성공율(%)-14:20`, max (AFA_N) as `AF-시도호-14:25`, max (AFA_B1) as `AF-시도호-14:20`, max (AFAS_N) as `AF-기준시도호-14:25`, max (AFAS_B1) as `AF-기준시도호-14:20`, max (AFAR_N) as `AF-시도호 증감율(%)-14:25`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:20`, max (AFS_N) as `AF-성공호-14:25`, max (AFS_B1) as `AF-성공호-14:20`, max (AFSR_N) as `AF-성공율(%)-14:25`, max (AFSR_B1) as `AF-성공율(%)-14:20`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1405' and  C_TIME <= '1425'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 14:05:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:25`, max (HDA_B1) as `Diameter Stack-시도호-14:20`, max (HDAS_N) as `Diameter Stack-기준시도호-14:25`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:20`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:25`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:20`, max (HDS_N) as `Diameter Stack-성공호-14:25`, max (HDS_B1) as `Diameter Stack-성공호-14:20`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:25`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:20`, max (H13A_N) as `S13A Interface-시도호-14:25`, max (H13A_B1) as `S13A Interface-시도호-14:20`, max (H13AS_N) as `S13A Interface-기준시도호-14:25`, max (H13AS_B1) as `S13A Interface-기준시도호-14:20`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:25`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:20`, max (H13S_N) as `S13A Interface-성공호-14:25`, max (H13S_B1) as `S13A Interface-성공호-14:20`, max (H13SR_N) as `S13A Interface-성공율(%)-14:25`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:20`, max (H6A_N) as `S6A Interface-시도호-14:25`, max (H6A_B1) as `S6A Interface-시도호-14:20`, max (H6AS_N) as `S6A Interface-기준시도호-14:25`, max (H6AS_B1) as `S6A Interface-기준시도호-14:20`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:25`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:20`, max (H6S_N) as `S6A Interface-성공호-14:25`, max (H6S_B1) as `S6A Interface-성공호-14:20`, max (H6SR_N) as `S6A Interface-성공율(%)-14:25`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:20`, max (HSA_N) as `SP Interface-시도호-14:25`, max (HSA_B1) as `SP Interface-시도호-14:20`, max (HSAS_N) as `SP Interface-기준시도호-14:25`, max (HSAS_B1) as `SP Interface-기준시도호-14:20`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:25`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:20`, max (HSS_N) as `SP Interface-성공호-14:25`, max (HSS_B1) as `SP Interface-성공호-14:20`, max (HSSR_N) as `SP Interface-성공율(%)-14:25`, max (HSSR_B1) as `SP Interface-성공율(%)-14:20`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:30`, max (PCA_B1) as `PCEF-시도호-14:25`, max (PCAS_N) as `PCEF-기준시도호-14:30`, max (PCAS_B1) as `PCEF-기준시도호-14:25`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:30`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:25`, max (PCS_N) as `PCEF-성공호-14:30`, max (PCS_B1) as `PCEF-성공호-14:25`, max (PCSR_N) as `PCEF-성공율(%)-14:30`, max (PCSR_B1) as `PCEF-성공율(%)-14:25`, max (SPA_N) as `SPR-시도호-14:30`, max (SPA_B1) as `SPR-시도호-14:25`, max (SPAS_N) as `SPR-기준시도호-14:30`, max (SPAS_B1) as `SPR-기준시도호-14:25`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:30`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:25`, max (SPS_N) as `SPR-성공호-14:30`, max (SPS_B1) as `SPR-성공호-14:25`, max (SPSR_N) as `SPR-성공율(%)-14:30`, max (SPSR_B1) as `SPR-성공율(%)-14:25`, max (AFA_N) as `AF-시도호-14:30`, max (AFA_B1) as `AF-시도호-14:25`, max (AFAS_N) as `AF-기준시도호-14:30`, max (AFAS_B1) as `AF-기준시도호-14:25`, max (AFAR_N) as `AF-시도호 증감율(%)-14:30`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:25`, max (AFS_N) as `AF-성공호-14:30`, max (AFS_B1) as `AF-성공호-14:25`, max (AFSR_N) as `AF-성공율(%)-14:30`, max (AFSR_B1) as `AF-성공율(%)-14:25`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1410' and  C_TIME <= '1430'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 14:10:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:30`, max (HDA_B1) as `Diameter Stack-시도호-14:25`, max (HDAS_N) as `Diameter Stack-기준시도호-14:30`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:25`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:30`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:25`, max (HDS_N) as `Diameter Stack-성공호-14:30`, max (HDS_B1) as `Diameter Stack-성공호-14:25`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:30`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:25`, max (H13A_N) as `S13A Interface-시도호-14:30`, max (H13A_B1) as `S13A Interface-시도호-14:25`, max (H13AS_N) as `S13A Interface-기준시도호-14:30`, max (H13AS_B1) as `S13A Interface-기준시도호-14:25`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:30`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:25`, max (H13S_N) as `S13A Interface-성공호-14:30`, max (H13S_B1) as `S13A Interface-성공호-14:25`, max (H13SR_N) as `S13A Interface-성공율(%)-14:30`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:25`, max (H6A_N) as `S6A Interface-시도호-14:30`, max (H6A_B1) as `S6A Interface-시도호-14:25`, max (H6AS_N) as `S6A Interface-기준시도호-14:30`, max (H6AS_B1) as `S6A Interface-기준시도호-14:25`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:30`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:25`, max (H6S_N) as `S6A Interface-성공호-14:30`, max (H6S_B1) as `S6A Interface-성공호-14:25`, max (H6SR_N) as `S6A Interface-성공율(%)-14:30`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:25`, max (HSA_N) as `SP Interface-시도호-14:30`, max (HSA_B1) as `SP Interface-시도호-14:25`, max (HSAS_N) as `SP Interface-기준시도호-14:30`, max (HSAS_B1) as `SP Interface-기준시도호-14:25`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:30`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:25`, max (HSS_N) as `SP Interface-성공호-14:30`, max (HSS_B1) as `SP Interface-성공호-14:25`, max (HSSR_N) as `SP Interface-성공율(%)-14:30`, max (HSSR_B1) as `SP Interface-성공율(%)-14:25`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:35`, max (PCA_B1) as `PCEF-시도호-14:30`, max (PCAS_N) as `PCEF-기준시도호-14:35`, max (PCAS_B1) as `PCEF-기준시도호-14:30`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:35`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:30`, max (PCS_N) as `PCEF-성공호-14:35`, max (PCS_B1) as `PCEF-성공호-14:30`, max (PCSR_N) as `PCEF-성공율(%)-14:35`, max (PCSR_B1) as `PCEF-성공율(%)-14:30`, max (SPA_N) as `SPR-시도호-14:35`, max (SPA_B1) as `SPR-시도호-14:30`, max (SPAS_N) as `SPR-기준시도호-14:35`, max (SPAS_B1) as `SPR-기준시도호-14:30`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:35`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:30`, max (SPS_N) as `SPR-성공호-14:35`, max (SPS_B1) as `SPR-성공호-14:30`, max (SPSR_N) as `SPR-성공율(%)-14:35`, max (SPSR_B1) as `SPR-성공율(%)-14:30`, max (AFA_N) as `AF-시도호-14:35`, max (AFA_B1) as `AF-시도호-14:30`, max (AFAS_N) as `AF-기준시도호-14:35`, max (AFAS_B1) as `AF-기준시도호-14:30`, max (AFAR_N) as `AF-시도호 증감율(%)-14:35`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:30`, max (AFS_N) as `AF-성공호-14:35`, max (AFS_B1) as `AF-성공호-14:30`, max (AFSR_N) as `AF-성공율(%)-14:35`, max (AFSR_B1) as `AF-성공율(%)-14:30`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1415' and  C_TIME <= '1435'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 14:15:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:35`, max (HDA_B1) as `Diameter Stack-시도호-14:30`, max (HDAS_N) as `Diameter Stack-기준시도호-14:35`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:30`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:35`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:30`, max (HDS_N) as `Diameter Stack-성공호-14:35`, max (HDS_B1) as `Diameter Stack-성공호-14:30`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:35`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:30`, max (H13A_N) as `S13A Interface-시도호-14:35`, max (H13A_B1) as `S13A Interface-시도호-14:30`, max (H13AS_N) as `S13A Interface-기준시도호-14:35`, max (H13AS_B1) as `S13A Interface-기준시도호-14:30`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:35`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:30`, max (H13S_N) as `S13A Interface-성공호-14:35`, max (H13S_B1) as `S13A Interface-성공호-14:30`, max (H13SR_N) as `S13A Interface-성공율(%)-14:35`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:30`, max (H6A_N) as `S6A Interface-시도호-14:35`, max (H6A_B1) as `S6A Interface-시도호-14:30`, max (H6AS_N) as `S6A Interface-기준시도호-14:35`, max (H6AS_B1) as `S6A Interface-기준시도호-14:30`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:35`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:30`, max (H6S_N) as `S6A Interface-성공호-14:35`, max (H6S_B1) as `S6A Interface-성공호-14:30`, max (H6SR_N) as `S6A Interface-성공율(%)-14:35`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:30`, max (HSA_N) as `SP Interface-시도호-14:35`, max (HSA_B1) as `SP Interface-시도호-14:30`, max (HSAS_N) as `SP Interface-기준시도호-14:35`, max (HSAS_B1) as `SP Interface-기준시도호-14:30`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:35`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:30`, max (HSS_N) as `SP Interface-성공호-14:35`, max (HSS_B1) as `SP Interface-성공호-14:30`, max (HSSR_N) as `SP Interface-성공율(%)-14:35`, max (HSSR_B1) as `SP Interface-성공율(%)-14:30`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:40`, max (PCA_B1) as `PCEF-시도호-14:35`, max (PCAS_N) as `PCEF-기준시도호-14:40`, max (PCAS_B1) as `PCEF-기준시도호-14:35`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:40`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:35`, max (PCS_N) as `PCEF-성공호-14:40`, max (PCS_B1) as `PCEF-성공호-14:35`, max (PCSR_N) as `PCEF-성공율(%)-14:40`, max (PCSR_B1) as `PCEF-성공율(%)-14:35`, max (SPA_N) as `SPR-시도호-14:40`, max (SPA_B1) as `SPR-시도호-14:35`, max (SPAS_N) as `SPR-기준시도호-14:40`, max (SPAS_B1) as `SPR-기준시도호-14:35`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:40`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:35`, max (SPS_N) as `SPR-성공호-14:40`, max (SPS_B1) as `SPR-성공호-14:35`, max (SPSR_N) as `SPR-성공율(%)-14:40`, max (SPSR_B1) as `SPR-성공율(%)-14:35`, max (AFA_N) as `AF-시도호-14:40`, max (AFA_B1) as `AF-시도호-14:35`, max (AFAS_N) as `AF-기준시도호-14:40`, max (AFAS_B1) as `AF-기준시도호-14:35`, max (AFAR_N) as `AF-시도호 증감율(%)-14:40`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:35`, max (AFS_N) as `AF-성공호-14:40`, max (AFS_B1) as `AF-성공호-14:35`, max (AFSR_N) as `AF-성공율(%)-14:40`, max (AFSR_B1) as `AF-성공율(%)-14:35`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1420' and  C_TIME <= '1440'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 14:20:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:40`, max (HDA_B1) as `Diameter Stack-시도호-14:35`, max (HDAS_N) as `Diameter Stack-기준시도호-14:40`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:35`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:40`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:35`, max (HDS_N) as `Diameter Stack-성공호-14:40`, max (HDS_B1) as `Diameter Stack-성공호-14:35`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:40`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:35`, max (H13A_N) as `S13A Interface-시도호-14:40`, max (H13A_B1) as `S13A Interface-시도호-14:35`, max (H13AS_N) as `S13A Interface-기준시도호-14:40`, max (H13AS_B1) as `S13A Interface-기준시도호-14:35`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:40`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:35`, max (H13S_N) as `S13A Interface-성공호-14:40`, max (H13S_B1) as `S13A Interface-성공호-14:35`, max (H13SR_N) as `S13A Interface-성공율(%)-14:40`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:35`, max (H6A_N) as `S6A Interface-시도호-14:40`, max (H6A_B1) as `S6A Interface-시도호-14:35`, max (H6AS_N) as `S6A Interface-기준시도호-14:40`, max (H6AS_B1) as `S6A Interface-기준시도호-14:35`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:40`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:35`, max (H6S_N) as `S6A Interface-성공호-14:40`, max (H6S_B1) as `S6A Interface-성공호-14:35`, max (H6SR_N) as `S6A Interface-성공율(%)-14:40`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:35`, max (HSA_N) as `SP Interface-시도호-14:40`, max (HSA_B1) as `SP Interface-시도호-14:35`, max (HSAS_N) as `SP Interface-기준시도호-14:40`, max (HSAS_B1) as `SP Interface-기준시도호-14:35`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:40`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:35`, max (HSS_N) as `SP Interface-성공호-14:40`, max (HSS_B1) as `SP Interface-성공호-14:35`, max (HSSR_N) as `SP Interface-성공율(%)-14:40`, max (HSSR_B1) as `SP Interface-성공율(%)-14:35`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1140' and C_TIME <= '1440'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1140' and C_TIME <= '1440'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:45`, max (PCA_B1) as `PCEF-시도호-14:40`, max (PCAS_N) as `PCEF-기준시도호-14:45`, max (PCAS_B1) as `PCEF-기준시도호-14:40`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:45`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:40`, max (PCS_N) as `PCEF-성공호-14:45`, max (PCS_B1) as `PCEF-성공호-14:40`, max (PCSR_N) as `PCEF-성공율(%)-14:45`, max (PCSR_B1) as `PCEF-성공율(%)-14:40`, max (SPA_N) as `SPR-시도호-14:45`, max (SPA_B1) as `SPR-시도호-14:40`, max (SPAS_N) as `SPR-기준시도호-14:45`, max (SPAS_B1) as `SPR-기준시도호-14:40`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:45`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:40`, max (SPS_N) as `SPR-성공호-14:45`, max (SPS_B1) as `SPR-성공호-14:40`, max (SPSR_N) as `SPR-성공율(%)-14:45`, max (SPSR_B1) as `SPR-성공율(%)-14:40`, max (AFA_N) as `AF-시도호-14:45`, max (AFA_B1) as `AF-시도호-14:40`, max (AFAS_N) as `AF-기준시도호-14:45`, max (AFAS_B1) as `AF-기준시도호-14:40`, max (AFAR_N) as `AF-시도호 증감율(%)-14:45`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:40`, max (AFS_N) as `AF-성공호-14:45`, max (AFS_B1) as `AF-성공호-14:40`, max (AFSR_N) as `AF-성공율(%)-14:45`, max (AFSR_B1) as `AF-성공율(%)-14:40`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1425' and  C_TIME <= '1445'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 14:25:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:45`, max (HDA_B1) as `Diameter Stack-시도호-14:40`, max (HDAS_N) as `Diameter Stack-기준시도호-14:45`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:40`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:45`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:40`, max (HDS_N) as `Diameter Stack-성공호-14:45`, max (HDS_B1) as `Diameter Stack-성공호-14:40`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:45`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:40`, max (H13A_N) as `S13A Interface-시도호-14:45`, max (H13A_B1) as `S13A Interface-시도호-14:40`, max (H13AS_N) as `S13A Interface-기준시도호-14:45`, max (H13AS_B1) as `S13A Interface-기준시도호-14:40`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:45`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:40`, max (H13S_N) as `S13A Interface-성공호-14:45`, max (H13S_B1) as `S13A Interface-성공호-14:40`, max (H13SR_N) as `S13A Interface-성공율(%)-14:45`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:40`, max (H6A_N) as `S6A Interface-시도호-14:45`, max (H6A_B1) as `S6A Interface-시도호-14:40`, max (H6AS_N) as `S6A Interface-기준시도호-14:45`, max (H6AS_B1) as `S6A Interface-기준시도호-14:40`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:45`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:40`, max (H6S_N) as `S6A Interface-성공호-14:45`, max (H6S_B1) as `S6A Interface-성공호-14:40`, max (H6SR_N) as `S6A Interface-성공율(%)-14:45`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:40`, max (HSA_N) as `SP Interface-시도호-14:45`, max (HSA_B1) as `SP Interface-시도호-14:40`, max (HSAS_N) as `SP Interface-기준시도호-14:45`, max (HSAS_B1) as `SP Interface-기준시도호-14:40`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:45`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:40`, max (HSS_N) as `SP Interface-성공호-14:45`, max (HSS_B1) as `SP Interface-성공호-14:40`, max (HSSR_N) as `SP Interface-성공율(%)-14:45`, max (HSSR_B1) as `SP Interface-성공율(%)-14:40`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1145' and C_TIME <= '1445'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1145' and C_TIME <= '1445'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-14:50`, max (PCA_B1) as `PCEF-시도호-14:45`, max (PCAS_N) as `PCEF-기준시도호-14:50`, max (PCAS_B1) as `PCEF-기준시도호-14:45`, max (PCAR_N) as `PCEF-시도호 증감율(%)-14:50`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-14:45`, max (PCS_N) as `PCEF-성공호-14:50`, max (PCS_B1) as `PCEF-성공호-14:45`, max (PCSR_N) as `PCEF-성공율(%)-14:50`, max (PCSR_B1) as `PCEF-성공율(%)-14:45`, max (SPA_N) as `SPR-시도호-14:50`, max (SPA_B1) as `SPR-시도호-14:45`, max (SPAS_N) as `SPR-기준시도호-14:50`, max (SPAS_B1) as `SPR-기준시도호-14:45`, max (SPAR_N) as `SPR-시도호 증감율(%)-14:50`, max (SPAR_B1) as `SPR-시도호 증감율(%)-14:45`, max (SPS_N) as `SPR-성공호-14:50`, max (SPS_B1) as `SPR-성공호-14:45`, max (SPSR_N) as `SPR-성공율(%)-14:50`, max (SPSR_B1) as `SPR-성공율(%)-14:45`, max (AFA_N) as `AF-시도호-14:50`, max (AFA_B1) as `AF-시도호-14:45`, max (AFAS_N) as `AF-기준시도호-14:50`, max (AFAS_B1) as `AF-기준시도호-14:45`, max (AFAR_N) as `AF-시도호 증감율(%)-14:50`, max (AFAR_B1) as `AF-시도호 증감율(%)-14:45`, max (AFS_N) as `AF-성공호-14:50`, max (AFS_B1) as `AF-성공호-14:45`, max (AFSR_N) as `AF-성공율(%)-14:50`, max (AFSR_B1) as `AF-성공율(%)-14:45`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1430' and  C_TIME <= '1450'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 14:50:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 14:45:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 14:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 14:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 14:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-14:50`, max (HDA_B1) as `Diameter Stack-시도호-14:45`, max (HDAS_N) as `Diameter Stack-기준시도호-14:50`, max (HDAS_B1) as `Diameter Stack-기준시도호-14:45`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-14:50`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-14:45`, max (HDS_N) as `Diameter Stack-성공호-14:50`, max (HDS_B1) as `Diameter Stack-성공호-14:45`, max (HDSR_N) as `Diameter Stack-성공율(%)-14:50`, max (HDSR_B1) as `Diameter Stack-성공율(%)-14:45`, max (H13A_N) as `S13A Interface-시도호-14:50`, max (H13A_B1) as `S13A Interface-시도호-14:45`, max (H13AS_N) as `S13A Interface-기준시도호-14:50`, max (H13AS_B1) as `S13A Interface-기준시도호-14:45`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-14:50`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-14:45`, max (H13S_N) as `S13A Interface-성공호-14:50`, max (H13S_B1) as `S13A Interface-성공호-14:45`, max (H13SR_N) as `S13A Interface-성공율(%)-14:50`, max (H13SR_B1) as `S13A Interface-성공율(%)-14:45`, max (H6A_N) as `S6A Interface-시도호-14:50`, max (H6A_B1) as `S6A Interface-시도호-14:45`, max (H6AS_N) as `S6A Interface-기준시도호-14:50`, max (H6AS_B1) as `S6A Interface-기준시도호-14:45`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-14:50`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-14:45`, max (H6S_N) as `S6A Interface-성공호-14:50`, max (H6S_B1) as `S6A Interface-성공호-14:45`, max (H6SR_N) as `S6A Interface-성공율(%)-14:50`, max (H6SR_B1) as `S6A Interface-성공율(%)-14:45`, max (HSA_N) as `SP Interface-시도호-14:50`, max (HSA_B1) as `SP Interface-시도호-14:45`, max (HSAS_N) as `SP Interface-기준시도호-14:50`, max (HSAS_B1) as `SP Interface-기준시도호-14:45`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-14:50`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-14:45`, max (HSS_N) as `SP Interface-성공호-14:50`, max (HSS_B1) as `SP Interface-성공호-14:45`, max (HSSR_N) as `SP Interface-성공율(%)-14:50`, max (HSSR_B1) as `SP Interface-성공율(%)-14:45`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1150' and C_TIME <= '1450'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1150' and C_TIME <= '1450'   | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1150' and C_TIME <= '1450'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1150' and C_TIME <= '1450'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1150' and C_TIME <= '1450'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1150' and C_TIME <= '1450'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1150' and C_TIME <= '1450'   | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [            ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 11:50' and EVENT_TIME <= '2022-05-31 14:50'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 11:50' and EVENT_TIME <= '2022-05-31 14:50'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                         ['Attach','0001','SEOUL-METRO-MME1','20220531','1150','0','5','134','14','857.14','4','72','53.73','1','72','53.73','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1155','0','5','10','109','-90.83','4','10','90','4','9','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1200','0','5','26','141','-81.56','1','23','84.62','3','22','88.46','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1205','0','5','82','140','-41.43','3','78','89.02','3','73','95.12','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1210','0','5','143','14','921.43','4','137','89.51','3','128','95.8','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1215','0','5','181','21','761.9','4','166','88.95','3','161','91.71','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1220','0','5','185','156','18.59','4','94','45.41','1','84','50.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1225','0','5','74','24','208.33','4','51','66.22','1','49','68.92','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1230','0','5','89','179','-50.28','3','76','79.78','2','71','85.39','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1235','0','5','118','16','637.5','4','66','46.61','1','55','55.93','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1240','0','5','112','196','-42.86','3','72','52.68','1','59','64.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1325','0','5','136','20','580','4','118','82.35','3','112','86.76','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1330','0','5','76','73','4.11','4','51','59.21','1','45','67.11','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1335','0','5','118','195','-39.49','3','80','66.95','1','79','67.8','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1340','0','5','7','178','-96.07','4','5','71.43','4','5','71.43','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1345','0','5','69','22','213.64','4','52','71.01','2','49','75.36','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1350','0','5','83','197','-57.87','3','56','57.83','1','48','67.47','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1355','0','5','139','150','-7.33','4','100','66.19','1','92','71.94','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1400','0','5','132','48','175','4','108','72.73','2','96','81.82','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1405','0','5','153','113','35.4','4','122','70.59','2','108','79.74','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1410','0','5','135','150','-10','4','75','51.85','1','70','55.56','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1415','0','5','126','140','-10','4','105','67.46','1','85','83.33','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1420','0','5','128','1','12700','4','92','62.5','1','80','71.88','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1425','0','5','33','148','-77.7','2','18','48.48','1','16','54.55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1430','0','5','198','119','66.39','4','189','83.84','3','166','95.45','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1435','0','5','133','147','-9.52','4','125','90.23','4','120','93.98','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1440','0','5','93','135','-31.11','3','69','66.67','1','62','74.19','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1445','0','5','191','37','416.22','4','134','67.54','1','129','70.16','2'],                                         ['SR','0001','SEOUL-METRO-MME1','20220531','1150','0','5','179','310','-42.26','4','100','55.87','1','81','45.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1155','0','5','946','46','1956.52','3','746','78.86','2','653','69.03','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1200','0','5','68','247','-72.47','2','52','76.47','2','43','63.24','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1205','0','5','173','361','-52.08','4','96','55.49','1','96','55.49','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1210','0','5','339','416','-18.51','4','219','64.6','1','198','58.41','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1215','0','5','478','186','156.99','4','456','95.4','4','436','91.21','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1220','0','5','490','37','1224.32','3','385','78.57','2','354','72.24','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1225','0','5','797','611','30.44','4','725','90.97','4','646','81.05','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1230','0','5','651','710','-8.31','4','513','78.8','2','509','78.19','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1235','0','5','802','848','-5.42','4','797','99.38','4','781','97.38','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1240','0','5','835','400','108.75','4','577','69.1','1','508','60.84','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1325','0','5','281','204','37.75','4','176','62.63','1','162','57.65','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1330','0','5','745','809','-7.91','4','448','60.13','1','424','56.91','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1335','0','5','51','49','4.08','4','34','66.67','1','32','62.75','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1340','0','5','719','272','164.34','4','708','98.47','4','658','91.52','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1345','0','5','482','972','-50.41','4','417','86.51','3','340','70.54','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1350','0','5','523','86','508.14','4','392','74.95','2','322','61.57','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1355','0','5','92','513','-82.07','1','64','69.57','1','63','68.48','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1400','0','5','685','521','31.48','4','598','87.3','3','545','79.56','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1405','0','5','390','505','-22.77','4','248','63.59','1','239','61.28','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1410','0','5','844','818','3.18','4','448','53.08','1','427','50.59','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1415','0','5','293','773','-62.1','3','229','78.16','2','199','67.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1420','0','5','756','850','-11.06','4','437','57.8','1','379','50.13','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1425','0','5','287','903','-68.22','3','170','59.23','1','162','56.45','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1430','0','5','695','700','-0.71','4','407','58.56','1','391','56.26','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1435','0','5','292','724','-59.67','4','234','80.14','3','226','77.4','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1440','0','5','628','885','-29.04','4','549','87.42','3','511','81.37','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1445','0','5','610','301','102.66','4','467','76.56','2','421','69.02','1'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                         ['Attach','0001','SEOUL-METRO-MME1','20220531','1150','0','5','134','14','857.14','4','72','53.73','1','72','53.73','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1155','0','5','10','109','-90.83','4','10','90','4','9','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1200','0','5','26','141','-81.56','1','23','84.62','3','22','88.46','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1205','0','5','82','140','-41.43','3','78','89.02','3','73','95.12','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1210','0','5','143','14','921.43','4','137','89.51','3','128','95.8','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1215','0','5','181','21','761.9','4','166','88.95','3','161','91.71','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1220','0','5','185','156','18.59','4','94','45.41','1','84','50.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1225','0','5','74','24','208.33','4','51','66.22','1','49','68.92','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1230','0','5','89','179','-50.28','3','76','79.78','2','71','85.39','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1235','0','5','118','16','637.5','4','66','46.61','1','55','55.93','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1240','0','5','112','196','-42.86','3','72','52.68','1','59','64.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1325','0','5','136','20','580','4','118','82.35','3','112','86.76','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1330','0','5','76','73','4.11','4','51','59.21','1','45','67.11','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1335','0','5','118','195','-39.49','3','80','66.95','1','79','67.8','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1340','0','5','7','178','-96.07','4','5','71.43','4','5','71.43','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1345','0','5','69','22','213.64','4','52','71.01','2','49','75.36','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1350','0','5','83','197','-57.87','3','56','57.83','1','48','67.47','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1355','0','5','139','150','-7.33','4','100','66.19','1','92','71.94','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1400','0','5','132','48','175','4','108','72.73','2','96','81.82','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1405','0','5','153','113','35.4','4','122','70.59','2','108','79.74','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1410','0','5','135','150','-10','4','75','51.85','1','70','55.56','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1415','0','5','126','140','-10','4','105','67.46','1','85','83.33','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1420','0','5','128','1','12700','4','92','62.5','1','80','71.88','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1425','0','5','33','148','-77.7','2','18','48.48','1','16','54.55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1430','0','5','198','119','66.39','4','189','83.84','3','166','95.45','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1435','0','5','133','147','-9.52','4','125','90.23','4','120','93.98','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1440','0','5','93','135','-31.11','3','69','66.67','1','62','74.19','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1445','0','5','191','37','416.22','4','134','67.54','1','129','70.16','2'],                                         ['SR','0001','SEOUL-METRO-MME1','20220531','1150','0','5','179','310','-42.26','4','100','55.87','1','81','45.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1155','0','5','946','46','1956.52','3','746','78.86','2','653','69.03','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1200','0','5','68','247','-72.47','2','52','76.47','2','43','63.24','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1205','0','5','173','361','-52.08','4','96','55.49','1','96','55.49','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1210','0','5','339','416','-18.51','4','219','64.6','1','198','58.41','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1215','0','5','478','186','156.99','4','456','95.4','4','436','91.21','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1220','0','5','490','37','1224.32','3','385','78.57','2','354','72.24','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1225','0','5','797','611','30.44','4','725','90.97','4','646','81.05','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1230','0','5','651','710','-8.31','4','513','78.8','2','509','78.19','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1235','0','5','802','848','-5.42','4','797','99.38','4','781','97.38','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1240','0','5','835','400','108.75','4','577','69.1','1','508','60.84','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1325','0','5','281','204','37.75','4','176','62.63','1','162','57.65','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1330','0','5','745','809','-7.91','4','448','60.13','1','424','56.91','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1335','0','5','51','49','4.08','4','34','66.67','1','32','62.75','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1340','0','5','719','272','164.34','4','708','98.47','4','658','91.52','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1345','0','5','482','972','-50.41','4','417','86.51','3','340','70.54','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1350','0','5','523','86','508.14','4','392','74.95','2','322','61.57','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1355','0','5','92','513','-82.07','1','64','69.57','1','63','68.48','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1400','0','5','685','521','31.48','4','598','87.3','3','545','79.56','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1405','0','5','390','505','-22.77','4','248','63.59','1','239','61.28','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1410','0','5','844','818','3.18','4','448','53.08','1','427','50.59','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1415','0','5','293','773','-62.1','3','229','78.16','2','199','67.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1420','0','5','756','850','-11.06','4','437','57.8','1','379','50.13','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1425','0','5','287','903','-68.22','3','170','59.23','1','162','56.45','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1430','0','5','695','700','-0.71','4','407','58.56','1','391','56.26','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1435','0','5','292','724','-59.67','4','234','80.14','3','226','77.4','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1440','0','5','628','885','-29.04','4','549','87.42','3','511','81.37','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1445','0','5','610','301','102.66','4','467','76.56','2','421','69.02','1'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'SR'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:00' and EVENT_TIME <= '2022-05-31 15:00'  | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:00' and EVENT_TIME <= '2022-05-31 15:00'  | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:00' and EVENT_TIME <= '2022-05-31 15:00'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:00' and EVENT_TIME <= '2022-05-31 15:00'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                         ['Attach','0001','SEOUL-METRO-MME1','20220531','1200','0','5','26','141','-81.56','1','23','84.62','3','22','88.46','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1205','0','5','82','140','-41.43','3','78','89.02','3','73','95.12','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1210','0','5','143','14','921.43','4','137','89.51','3','128','95.8','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1215','0','5','181','21','761.9','4','166','88.95','3','161','91.71','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1220','0','5','185','156','18.59','4','94','45.41','1','84','50.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1225','0','5','74','24','208.33','4','51','66.22','1','49','68.92','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1230','0','5','89','179','-50.28','3','76','79.78','2','71','85.39','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1235','0','5','118','16','637.5','4','66','46.61','1','55','55.93','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1240','0','5','112','196','-42.86','3','72','52.68','1','59','64.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1325','0','5','136','20','580','4','118','82.35','3','112','86.76','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1330','0','5','76','73','4.11','4','51','59.21','1','45','67.11','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1335','0','5','118','195','-39.49','3','80','66.95','1','79','67.8','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1340','0','5','7','178','-96.07','4','5','71.43','4','5','71.43','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1345','0','5','69','22','213.64','4','52','71.01','2','49','75.36','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1350','0','5','83','197','-57.87','3','56','57.83','1','48','67.47','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1355','0','5','139','150','-7.33','4','100','66.19','1','92','71.94','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1400','0','5','132','48','175','4','108','72.73','2','96','81.82','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1405','0','5','153','113','35.4','4','122','70.59','2','108','79.74','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1410','0','5','135','150','-10','4','75','51.85','1','70','55.56','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1415','0','5','126','140','-10','4','105','67.46','1','85','83.33','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1420','0','5','128','1','12700','4','92','62.5','1','80','71.88','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1425','0','5','33','148','-77.7','2','18','48.48','1','16','54.55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1430','0','5','198','119','66.39','4','189','83.84','3','166','95.45','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1435','0','5','133','147','-9.52','4','125','90.23','4','120','93.98','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1440','0','5','93','135','-31.11','3','69','66.67','1','62','74.19','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1445','0','5','191','37','416.22','4','134','67.54','1','129','70.16','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1450','0','5','54','91','-40.66','3','29','51.85','1','28','53.7','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1455','0','5','124','42','195.24','4','65','49.19','1','61','52.42','1'],                                         ['SR','0001','SEOUL-METRO-MME1','20220531','1200','0','5','68','247','-72.47','2','52','76.47','2','43','63.24','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1205','0','5','173','361','-52.08','4','96','55.49','1','96','55.49','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1210','0','5','339','416','-18.51','4','219','64.6','1','198','58.41','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1215','0','5','478','186','156.99','4','456','95.4','4','436','91.21','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1220','0','5','490','37','1224.32','3','385','78.57','2','354','72.24','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1225','0','5','797','611','30.44','4','725','90.97','4','646','81.05','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1230','0','5','651','710','-8.31','4','513','78.8','2','509','78.19','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1235','0','5','802','848','-5.42','4','797','99.38','4','781','97.38','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1240','0','5','835','400','108.75','4','577','69.1','1','508','60.84','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1325','0','5','281','204','37.75','4','176','62.63','1','162','57.65','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1330','0','5','745','809','-7.91','4','448','60.13','1','424','56.91','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1335','0','5','51','49','4.08','4','34','66.67','1','32','62.75','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1340','0','5','719','272','164.34','4','708','98.47','4','658','91.52','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1345','0','5','482','972','-50.41','4','417','86.51','3','340','70.54','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1350','0','5','523','86','508.14','4','392','74.95','2','322','61.57','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1355','0','5','92','513','-82.07','1','64','69.57','1','63','68.48','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1400','0','5','685','521','31.48','4','598','87.3','3','545','79.56','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1405','0','5','390','505','-22.77','4','248','63.59','1','239','61.28','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1410','0','5','844','818','3.18','4','448','53.08','1','427','50.59','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1415','0','5','293','773','-62.1','3','229','78.16','2','199','67.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1420','0','5','756','850','-11.06','4','437','57.8','1','379','50.13','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1425','0','5','287','903','-68.22','3','170','59.23','1','162','56.45','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1430','0','5','695','700','-0.71','4','407','58.56','1','391','56.26','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1435','0','5','292','724','-59.67','4','234','80.14','3','226','77.4','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1440','0','5','628','885','-29.04','4','549','87.42','3','511','81.37','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1445','0','5','610','301','102.66','4','467','76.56','2','421','69.02','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1450','0','5','389','621','-37.36','4','364','93.57','4','334','85.86','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1455','0','5','689','940','-26.7','4','569','82.58','3','561','81.42','3'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:05' and EVENT_TIME <= '2022-05-31 15:05'  | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:05' and EVENT_TIME <= '2022-05-31 15:05'  | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:05' and EVENT_TIME <= '2022-05-31 15:05'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:05' and EVENT_TIME <= '2022-05-31 15:05'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                         ['Attach','0001','SEOUL-METRO-MME1','20220531','1205','0','5','82','140','-41.43','3','78','89.02','3','73','95.12','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1210','0','5','143','14','921.43','4','137','89.51','3','128','95.8','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1215','0','5','181','21','761.9','4','166','88.95','3','161','91.71','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1220','0','5','185','156','18.59','4','94','45.41','1','84','50.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1225','0','5','74','24','208.33','4','51','66.22','1','49','68.92','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1230','0','5','89','179','-50.28','3','76','79.78','2','71','85.39','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1235','0','5','118','16','637.5','4','66','46.61','1','55','55.93','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1240','0','5','112','196','-42.86','3','72','52.68','1','59','64.29','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1325','0','5','136','20','580','4','118','82.35','3','112','86.76','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1330','0','5','76','73','4.11','4','51','59.21','1','45','67.11','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1335','0','5','118','195','-39.49','3','80','66.95','1','79','67.8','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1340','0','5','7','178','-96.07','4','5','71.43','4','5','71.43','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1345','0','5','69','22','213.64','4','52','71.01','2','49','75.36','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1350','0','5','83','197','-57.87','3','56','57.83','1','48','67.47','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1355','0','5','139','150','-7.33','4','100','66.19','1','92','71.94','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1400','0','5','132','48','175','4','108','72.73','2','96','81.82','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1405','0','5','153','113','35.4','4','122','70.59','2','108','79.74','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1410','0','5','135','150','-10','4','75','51.85','1','70','55.56','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1415','0','5','126','140','-10','4','105','67.46','1','85','83.33','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1420','0','5','128','1','12700','4','92','62.5','1','80','71.88','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1425','0','5','33','148','-77.7','2','18','48.48','1','16','54.55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1430','0','5','198','119','66.39','4','189','83.84','3','166','95.45','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1435','0','5','133','147','-9.52','4','125','90.23','4','120','93.98','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1440','0','5','93','135','-31.11','3','69','66.67','1','62','74.19','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1445','0','5','191','37','416.22','4','134','67.54','1','129','70.16','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1450','0','5','54','91','-40.66','3','29','51.85','1','28','53.7','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1455','0','5','124','42','195.24','4','65','49.19','1','61','52.42','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1500','0','5','156','27','477.78','4','147','89.74','3','140','94.23','4'],                                         ['SR','0001','SEOUL-METRO-MME1','20220531','1205','0','5','173','361','-52.08','4','96','55.49','1','96','55.49','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1210','0','5','339','416','-18.51','4','219','64.6','1','198','58.41','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1215','0','5','478','186','156.99','4','456','95.4','4','436','91.21','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1220','0','5','490','37','1224.32','3','385','78.57','2','354','72.24','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1225','0','5','797','611','30.44','4','725','90.97','4','646','81.05','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1230','0','5','651','710','-8.31','4','513','78.8','2','509','78.19','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1235','0','5','802','848','-5.42','4','797','99.38','4','781','97.38','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1240','0','5','835','400','108.75','4','577','69.1','1','508','60.84','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1325','0','5','281','204','37.75','4','176','62.63','1','162','57.65','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1330','0','5','745','809','-7.91','4','448','60.13','1','424','56.91','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1335','0','5','51','49','4.08','4','34','66.67','1','32','62.75','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1340','0','5','719','272','164.34','4','708','98.47','4','658','91.52','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1345','0','5','482','972','-50.41','4','417','86.51','3','340','70.54','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1350','0','5','523','86','508.14','4','392','74.95','2','322','61.57','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1355','0','5','92','513','-82.07','1','64','69.57','1','63','68.48','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1400','0','5','685','521','31.48','4','598','87.3','3','545','79.56','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1405','0','5','390','505','-22.77','4','248','63.59','1','239','61.28','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1410','0','5','844','818','3.18','4','448','53.08','1','427','50.59','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1415','0','5','293','773','-62.1','3','229','78.16','2','199','67.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1420','0','5','756','850','-11.06','4','437','57.8','1','379','50.13','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1425','0','5','287','903','-68.22','3','170','59.23','1','162','56.45','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1430','0','5','695','700','-0.71','4','407','58.56','1','391','56.26','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1435','0','5','292','724','-59.67','4','234','80.14','3','226','77.4','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1440','0','5','628','885','-29.04','4','549','87.42','3','511','81.37','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1445','0','5','610','301','102.66','4','467','76.56','2','421','69.02','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1450','0','5','389','621','-37.36','4','364','93.57','4','334','85.86','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1455','0','5','689','940','-26.7','4','569','82.58','3','561','81.42','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1500','0','5','118','281','-58.01','4','91','77.12','2','81','68.64','1'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26110511' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast 날짜 date 'YYYYMMDD', 날짜 date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26110511' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'mo_BIZ_PROJECT' model_owner = demo | where CLS_DATE   >= '20220101'      | substr CLS_DATE 1 2 as CLS_YY | where  CLS_YY  != '99'  and APP_YN = '1'  |  where PJTPM_CD in ( 200095,200504,200507,201203,201209,201401,201435,201439,201507,201701,201756,201804,201825,201865,201881,201883,201902,201921,201928,202018,202021,202055,202060,202063,202074,202076,221029,221036,221043,221055,221091 )   | where L_CLASS = '11'  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | distinct PJT_CD
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                  'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | where ENT_YY  = '202201'  | substr ENT_YY 1 4 as  YEAR  |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  |  merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and    YEAR = PWU.ENT_YEAR   |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   | case when  ENT_YY = '202201'  and '04' = '01' then MM_01   when ENT_YY = '202201'  and '04' = '02' then MM_01 + MM_02   when ENT_YY = '202201'  and '04' = '03' then MM_01 + MM_02 + MM_03   when ENT_YY = '202201'  and '04' = '04' then MM_01 + MM_02 + MM_03 + MM_04   when ENT_YY = '202201'  and '04' = '05' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05   when ENT_YY = '202201'  and '04' = '06' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06   when ENT_YY = '202201'  and '04' = '07' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07   when ENT_YY = '202201'  and '04' = '08' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08   when ENT_YY = '202201'  and '04' = '09' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09   when ENT_YY = '202201'  and '04' = '10' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10   when ENT_YY = '202201'  and '04' = '11' then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11   when ENT_YY = '202201'  and '04' = '12'  then MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10+ MM_11 + MM_12    otherwise 0 as  투입된MM   |  case when ENT_YY = '202201'  then   MM_YEAR - 투입된MM  otherwise 0 as 남은MM  |  case when ENT_YY = '202201'   then   투입된MM  * PWU_WORK_UNITCOST otherwise 0 as 투입된_인건비  |  case when ENT_YY = '202201'  then   MM_YEAR * PWU_WORK_UNITCOST  otherwise 0 as 인건비합계  | fillna 인건비합계 0 | fields PJT_CD, EMP_CD, ENT_YY, MM_YEAR, 인건비합계, 투입된MM ,남은MM, 투입된_인건비   | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD    | stats sum(MM_YEAR) as MM_YEAR, sum(인건비합계) as 인건비합계,sum(투입된MM) as 투입된MM, sum(남은MM) as 남은MM, sum(투입된_인건비) as 투입된인건비 by MP_SALE_CD, ENT_YY  |  calculate 투입된MM  / MM_YEAR * 100  as 진도율  | fields MP_SALE_CD as 영업코드,진도율  | round 1 col = 진도율  | fillna 영업코드 | sort 영업코드
model name = 'mo_PJT_MAN_MONTH_YEAR' model_owner = demo | where PJT_CD in (                                                  'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | where ENT_YY  >= '202201' | substr ENT_YY 1 4 as  YEAR  |  fillna MM_01 0.0  |  fillna MM_02 0.0  |  fillna MM_03 0.0   |  fillna MM_04 0.0  |  fillna MM_05 0.0   |  fillna MM_06 0.0  |  fillna MM_07 0.0  |  fillna MM_08 0.0   |  fillna MM_09 0.0   |  fillna MM_10 0.0  |  fillna MM_11 0.0  |  fillna MM_12 0.0   |  fillna MM_YEAR 0.0  |  calculate MM_01 + MM_02 + MM_03 + MM_04 + MM_05 + MM_06 + MM_07 + MM_08 + MM_09 + MM_10 + MM_11 + MM_12 as MM_YEAR   |  case when WORK_TY = '001' then WORK_TY otherwise '900' as WORK_TY  | merge left_outer ( mo_PCOD_WORK_UNITCOST  ) as PWU  on  WORK_TY = PWU.WORK_TY and CAREER_TY = PWU.WORK_GUBUN   and  YEAR = PWU.ENT_YEAR  | calculate MM_YEAR * PWU_WORK_UNITCOST as  인건비_YEAR  | merge left_outer ( mo_MAPPING_SALE_CONT_PJT ) as MP on PJT_CD = MP.PJT_CD  | stats sum(MM_YEAR) as MM_YEAR, sum(인건비_YEAR) as 인건비_YEAR  by MP_SALE_CD,YEAR   | fields MP_SALE_CD as 영업코드,YEAR,MM_YEAR,인건비_YEAR  | case when YEAR = '2022' then 인건비_YEAR as 당해비용 | case when YEAR = '2022' then MM_YEAR as 당해MM  | stats sum(MM_YEAR) as 전체_MM_YEAR,  sum(당해MM) as 당해MM, sum(당해비용) as 당해비용  by 영업코드  | calculate  당해MM / 전체_MM_YEAR  as 매출추정비율  | merge left_outer (  mo_SALE_STATUS ) as SS on 영업코드 = SS.SALE_CD   | fields 영업코드, SS_SALE_TITLE as 프로젝트명,전체_MM_YEAR as 전체MM, 매출추정비율,  당해비용,당해MM  | merge left_outer ( V_mo_BIZ_PROJECT_SALE_CD ) as vBPS on 영업코드  = vBPS.MP_SALE_CD   | where vBPS_PJT_CD in (                                                  'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | merge left_outer ( V_mo_SALE_STATUS_ITEM ) as vSSI on 영업코드 = vSSI.SALE_CD and vBPS_PJT_CD = vSSI.PJT_CD   | merge left_outer ( mo_이월순매출 ) as CC on  vBPS_MP_CONT_CD = CC.CONT_CD and vBPS_MP_CONT_SEQ = CC.CONT_SEQ  and vBPS_PJT_CD = CC.PJT_CD  | merge left_outer ( V_mo_MAPPING_PJT_DEPT ) as VMPD on vBPS_PJT_CD = VMPD.PJT_CD and vBPS_DEPT_CD = VMPD.DEPT_CD    | merge left_outer ( mo_국책과제 ) as CCK on 영업코드 = CCK.영업코드   | case when vBPS_PJT_CD = CCK_PJT_CD then CCK_인건비사용금액 otherwise 0  as 국책과제인건비  | case when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and  VMPD_AMT_CONT is not null  and  VMPD_AMT_CONT > 0 then VMPD_AMT_CONT  when vBPS_L_CLASS = '11' and 국책과제인건비 = 0 and ( VMPD_AMT_CONT is null  or VMPD_AMT_CONT = 0 ) then vBPS_AMT_CONT        when vBPS_L_CLASS = '11' and 국책과제인건비 > 0 then 국책과제인건비  otherwise  0  as 계약예상금액  | case when CC_이월_순매출 is not null then 1 otherwise 0 as 이월FLAG   | fields 영업코드,프로젝트명,전체MM,당해MM,매출추정비율,계약예상금액,당해비용,CC_이월_순매출,vSSI_BUY_COST as 외부매입,이월FLAG  | stats max(전체MM) as 전체MM, sum(당해MM) as 당해MM, max(매출추정비율) as 매출추정비율, max(당해비용) as 추정비용, max(계약예상금액) as 계약예상금액, max(CC_이월_순매출) as 이월순매출, max(외부매입) as 외부매입, sum(이월FLAG) as 이월FLAG  by 영업코드,프로젝트명   |  merge left_outer (  mo_MAPPING_SALE_CONT_PJT ) as MSCP on 영업코드 = MSCP.SALE_CD  |  merge left_outer (  mo_BIZ_CONTRACT ) as BC on MSCP_CONT_CD = BC.CONT_CD and MSCP_CONT_SEQ = BC.CONT_SEQ  | where MSCP_PJT_CD in (                                                  'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )  | calculate  계약예상금액 - 외부매입  as 순매출  | typecast 계약예상금액  bigint | typecast 외부매입 bigint | typecast 이월순매출 bigint  | case when 이월순매출  > 0   then  이월순매출 when 이월순매출 = 0  and 이월FLAG = 1 then 이월순매출 otherwise 순매출 as 순매출   | calculate 순매출 * 매출추정비율  as 추정순매출 | typecast 추정순매출 bigint  | typecast 추정비용 bigint | calculate  추정순매출 - 추정비용 as 추정이익 | typecast 추정이익 bigint | case when 추정순매출 <= 0   then 0   otherwise 추정이익 / 추정순매출  * 100 as 이익률    | concat "|", "|" as  참고  | typecast 순매출  bigint  | fields 영업코드,MSCP_CONT_CD as  계약코드,프로젝트명,BC_CONT_ENT_DATE as 계약시작, BC_CONT_CLS_DATE as 계약종료,추정순매출,추정비용,추정이익,이익률,참고,계약예상금액,외부매입,이월순매출,순매출,매출추정비율,MSCP_CONT_SEQ    | distinct  영업코드,계약코드,프로젝트명,계약시작,계약종료,추정순매출,추정비용,추정이익,이익률,참고,외부매입,계약예상금액,이월순매출,순매출,매출추정비율 | sort  영업코드  | calculate add col 추정순매출,추정비용,추정이익
model name = 'mo_MAPPING_SALE_CONT_PJT' model_owner = demo | where   SALE_CD =  'S2200022'  |  distinct PJT_CD |  where PJT_CD in  (                                                  'P2100229','P2100337','P2200015','P2200018','P2200104','P2200106','P2200107','P2200232','P2200254','P2100130','P2100278','P2200016','P2200047','P2200081','P2200082','P2200083','P2200090','P2200092','P2200094','P2200105','P2200144','P2200193','P2200198','P2200231' )
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1215' and C_TIME <= '1515'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1215' and C_TIME <= '1515'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1215' and C_TIME <= '1515'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1215' and C_TIME <= '1515'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1215' and C_TIME <= '1515'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1215' and C_TIME <= '1515'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_CO_DU' model_owner = paru | join LTER_TB_CO_STATION STATION_ID = LTER_TB_CO_STATION.STATION_ID | fields LTER_TB_CO_STATION_LINE_ID as LINE_ID, DU_ID, DU_NAME | concat LINE_ID, "호선" as LINE_NAME | replace LINE_NAME "0호선" "관제센터"       | sort LINE_ID, DU_ID | fields LINE_NAME as 호선명, DU_ID as `DU ID`, DU_NAME as `DU 명`
model name = 'LTER_TB_CO_DU' model_owner = paru | join LTER_TB_CO_STATION STATION_ID = LTER_TB_CO_STATION.STATION_ID | fields LTER_TB_CO_STATION_LINE_ID as LINE_ID, DU_ID, DU_NAME | concat LINE_ID, "호선" as LINE_NAME | replace LINE_NAME "0호선" "관제센터"   | where DU_ID in (0)   | sort LINE_ID, DU_ID | fields LINE_NAME as 호선명, DU_ID as `DU ID`, DU_NAME as `DU 명`
model name = 'LTER_TB_CO_STATION' model_owner = paru
model name = 'LTER_TB_CO_DU' model_owner = paru | join LTER_TB_CO_STATION STATION_ID = LTER_TB_CO_STATION.STATION_ID | fields LTER_TB_CO_STATION_LINE_ID as LINE_ID, DU_ID, DU_NAME | concat LINE_ID, "호선" as LINE_NAME | replace LINE_NAME "0호선" "관제센터"   | where DU_ID in ('51001')   | sort LINE_ID, DU_ID | fields LINE_NAME as 호선명, DU_ID as `DU ID`, DU_NAME as `DU 명`
model name = 'LTER_TB_CO_DU' model_owner = paru | where DU_ID in ( '51001'   ) | stats count(*)
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where DU_ID in ( '51001'   )   | where EVENT_TIME >= '2022-05-31 13:00:00' and EVENT_TIME <= '2022-05-31 13:00:00'     | substr EVENT_TIME 1 4 as YY | substr EVENT_TIME 6 2 as MM | substr EVENT_TIME 9 2 as DD | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MN  | concat MM, "-", DD, " ", HH, ":", MN as EVENT_TIME_1 | concat YY, MM, DD, HH, MN as COMP_TIME   | stats  sum(ATTEMPT) as ATTEMPT,  sum(STD_ATT_5M) as STD_ATT_5M,  sum(ERAB_ATTEMPT) as ERAB_ATTEMPT,  sum(STD_ERAB_5M) as STD_ERAB_5M,  sum(RRC) as RRC,  sum(RRC_SUCCESS) as RRC_SUCCESS,  sum(RRC_ATTEMPT) as RRC_ATTEMPT,  sum(ANSWER) as ANSWER,  sum(ERAB_SUCCESS) as ERAB_SUCCESS,  sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCCESS,  sum(CD) as CD   by EVENT_TIME_1, COMP_TIME   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna STD_ERAB_5M 0 | typecast STD_ERAB_5M integer | fillna RRC 0 | typecast RRC integer | fillna RRC_SUCCESS 0 | typecast RRC_SUCCESS integer | fillna RRC_ATTEMPT 0 | typecast RRC_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_SUCCESS 0 | typecast ERAB_SUCCESS integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer | fillna CD 0 | typecast CD integer   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M)* 100 | rename calculated ATT_RATE | fillna ATT_RATE 0.00 | round 2 col = ATT_RATE toString=True   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100 | rename calculated ERAB_ATT_RATE | fillna ERAB_ATT_RATE 0.00 | round 2 col = ERAB_ATT_RATE toString=True   | calculate (RRC_SUCCESS / RRC_ATTEMPT) * 100 | rename calculated RRC_RATE | fillna RRC_RATE 100.00 | round 2 col = RRC_RATE toString=True   | calculate (ERAB_SUCCESS / ERAB_ATTEMPT ) * 100 | rename calculated ANSWER_RATE | fillna ANSWER_RATE 100.00 | round 2 col = ANSWER_RATE toString=True   | calculate (CD / (ERAB_SUCCESS + ERAB_ADD_SUCCESS)) * 100 | rename calculated CD_RATE | fillna CD_RATE  0.00 | round 2 col = CD_RATE toString=True   | sort EVENT_TIME_1   | fields EVENT_TIME_1 as `시간`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB Setup 시도호 증감율(%)`, RRC as `소통호(RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율(%)`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | where DU_ID in ( '51001'   )   | where EVENT_TIME >= '2022-05-31 13:00:00' and EVENT_TIME <= '2022-05-31 13:00:00'     | substr EVENT_TIME 1 4 as YY | substr EVENT_TIME 6 2 as MM | substr EVENT_TIME 9 2 as DD | substr EVENT_TIME 12 2 as HH | substr EVENT_TIME 15 2 as MN  | concat YY, "-", MM, "-", DD, " ", HH, ":", MN as EVENT_TIME_1 | concat YY, MM, DD, HH, MN as COMP_TIME   | stats  sum(ATTEMPT) as ATTEMPT,  sum(STD_ATT_5M) as STD_ATT_5M,  sum(ERAB_ATTEMPT) as ERAB_ATTEMPT,  sum(STD_ERAB_5M) as STD_ERAB_5M,  sum(RRC) as RRC,  sum(RRC_SUCCESS) as RRC_SUCCESS,  sum(RRC_ATTEMPT) as RRC_ATTEMPT,  sum(ANSWER) as ANSWER,  sum(ERAB_SUCCESS) as ERAB_SUCCESS,  sum(ERAB_ADD_SUCCESS) as ERAB_ADD_SUCCESS,  sum(CD) as CD   by EVENT_TIME_1, COMP_TIME   | fillna ATTEMPT 0 | typecast ATTEMPT integer | fillna STD_ATT_5M 0 | typecast STD_ATT_5M integer | fillna ERAB_ATTEMPT 0 | typecast ERAB_ATTEMPT integer | fillna STD_ERAB_5M 0 | typecast STD_ERAB_5M integer | fillna RRC 0 | typecast RRC integer | fillna RRC_SUCCESS 0 | typecast RRC_SUCCESS integer | fillna RRC_ATTEMPT 0 | typecast RRC_ATTEMPT integer | fillna ANSWER 0 | typecast ANSWER integer | fillna ERAB_SUCCESS 0 | typecast ERAB_SUCCESS integer | fillna ERAB_ADD_SUCCESS 0 | typecast ERAB_ADD_SUCCESS integer | fillna CD 0 | typecast CD integer   | calculate ((ATTEMPT - STD_ATT_5M) / STD_ATT_5M)* 100 | rename calculated ATT_RATE | fillna ATT_RATE 0.00 | round 2 col = ATT_RATE toString=True   | calculate ((ERAB_ATTEMPT - STD_ERAB_5M) / STD_ERAB_5M) * 100 | rename calculated ERAB_ATT_RATE | fillna ERAB_ATT_RATE 0.00 | round 2 col = ERAB_ATT_RATE toString=True   | calculate (RRC_SUCCESS / RRC_ATTEMPT) * 100 | rename calculated RRC_RATE | fillna RRC_RATE 100.00 | round 2 col = RRC_RATE toString=True   | calculate (ERAB_SUCCESS / ERAB_ATTEMPT ) * 100 | rename calculated ANSWER_RATE | fillna ANSWER_RATE 100.00 | round 2 col = ANSWER_RATE toString=True   | calculate (CD / (ERAB_SUCCESS + ERAB_ADD_SUCCESS)) * 100 | rename calculated CD_RATE | fillna CD_RATE  0.00 | round 2 col = CD_RATE toString=True   | sort - EVENT_TIME_1   | fields EVENT_TIME_1 as `시간`, ATTEMPT as `RRC 시도호`, STD_ATT_5M as `RRC 기준 시도호`, ATT_RATE as `RRC 시도호 증감율(%)`, ERAB_ATTEMPT as `ERAB Setup 시도호`, STD_ERAB_5M as `ERAB Setup 기준 시도호`, ERAB_ATT_RATE as `ERAB Setup 시도호 증감율(%)`, RRC as `소통호(RRC 성공호)`, RRC_RATE as `소통율(RRC 성공율)(%)`, ANSWER as `완료호(ERAB Setup 성공호)`, ANSWER_RATE as `완료율(ERAB Setup 성공율)(%)`, ERAB_ADD_SUCCESS as `ERAB Setup Add 성공호`, CD as `절단호`, CD_RATE as `절단율(%)`
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and C_TIME <= '1525'   | where SGW_ID in ('')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and C_TIME <= '1525'   | where SGW_ID in ('')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1225' and C_TIME <= '1525'   | where SGW_ID in ('')    | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:25' and EVENT_TIME <= '2022-05-31 15:25'   | where SGW_ID in ('0001')    | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:25' and EVENT_TIME <= '2022-05-31 15:25'   | where SGW_ID in ('0001')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:25' and EVENT_TIME <= '2022-05-31 15:25'   | where SGW_ID in ('0001')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast 날짜 date 'YYYYMMDD', 날짜 date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26210311' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220201' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26210311' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast 날짜 date 'YYYYMMDD', 날짜 date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | mkdata [                                         ['ATTACH','0001','SEOUL-METRO-GW1','20220531','1225','0','5','454','0','0','4','416','91.63','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1230','0','5','10','0','0','4','10','100','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1235','0','5','303','503','-39.76','4','235','77.56','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1240','0','5','332','7','4642.86','4','252','75.9','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1245','0','5','65','256','-74.61','2','45','69.23','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1250','0','5','370','189','95.77','4','238','64.32','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1255','0','5','399','319','25.08','4','367','91.98','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1300','0','5','407','306','33.01','4','331','81.33','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1305','0','5','269','449','-40.09','4','189','70.26','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1310','0','5','265','66','301.52','4','232','87.55','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1315','0','5','286','36','694.44','4','193','67.48','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1320','0','5','419','244','71.72','4','355','84.73','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1325','0','5','494','276','78.99','4','309','62.55','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1330','0','5','450','111','305.41','4','412','91.56','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1335','0','5','217','0','0','4','133','61.29','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1340','0','5','242','410','-40.98','4','152','62.81','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1345','0','5','354','123','187.8','4','336','94.92','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1350','0','5','182','317','-42.59','4','159','87.36','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1355','0','5','441','435','1.38','4','301','68.25','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1400','0','5','477','98','386.73','4','388','81.34','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1405','0','5','475','283','67.84','4','441','92.84','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1410','0','5','82','63','30.16','4','60','73.17','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1415','0','5','294','457','-35.67','4','294','100','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1420','0','5','501','209','139.71','4','434','86.63','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1425','0','5','402','6','6600','4','333','82.84','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1430','0','5','287','141','103.55','4','188','65.51','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1435','0','5','174','216','-19.44','4','153','87.93','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1440','0','5','245','500','-51','4','172','70.2','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1445','0','5','131','160','-18.12','4','97','74.05','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1450','0','5','13','14','-7.14','4','13','100','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1455','0','5','18','289','-93.77','1','14','77.78','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1500','0','5','206','184','11.96','4','137','66.5','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1505','0','5','324','315','2.86','4','263','81.17','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1510','0','5','218','388','-43.81','4','201','92.2','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1515','0','5','122','407','-70.02','2','115','94.26','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1520','0','5','168','406','-58.62','4','113','67.26','1'],                                         ['DELETE','0001','SEOUL-METRO-GW1','20220531','1225','0','5','414','0','0','4','345','83.33','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1230','0','5','97','0','0','4','70','72.16','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1235','0','5','340','165','106.06','4','265','77.94','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1240','0','5','85','377','-77.45','2','57','67.06','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1245','0','5','379','319','18.81','4','329','86.81','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1250','0','5','315','429','-26.57','4','257','81.59','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1255','0','5','447','146','206.16','4','333','74.5','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1300','0','5','268','25','972','4','250','93.28','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1305','0','5','347','450','-22.89','4','253','72.91','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1310','0','5','17','281','-93.95','1','16','94.12','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1315','0','5','285','194','46.91','4','240','84.21','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1320','0','5','447','370','20.81','4','415','92.84','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1325','0','5','376','13','2792.31','2','230','61.17','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1330','0','5','60','219','-72.6','2','60','100','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1335','0','5','480','0','0','4','369','76.88','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1340','0','5','141','59','138.98','4','130','92.2','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1345','0','5','404','471','-14.23','4','277','68.56','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1350','0','5','322','67','380.6','4','252','78.26','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1355','0','5','64','58','10.34','4','50','78.12','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1400','0','5','262','494','-46.96','4','244','93.13','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1405','0','5','251','460','-45.43','4','186','74.1','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1410','0','5','208','408','-49.02','4','183','87.98','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1415','0','5','21','37','-43.24','4','18','85.71','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1420','0','5','150','444','-66.22','3','149','99.33','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1425','0','5','113','200','-43.5','4','93','82.3','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1430','0','5','398','53','650.94','4','322','80.9','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1435','0','5','48','434','-88.94','1','34','70.83','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1440','0','5','95','129','-26.36','4','69','72.63','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1445','0','5','31','176','-82.39','1','26','83.87','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1450','0','5','112','459','-75.6','2','109','97.32','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1455','0','5','217','493','-55.98','4','186','85.71','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1500','0','5','454','45','908.89','4','388','85.46','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1505','0','5','229','239','-4.18','4','140','61.14','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1510','0','5','284','11','2481.82','2','221','77.82','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1515','0','5','370','458','-19.21','4','336','90.81','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1520','0','5','118','454','-74.01','2','107','90.68','4'],                                         ['MODIFY','0001','SEOUL-METRO-GW1','20220531','1225','0','5','219','0','0','4','150','68.49','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1230','0','5','235','0','0','4','167','71.06','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1235','0','5','530','492','7.72','4','512','96.6','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1240','0','5','287','461','-37.74','4','220','76.66','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1245','0','5','103','506','-79.64','2','85','82.52','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1250','0','5','237','56','323.21','4','218','91.98','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1255','0','5','509','530','-3.96','4','468','91.94','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1300','0','5','74','283','-73.85','2','73','98.65','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1305','0','5','101','361','-72.02','2','81','80.2','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1310','0','5','361','166','117.47','4','235','65.1','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1315','0','5','76','308','-75.32','2','63','82.89','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1320','0','5','476','43','1006.98','3','394','82.77','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1325','0','5','333','76','338.16','4','229','68.77','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1330','0','5','427','65','556.92','4','377','88.29','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1335','0','5','302','0','0','4','225','74.5','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1340','0','5','457','417','9.59','4','444','97.16','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1345','0','5','447','266','68.05','4','352','78.75','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1350','0','5','245','445','-44.94','4','209','85.31','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1355','0','5','456','64','612.5','4','368','80.7','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1400','0','5','535','514','4.09','4','348','65.05','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1405','0','5','127','253','-49.8','4','120','94.49','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1410','0','5','493','42','1073.81','3','363','73.63','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1415','0','5','421','283','48.76','4','295','70.07','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1420','0','5','160','332','-51.81','4','133','83.12','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1425','0','5','240','477','-49.69','4','223','92.92','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1430','0','5','198','368','-46.2','4','146','73.74','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1435','0','5','298','216','37.96','4','263','88.25','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1440','0','5','213','430','-50.47','4','167','78.4','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1445','0','5','517','239','116.32','4','449','86.85','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1450','0','5','348','450','-22.67','4','245','70.4','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1455','0','5','450','506','-11.07','4','433','96.22','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1500','0','5','355','482','-26.35','4','310','87.32','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1505','0','5','91','435','-79.08','2','73','80.22','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1510','0','5','191','527','-63.76','3','172','90.05','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1515','0','5','269','45','497.78','4','242','89.96','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1520','0','5','276','38','626.32','4','236','85.51','3'],  ] ['INDEX', 'SGW_ID', 'SGW_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL']   | sort C_DATE, C_TIME, SGW_ID, SGW_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME  | where INDEX = 'ATTACH'   | fields  DATE_TIME as `일시`,  SGW_ID as `장비 ID`,  SGW_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `성공호`,  SUCC_RATE as `성공율` | count
model name = 'LTER_TB_SM_TT_LOG' model_owner = dv2team | mkdata [                                         ['ATTACH','0001','SEOUL-METRO-GW1','20220531','1225','0','5','454','0','0','4','416','91.63','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1230','0','5','10','0','0','4','10','100','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1235','0','5','303','503','-39.76','4','235','77.56','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1240','0','5','332','7','4642.86','4','252','75.9','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1245','0','5','65','256','-74.61','2','45','69.23','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1250','0','5','370','189','95.77','4','238','64.32','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1255','0','5','399','319','25.08','4','367','91.98','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1300','0','5','407','306','33.01','4','331','81.33','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1305','0','5','269','449','-40.09','4','189','70.26','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1310','0','5','265','66','301.52','4','232','87.55','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1315','0','5','286','36','694.44','4','193','67.48','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1320','0','5','419','244','71.72','4','355','84.73','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1325','0','5','494','276','78.99','4','309','62.55','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1330','0','5','450','111','305.41','4','412','91.56','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1335','0','5','217','0','0','4','133','61.29','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1340','0','5','242','410','-40.98','4','152','62.81','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1345','0','5','354','123','187.8','4','336','94.92','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1350','0','5','182','317','-42.59','4','159','87.36','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1355','0','5','441','435','1.38','4','301','68.25','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1400','0','5','477','98','386.73','4','388','81.34','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1405','0','5','475','283','67.84','4','441','92.84','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1410','0','5','82','63','30.16','4','60','73.17','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1415','0','5','294','457','-35.67','4','294','100','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1420','0','5','501','209','139.71','4','434','86.63','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1425','0','5','402','6','6600','4','333','82.84','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1430','0','5','287','141','103.55','4','188','65.51','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1435','0','5','174','216','-19.44','4','153','87.93','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1440','0','5','245','500','-51','4','172','70.2','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1445','0','5','131','160','-18.12','4','97','74.05','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1450','0','5','13','14','-7.14','4','13','100','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1455','0','5','18','289','-93.77','1','14','77.78','2'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1500','0','5','206','184','11.96','4','137','66.5','1'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1505','0','5','324','315','2.86','4','263','81.17','3'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1510','0','5','218','388','-43.81','4','201','92.2','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1515','0','5','122','407','-70.02','2','115','94.26','4'],['ATTACH','0001','SEOUL-METRO-GW1','20220531','1520','0','5','168','406','-58.62','4','113','67.26','1'],                                         ['DELETE','0001','SEOUL-METRO-GW1','20220531','1225','0','5','414','0','0','4','345','83.33','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1230','0','5','97','0','0','4','70','72.16','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1235','0','5','340','165','106.06','4','265','77.94','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1240','0','5','85','377','-77.45','2','57','67.06','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1245','0','5','379','319','18.81','4','329','86.81','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1250','0','5','315','429','-26.57','4','257','81.59','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1255','0','5','447','146','206.16','4','333','74.5','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1300','0','5','268','25','972','4','250','93.28','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1305','0','5','347','450','-22.89','4','253','72.91','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1310','0','5','17','281','-93.95','1','16','94.12','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1315','0','5','285','194','46.91','4','240','84.21','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1320','0','5','447','370','20.81','4','415','92.84','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1325','0','5','376','13','2792.31','2','230','61.17','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1330','0','5','60','219','-72.6','2','60','100','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1335','0','5','480','0','0','4','369','76.88','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1340','0','5','141','59','138.98','4','130','92.2','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1345','0','5','404','471','-14.23','4','277','68.56','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1350','0','5','322','67','380.6','4','252','78.26','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1355','0','5','64','58','10.34','4','50','78.12','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1400','0','5','262','494','-46.96','4','244','93.13','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1405','0','5','251','460','-45.43','4','186','74.1','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1410','0','5','208','408','-49.02','4','183','87.98','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1415','0','5','21','37','-43.24','4','18','85.71','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1420','0','5','150','444','-66.22','3','149','99.33','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1425','0','5','113','200','-43.5','4','93','82.3','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1430','0','5','398','53','650.94','4','322','80.9','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1435','0','5','48','434','-88.94','1','34','70.83','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1440','0','5','95','129','-26.36','4','69','72.63','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1445','0','5','31','176','-82.39','1','26','83.87','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1450','0','5','112','459','-75.6','2','109','97.32','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1455','0','5','217','493','-55.98','4','186','85.71','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1500','0','5','454','45','908.89','4','388','85.46','3'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1505','0','5','229','239','-4.18','4','140','61.14','1'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1510','0','5','284','11','2481.82','2','221','77.82','2'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1515','0','5','370','458','-19.21','4','336','90.81','4'],['DELETE','0001','SEOUL-METRO-GW1','20220531','1520','0','5','118','454','-74.01','2','107','90.68','4'],                                         ['MODIFY','0001','SEOUL-METRO-GW1','20220531','1225','0','5','219','0','0','4','150','68.49','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1230','0','5','235','0','0','4','167','71.06','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1235','0','5','530','492','7.72','4','512','96.6','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1240','0','5','287','461','-37.74','4','220','76.66','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1245','0','5','103','506','-79.64','2','85','82.52','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1250','0','5','237','56','323.21','4','218','91.98','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1255','0','5','509','530','-3.96','4','468','91.94','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1300','0','5','74','283','-73.85','2','73','98.65','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1305','0','5','101','361','-72.02','2','81','80.2','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1310','0','5','361','166','117.47','4','235','65.1','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1315','0','5','76','308','-75.32','2','63','82.89','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1320','0','5','476','43','1006.98','3','394','82.77','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1325','0','5','333','76','338.16','4','229','68.77','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1330','0','5','427','65','556.92','4','377','88.29','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1335','0','5','302','0','0','4','225','74.5','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1340','0','5','457','417','9.59','4','444','97.16','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1345','0','5','447','266','68.05','4','352','78.75','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1350','0','5','245','445','-44.94','4','209','85.31','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1355','0','5','456','64','612.5','4','368','80.7','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1400','0','5','535','514','4.09','4','348','65.05','1'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1405','0','5','127','253','-49.8','4','120','94.49','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1410','0','5','493','42','1073.81','3','363','73.63','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1415','0','5','421','283','48.76','4','295','70.07','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1420','0','5','160','332','-51.81','4','133','83.12','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1425','0','5','240','477','-49.69','4','223','92.92','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1430','0','5','198','368','-46.2','4','146','73.74','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1435','0','5','298','216','37.96','4','263','88.25','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1440','0','5','213','430','-50.47','4','167','78.4','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1445','0','5','517','239','116.32','4','449','86.85','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1450','0','5','348','450','-22.67','4','245','70.4','2'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1455','0','5','450','506','-11.07','4','433','96.22','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1500','0','5','355','482','-26.35','4','310','87.32','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1505','0','5','91','435','-79.08','2','73','80.22','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1510','0','5','191','527','-63.76','3','172','90.05','4'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1515','0','5','269','45','497.78','4','242','89.96','3'],['MODIFY','0001','SEOUL-METRO-GW1','20220531','1520','0','5','276','38','626.32','4','236','85.51','3'],  ] ['INDEX', 'SGW_ID', 'SGW_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL']   | sort C_DATE, C_TIME, SGW_ID, SGW_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME  | where INDEX = 'ATTACH'   | fields  DATE_TIME as `일시`,  SGW_ID as `장비 ID`,  SGW_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `성공호`,  SUCC_RATE as `성공율`
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26210311' | fields ent_date as 날짜,  DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | pivot  sum(calculated)  SPLITCOL 이름  sortcol desc | calculate sum row left
model name = 'DailyTask_PJT_WORK_ACT' | where ENT_DATE >= '20220501' and ENT_DATE <= '20220531' | merge right_outer (DailyTask_VIEW_USER_INFO) as DailyTask_VIEW_USER_INFO on EMP_CD = DailyTask_VIEW_USER_INFO.EMPCD   | where DailyTask_VIEW_USER_INFO_deptCd = '26210311' | fields ent_date as 날짜,  DATE_LIST_DAY_WEEK as 요일, DailyTask_VIEW_USER_INFO_empNM as 이름, work_title as 업무명, work_time as 업무시간  | where 이름 != 'monaco'  | time2sec 업무시간 "HH:mm" | calculate 업무시간_to_seconds / 3600 | adv heatmap sum(calculated) SPLITROW 날짜 SPLITCOL 이름 sortrow asc sortcol desc | typecast 날짜 date 'YYYYMMDD', 날짜 date 'YYYY-MM-DD' | substr 날짜 6 5 as 날짜  | replace 날짜 "-" "월" | concat 날짜, "일" as 날짜
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:35' and EVENT_TIME <= '2022-05-31 15:35'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort C_DATE, C_TIME, STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""   | where STATISTICS_TYPE = 'Diameter'   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:35' and EVENT_TIME <= '2022-05-31 15:35'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort - C_DATE, - C_TIME, - STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1240' and C_TIME <= '1540'   | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort C_DATE, C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1240' and C_TIME <= '1540'   | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort - C_DATE, - C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:45' and EVENT_TIME <= '2022-05-31 15:45'    | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort C_DATE, C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:45' and EVENT_TIME <= '2022-05-31 15:45'    | where PCRF_ID in ('')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort - C_DATE, - C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:45' and EVENT_TIME <= '2022-05-31 15:45'    | where PCRF_ID in ('0001')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort C_DATE, C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:45' and EVENT_TIME <= '2022-05-31 15:45'    | where PCRF_ID in ('0001')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort - C_DATE, - C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'   | case when EVENT_TIME is not null then '' otherwise '' as SR_TIME | case when EVENT_TIME is not null then '' otherwise '' as SR_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SR_MIN | case when EVENT_TIME is not null then '' otherwise '' as SR_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as SR_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SR_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as SR_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL   | fields MME_ID, MME_NAME, EVENT_TIME as ATTACH_TIME, WEEKDAY as ATTACH_WEEKDAY, MIN as ATTACH_MIN, ATTEMPT as ATTACH_ATTEMPT, STD_ATT_5M as ATTACH_STD_ATT, ATT_RATE as ATTACH_ATT_RATE, ATT_RATE_LEVEL as ATTACH_ATT_RATE_LEVEL, SUCCESS as ATTACH_SUCCESS, SUCC_RATE as ATTACH_SUCC_RATE, SUCC_RATE_LEVEL as ATTACH_SUCC_LEVEL, ANSWER as ATTACH_ANSWER, ANS_RATE as ATTACH_ANS_RATE, ANS_RATE_LEVEL as ATTACH_ANS_LEVEL, SR_TIME, SR_WEEKDAY, SR_MIN, SR_ATTEMPT, SR_STD_ATT, SR_ATT_RATE, SR_ATT_RATE_LEVEL, SR_SUCCESS, SR_SUCC_RATE, SR_SUCC_LEVEL, SR_ANSWER, SR_ANS_RATE, SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, EVENT_TIME as ATT_TIME, WEEKDAY as ATT_WEEKDAY, MIN as ATT_MIN, ATTEMPT as ATT_ATT, STD_ATT_5M as ATT_ATT_STD, ATT_RATE as ATT_ATT_RATE, ATT_RATE_LEVEL as ATT_ATT_RATE_LEVEL, SUCCESS as ATT_SUCC, SUCC_RATE as ATT_SUCC_RATE, SUCC_RATE_LEVEL as ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'    | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_TIME | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_MIN | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MODIFY_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, EVENT_TIME as CRE_TIME, WEEKDAY as CRE_WEEKDAY, MIN as CRE_MIN, ATTEMPT as CRE_ATT, STD_ATT_5M as CRE_ATT_STD, ATT_RATE as CRE_ATT_RATE, ATT_RATE_LEVEL as CRE_ATT_RATE_LEVEL, SUCCESS as CRE_SUCC, SUCC_RATE as CRE_SUCC_RATE, SUCC_RATE_LEVEL as CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, MODIFY_TIME, MODIFY_WEEKDAY, MODIFY_MIN, MODIFY_ATT, MODIFY_ATT_STD, MODIFY_ATT_RATE, MODIFY_ATT_RATE_LEVEL, MODIFY_SUCC, MODIFY_SUCC_RATE, MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'   | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATTEMPT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_STD_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCCESS | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANSWER | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATTACH_ANS_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_TIME | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_MIN | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as SGSAP_SUCC_LEVEL  | fields MME_ID, MME_NAME, ATTACH_TIME, ATTACH_WEEKDAY, ATTACH_MIN, ATTACH_ATTEMPT, ATTACH_STD_ATT, ATTACH_ATT_RATE, ATTACH_ATT_RATE_LEVEL, ATTACH_SUCCESS, ATTACH_SUCC_RATE, ATTACH_SUCC_LEVEL, ATTACH_ANSWER, ATTACH_ANS_RATE, ATTACH_ANS_LEVEL, EVENT_TIME AS SR_TIME, WEEKDAY AS SR_WEEKDAY, MIN AS SR_MIN, ATTEMPT AS SR_ATTEMPT, STD_ATT_5M AS SR_STD_ATT, ATT_RATE AS SR_ATT_RATE, ATT_RATE_LEVEL AS SR_ATT_RATE_LEVEL, SUCCESS AS SR_SUCCESS, SUCC_RATE AS SR_SUCC_RATE, SUCC_RATE_LEVEL AS SR_SUCC_LEVEL, ANSWER AS SR_ANSWER, ANS_RATE AS SR_ANS_RATE, ANS_RATE_LEVEL AS SR_ANS_LEVEL, SGSAP_TIME, SGSAP_WEEKDAY, SGSAP_MIN, SGSAP_ATT_RATE, SGSAP_ATT_RATE_LEVEL, SGSAP_SUCC_RATE, SGSAP_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'    | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_TIME | case when EVENT_TIME is not null then '' otherwise '' as MOD_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as MOD_MIN | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as MOD_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, EVENT_TIME as DEL_TIME, WEEKDAY as DEL_WEEKDAY, MIN as DEL_MIN, ATTEMPT as DEL_ATT, STD_ATT_5M as DEL_ATT_STD, ATT_RATE as DEL_ATT_RATE, ATT_RATE_LEVEL as DEL_ATT_RATE_LEVEL, SUCCESS as DEL_SUCC, SUCC_RATE as DEL_SUCC_RATE, SUCC_RATE_LEVEL as DEL_SUCC_LEVEL, MOD_TIME, MOD_WEEKDAY, MOD_MIN, MOD_ATT, MOD_ATT_STD, MOD_ATT_RATE, MOD_ATT_RATE_LEVEL, MOD_SUCC, MOD_SUCC_RATE, MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'     | case when EVENT_TIME is not null then '' otherwise '' as ATT_TIME | case when EVENT_TIME is not null then '' otherwise '' as ATT_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as ATT_MIN | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as ATT_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields SGW_ID, SGW_NAME, ATT_TIME, ATT_WEEKDAY, ATT_MIN, ATT_ATT, ATT_ATT_STD, ATT_ATT_RATE, ATT_ATT_RATE_LEVEL, ATT_SUCC, ATT_SUCC_RATE, ATT_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MOD_TIME, WEEKDAY as MOD_WEEKDAY, MIN as MOD_MIN, ATTEMPT as MOD_ATT, STD_ATT_5M as MOD_ATT_STD, ATT_RATE as MOD_ATT_RATE, ATT_RATE_LEVEL as MOD_ATT_RATE_LEVEL, SUCCESS as MOD_SUCC, SUCC_RATE as MOD_SUCC_RATE, SUCC_RATE_LEVEL as MOD_SUCC_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'    | case when EVENT_TIME is not null then '' otherwise '' as CRE_TIME | case when EVENT_TIME is not null then '' otherwise '' as CRE_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as CRE_MIN | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as CRE_SUCC_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_TIME | case when EVENT_TIME is not null then '' otherwise '' as DEL_WEEKDAY | case when EVENT_TIME is not null then '' otherwise '' as DEL_MIN | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_STD | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_ATT_RATE_LEVEL | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_RATE | case when EVENT_TIME is not null then '' otherwise '' as DEL_SUCC_LEVEL   | fields PGW_ID, PGW_NAME, CRE_TIME, CRE_WEEKDAY, CRE_MIN, CRE_ATT, CRE_ATT_STD, CRE_ATT_RATE, CRE_ATT_RATE_LEVEL, CRE_SUCC, CRE_SUCC_RATE, CRE_SUCC_LEVEL, DEL_TIME, DEL_WEEKDAY, DEL_MIN, DEL_ATT, DEL_ATT_STD, DEL_ATT_RATE, DEL_ATT_RATE_LEVEL, DEL_SUCC, DEL_SUCC_RATE, DEL_SUCC_LEVEL, EVENT_TIME as MODIFY_TIME, WEEKDAY as MODIFY_WEEKDAY, MIN as MODIFY_MIN, ATTEMPT as MODIFY_ATT, STD_ATT_5M as MODIFY_ATT_STD, ATT_RATE as MODIFY_ATT_RATE, ATT_RATE_LEVEL as MODIFY_ATT_RATE_LEVEL, SUCCESS as MODIFY_SUCC, SUCC_RATE as MODIFY_SUCC_RATE, SUCC_RATE_LEVEL as MODIFY_SUCC_LEVEL
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'     | where KPI_TYPE in ('PCEF', 'SPR', 'AF') | fields PCRF_ID, PCRF_NAME, KPI_TYPE, EVENT_TIME, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_N  | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_N  | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_N   | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B1  | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B1  | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B1   | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B2  | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B2  | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B2   | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B3  | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B3  | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B3   | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'PCEF' then ATTEMPT as PCA_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'PCEF' then STD_ATT_5M as PCAS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE as PCAR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'PCEF' then ATT_RATE_LEVEL as PCARL_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'PCEF' then SUCCESS as PCS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE as PCSR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'PCEF' then SUCC_RATE_LEVEL as PCSRL_B4  | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'SPR' then ATTEMPT as SPA_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'SPR' then STD_ATT_5M as SPAS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'SPR' then ATT_RATE as SPAR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'SPR' then ATT_RATE_LEVEL as SPARL_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'SPR' then SUCCESS as SPS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE as SPSR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'SPR' then SUCC_RATE_LEVEL as SPSRL_B4  | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'AF' then ATTEMPT as AFA_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'AF' then STD_ATT_5M as AFAS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'AF' then ATT_RATE as AFAR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'AF' then ATT_RATE_LEVEL as AFARL_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'AF' then SUCCESS as AFS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'AF' then SUCC_RATE as AFSR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and KPI_TYPE = 'AF' then SUCC_RATE_LEVEL as AFSRL_B4   | stats max (PCA_N) as `PCEF-시도호-15:50`, max (PCA_B1) as `PCEF-시도호-15:45`, max (PCAS_N) as `PCEF-기준시도호-15:50`, max (PCAS_B1) as `PCEF-기준시도호-15:45`, max (PCAR_N) as `PCEF-시도호 증감율(%)-15:50`, max (PCAR_B1) as `PCEF-시도호 증감율(%)-15:45`, max (PCS_N) as `PCEF-성공호-15:50`, max (PCS_B1) as `PCEF-성공호-15:45`, max (PCSR_N) as `PCEF-성공율(%)-15:50`, max (PCSR_B1) as `PCEF-성공율(%)-15:45`, max (SPA_N) as `SPR-시도호-15:50`, max (SPA_B1) as `SPR-시도호-15:45`, max (SPAS_N) as `SPR-기준시도호-15:50`, max (SPAS_B1) as `SPR-기준시도호-15:45`, max (SPAR_N) as `SPR-시도호 증감율(%)-15:50`, max (SPAR_B1) as `SPR-시도호 증감율(%)-15:45`, max (SPS_N) as `SPR-성공호-15:50`, max (SPS_B1) as `SPR-성공호-15:45`, max (SPSR_N) as `SPR-성공율(%)-15:50`, max (SPSR_B1) as `SPR-성공율(%)-15:45`, max (AFA_N) as `AF-시도호-15:50`, max (AFA_B1) as `AF-시도호-15:45`, max (AFAS_N) as `AF-기준시도호-15:50`, max (AFAS_B1) as `AF-기준시도호-15:45`, max (AFAR_N) as `AF-시도호 증감율(%)-15:50`, max (AFAR_B1) as `AF-시도호 증감율(%)-15:45`, max (AFS_N) as `AF-성공호-15:50`, max (AFS_B1) as `AF-성공호-15:45`, max (AFSR_N) as `AF-성공율(%)-15:50`, max (AFSR_B1) as `AF-성공율(%)-15:45`  by PCRF_ID, PCRF_NAME  | rename PCRF_NAME 장비명
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1530' and  C_TIME <= '1550'      | where GROUP_ID in (200,400,300,500) | case when EVENT_TIME is not null then 'HSS' otherwise 'HSS' as EQUIP_NAME | fields EQUIP_NAME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M,ATT_RATE, ATT_RATE_LEVEL, SUCCESS,SUCC_RATE, SUCC_RATE_LEVEL    | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 200 then ATTEMPT as HDA_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 200 then ATT_RATE as HDAR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 200 then SUCCESS as HDS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_N  | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 300 then ATTEMPT as H13A_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 300 then ATT_RATE as H13AR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 300 then SUCCESS as H13S_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_N  | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 400 then ATTEMPT as H6A_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 400 then ATT_RATE as H6AR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 400 then SUCCESS as H6S_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_N  | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 500 then ATTEMPT as HSA_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 500 then ATT_RATE as HSAR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 500 then SUCCESS as HSS_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_N | case when EVENT_TIME = '2022-05-31 15:50:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_N   | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 200 then ATTEMPT as HDA_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 200 then SUCCESS as HDS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B1  | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 300 then ATTEMPT as H13A_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 300 then SUCCESS as H13S_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B1  | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 400 then ATTEMPT as H6A_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 400 then SUCCESS as H6S_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B1  | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 500 then ATTEMPT as HSA_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 500 then SUCCESS as HSS_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B1 | case when EVENT_TIME = '2022-05-31 15:45:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B1   | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 200 then ATTEMPT as HDA_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 200 then SUCCESS as HDS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B2  | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 300 then ATTEMPT as H13A_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 300 then SUCCESS as H13S_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B2  | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 400 then ATTEMPT as H6A_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 400 then SUCCESS as H6S_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B2  | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 500 then ATTEMPT as HSA_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 500 then SUCCESS as HSS_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B2 | case when EVENT_TIME = '2022-05-31 15:40:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B2   | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 200 then ATTEMPT as HDA_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 200 then SUCCESS as HDS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B3  | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 300 then ATTEMPT as H13A_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 300 then SUCCESS as H13S_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B3  | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 400 then ATTEMPT as H6A_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 400 then SUCCESS as H6S_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B3  | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 500 then ATTEMPT as HSA_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 500 then SUCCESS as HSS_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B3 | case when EVENT_TIME = '2022-05-31 15:35:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B3   | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 200 then ATTEMPT as HDA_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 200 then STD_ATT_5M as HDAS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 200 then ATT_RATE as HDAR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 200 then ATT_RATE_LEVEL as HDARL_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 200 then SUCCESS as HDS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 200 then SUCC_RATE as HDSR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 200 then SUCC_RATE_LEVEL as HDSRL_B4  | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 300 then ATTEMPT as H13A_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 300 then STD_ATT_5M as H13AS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 300 then ATT_RATE as H13AR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 300 then ATT_RATE_LEVEL as H13ARL_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 300 then SUCCESS as H13S_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 300 then SUCC_RATE as H13SR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 300 then SUCC_RATE_LEVEL as H13SRL_B4  | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 400 then ATTEMPT as H6A_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 400 then STD_ATT_5M as H6AS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 400 then ATT_RATE as H6AR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 400 then ATT_RATE_LEVEL as H6ARL_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 400 then SUCCESS as H6S_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 400 then SUCC_RATE as H6SR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 400 then SUCC_RATE_LEVEL as H6SRL_B4  | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 500 then ATTEMPT as HSA_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 500 then STD_ATT_5M as HSAS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 500 then ATT_RATE as HSAR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 500 then ATT_RATE_LEVEL as HSARL_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 500 then SUCCESS as HSS_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 500 then SUCC_RATE as HSSR_B4 | case when EVENT_TIME = '2022-05-31 15:30:00' and GROUP_ID = 500 then SUCC_RATE_LEVEL as HSSRL_B4    | stats max (HDA_N) as `Diameter Stack-시도호-15:50`, max (HDA_B1) as `Diameter Stack-시도호-15:45`, max (HDAS_N) as `Diameter Stack-기준시도호-15:50`, max (HDAS_B1) as `Diameter Stack-기준시도호-15:45`, max (HDAR_N) as `Diameter Stack-시도호 증감율(%)-15:50`, max (HDAR_B1) as `Diameter Stack-시도호 증감율(%)-15:45`, max (HDS_N) as `Diameter Stack-성공호-15:50`, max (HDS_B1) as `Diameter Stack-성공호-15:45`, max (HDSR_N) as `Diameter Stack-성공율(%)-15:50`, max (HDSR_B1) as `Diameter Stack-성공율(%)-15:45`, max (H13A_N) as `S13A Interface-시도호-15:50`, max (H13A_B1) as `S13A Interface-시도호-15:45`, max (H13AS_N) as `S13A Interface-기준시도호-15:50`, max (H13AS_B1) as `S13A Interface-기준시도호-15:45`, max (H13AR_N) as `S13A Interface-시도호 증감율(%)-15:50`, max (H13AR_B1) as `S13A Interface-시도호 증감율(%)-15:45`, max (H13S_N) as `S13A Interface-성공호-15:50`, max (H13S_B1) as `S13A Interface-성공호-15:45`, max (H13SR_N) as `S13A Interface-성공율(%)-15:50`, max (H13SR_B1) as `S13A Interface-성공율(%)-15:45`, max (H6A_N) as `S6A Interface-시도호-15:50`, max (H6A_B1) as `S6A Interface-시도호-15:45`, max (H6AS_N) as `S6A Interface-기준시도호-15:50`, max (H6AS_B1) as `S6A Interface-기준시도호-15:45`, max (H6AR_N) as `S6A Interface-시도호 증감율(%)-15:50`, max (H6AR_B1) as `S6A Interface-시도호 증감율(%)-15:45`, max (H6S_N) as `S6A Interface-성공호-15:50`, max (H6S_B1) as `S6A Interface-성공호-15:45`, max (H6SR_N) as `S6A Interface-성공율(%)-15:50`, max (H6SR_B1) as `S6A Interface-성공율(%)-15:45`, max (HSA_N) as `SP Interface-시도호-15:50`, max (HSA_B1) as `SP Interface-시도호-15:45`, max (HSAS_N) as `SP Interface-기준시도호-15:50`, max (HSAS_B1) as `SP Interface-기준시도호-15:45`, max (HSAR_N) as `SP Interface-시도호 증감율(%)-15:50`, max (HSAR_B1) as `SP Interface-시도호 증감율(%)-15:45`, max (HSS_N) as `SP Interface-성공호-15:50`, max (HSS_B1) as `SP Interface-성공호-15:45`, max (HSSR_N) as `SP Interface-성공율(%)-15:50`, max (HSSR_B1) as `SP Interface-성공율(%)-15:45`   by EQUIP_NAME  | rename EQUIP_NAME 장비명
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:45' and EVENT_TIME <= '2022-05-31 15:45'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:45' and EVENT_TIME <= '2022-05-31 15:45'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                         ['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1325','0','5','136','20','580','4','118','82.35','3','112','86.76','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1330','0','5','76','73','4.11','4','51','59.21','1','45','67.11','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1335','0','5','118','195','-39.49','3','80','66.95','1','79','67.8','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1340','0','5','7','178','-96.07','4','5','71.43','4','5','71.43','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1345','0','5','69','22','213.64','4','52','71.01','2','49','75.36','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1350','0','5','83','197','-57.87','3','56','57.83','1','48','67.47','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1355','0','5','139','150','-7.33','4','100','66.19','1','92','71.94','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1400','0','5','132','48','175','4','108','72.73','2','96','81.82','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1405','0','5','153','113','35.4','4','122','70.59','2','108','79.74','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1410','0','5','135','150','-10','4','75','51.85','1','70','55.56','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1415','0','5','126','140','-10','4','105','67.46','1','85','83.33','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1420','0','5','128','1','12700','4','92','62.5','1','80','71.88','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1425','0','5','33','148','-77.7','2','18','48.48','1','16','54.55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1430','0','5','198','119','66.39','4','189','83.84','3','166','95.45','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1435','0','5','133','147','-9.52','4','125','90.23','4','120','93.98','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1440','0','5','93','135','-31.11','3','69','66.67','1','62','74.19','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1445','0','5','191','37','416.22','4','134','67.54','1','129','70.16','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1450','0','5','54','91','-40.66','3','29','51.85','1','28','53.7','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1455','0','5','124','42','195.24','4','65','49.19','1','61','52.42','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1500','0','5','156','27','477.78','4','147','89.74','3','140','94.23','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1505','0','5','67','96','-30.21','3','63','80.6','3','54','94.03','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1510','0','5','166','20','730','4','117','57.83','1','96','70.48','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1515','0','5','196','42','366.67','4','142','66.33','1','130','72.45','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1520','0','5','66','190','-65.26','3','48','68.18','1','45','72.73','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1525','0','5','3','50','-94','4','3','100','4','3','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1530','0','5','103','100','3','4','86','75.73','2','78','83.5','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1535','0','5','46','98','-53.06','3','43','78.26','2','36','93.48','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1540','0','5','137','72','90.28','4','84','56.93','1','78','61.31','1'],                                         ['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1325','0','5','281','204','37.75','4','176','62.63','1','162','57.65','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1330','0','5','745','809','-7.91','4','448','60.13','1','424','56.91','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1335','0','5','51','49','4.08','4','34','66.67','1','32','62.75','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1340','0','5','719','272','164.34','4','708','98.47','4','658','91.52','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1345','0','5','482','972','-50.41','4','417','86.51','3','340','70.54','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1350','0','5','523','86','508.14','4','392','74.95','2','322','61.57','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1355','0','5','92','513','-82.07','1','64','69.57','1','63','68.48','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1400','0','5','685','521','31.48','4','598','87.3','3','545','79.56','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1405','0','5','390','505','-22.77','4','248','63.59','1','239','61.28','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1410','0','5','844','818','3.18','4','448','53.08','1','427','50.59','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1415','0','5','293','773','-62.1','3','229','78.16','2','199','67.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1420','0','5','756','850','-11.06','4','437','57.8','1','379','50.13','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1425','0','5','287','903','-68.22','3','170','59.23','1','162','56.45','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1430','0','5','695','700','-0.71','4','407','58.56','1','391','56.26','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1435','0','5','292','724','-59.67','4','234','80.14','3','226','77.4','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1440','0','5','628','885','-29.04','4','549','87.42','3','511','81.37','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1445','0','5','610','301','102.66','4','467','76.56','2','421','69.02','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1450','0','5','389','621','-37.36','4','364','93.57','4','334','85.86','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1455','0','5','689','940','-26.7','4','569','82.58','3','561','81.42','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1500','0','5','118','281','-58.01','4','91','77.12','2','81','68.64','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1505','0','5','274','283','-3.18','4','197','71.9','2','173','63.14','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1510','0','5','244','315','-22.54','4','148','60.66','1','129','52.87','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1515','0','5','354','15','2260','2','347','98.02','4','315','88.98','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1520','0','5','676','750','-9.87','4','468','69.23','1','398','58.88','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1525','0','5','767','788','-2.66','4','483','62.97','1','398','51.89','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1530','0','5','801','782','2.43','4','630','78.65','2','614','76.65','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1535','0','5','557','326','70.86','4','453','81.33','3','409','73.43','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1540','0','5','123','996','-87.65','1','106','86.18','3','86','69.92','1'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                         ['Attach','0001','SEOUL-METRO-MME1','20220531','1245','0','5','104','28','271.43','4','57','45.19','1','47','54.81','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1325','0','5','136','20','580','4','118','82.35','3','112','86.76','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1330','0','5','76','73','4.11','4','51','59.21','1','45','67.11','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1335','0','5','118','195','-39.49','3','80','66.95','1','79','67.8','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1340','0','5','7','178','-96.07','4','5','71.43','4','5','71.43','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1345','0','5','69','22','213.64','4','52','71.01','2','49','75.36','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1350','0','5','83','197','-57.87','3','56','57.83','1','48','67.47','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1355','0','5','139','150','-7.33','4','100','66.19','1','92','71.94','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1400','0','5','132','48','175','4','108','72.73','2','96','81.82','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1405','0','5','153','113','35.4','4','122','70.59','2','108','79.74','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1410','0','5','135','150','-10','4','75','51.85','1','70','55.56','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1415','0','5','126','140','-10','4','105','67.46','1','85','83.33','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1420','0','5','128','1','12700','4','92','62.5','1','80','71.88','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1425','0','5','33','148','-77.7','2','18','48.48','1','16','54.55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1430','0','5','198','119','66.39','4','189','83.84','3','166','95.45','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1435','0','5','133','147','-9.52','4','125','90.23','4','120','93.98','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1440','0','5','93','135','-31.11','3','69','66.67','1','62','74.19','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1445','0','5','191','37','416.22','4','134','67.54','1','129','70.16','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1450','0','5','54','91','-40.66','3','29','51.85','1','28','53.7','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1455','0','5','124','42','195.24','4','65','49.19','1','61','52.42','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1500','0','5','156','27','477.78','4','147','89.74','3','140','94.23','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1505','0','5','67','96','-30.21','3','63','80.6','3','54','94.03','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1510','0','5','166','20','730','4','117','57.83','1','96','70.48','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1515','0','5','196','42','366.67','4','142','66.33','1','130','72.45','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1520','0','5','66','190','-65.26','3','48','68.18','1','45','72.73','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1525','0','5','3','50','-94','4','3','100','4','3','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1530','0','5','103','100','3','4','86','75.73','2','78','83.5','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1535','0','5','46','98','-53.06','3','43','78.26','2','36','93.48','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1540','0','5','137','72','90.28','4','84','56.93','1','78','61.31','1'],                                         ['SR','0001','SEOUL-METRO-MME1','20220531','1245','0','5','640','3','21233.33','4','526','82.19','3','515','80.47','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1325','0','5','281','204','37.75','4','176','62.63','1','162','57.65','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1330','0','5','745','809','-7.91','4','448','60.13','1','424','56.91','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1335','0','5','51','49','4.08','4','34','66.67','1','32','62.75','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1340','0','5','719','272','164.34','4','708','98.47','4','658','91.52','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1345','0','5','482','972','-50.41','4','417','86.51','3','340','70.54','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1350','0','5','523','86','508.14','4','392','74.95','2','322','61.57','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1355','0','5','92','513','-82.07','1','64','69.57','1','63','68.48','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1400','0','5','685','521','31.48','4','598','87.3','3','545','79.56','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1405','0','5','390','505','-22.77','4','248','63.59','1','239','61.28','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1410','0','5','844','818','3.18','4','448','53.08','1','427','50.59','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1415','0','5','293','773','-62.1','3','229','78.16','2','199','67.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1420','0','5','756','850','-11.06','4','437','57.8','1','379','50.13','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1425','0','5','287','903','-68.22','3','170','59.23','1','162','56.45','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1430','0','5','695','700','-0.71','4','407','58.56','1','391','56.26','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1435','0','5','292','724','-59.67','4','234','80.14','3','226','77.4','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1440','0','5','628','885','-29.04','4','549','87.42','3','511','81.37','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1445','0','5','610','301','102.66','4','467','76.56','2','421','69.02','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1450','0','5','389','621','-37.36','4','364','93.57','4','334','85.86','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1455','0','5','689','940','-26.7','4','569','82.58','3','561','81.42','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1500','0','5','118','281','-58.01','4','91','77.12','2','81','68.64','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1505','0','5','274','283','-3.18','4','197','71.9','2','173','63.14','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1510','0','5','244','315','-22.54','4','148','60.66','1','129','52.87','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1515','0','5','354','15','2260','2','347','98.02','4','315','88.98','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1520','0','5','676','750','-9.87','4','468','69.23','1','398','58.88','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1525','0','5','767','788','-2.66','4','483','62.97','1','398','51.89','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1530','0','5','801','782','2.43','4','630','78.65','2','614','76.65','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1535','0','5','557','326','70.86','4','453','81.33','3','409','73.43','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1540','0','5','123','996','-87.65','1','106','86.18','3','86','69.92','1'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'SR'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1245' and C_TIME <= '1545'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1245' and C_TIME <= '1545'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1245' and C_TIME <= '1545'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'  | where MME_ID in ('0001')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_MODIFY' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1250' and C_TIME <= '1550'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1250' and C_TIME <= '1550'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1250' and C_TIME <= '1550'   | where PGW_ID in ('0001')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'   | where SGW_ID in ('0001')    | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_MODIFY' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'   | where SGW_ID in ('0001')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_SGW_DELETE' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'   | where SGW_ID in ('0001')   | fields  SGW_ID, SGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_ACCESS_KPI' model_owner = dv2team | mkdata [                                         ['Attach','0001','SEOUL-METRO-MME1','20220531','1250','0','5','184','182','1.1','4','103','55.43','1','102','55.98','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1255','0','5','62','34','82.35','4','61','80.65','3','50','98.39','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1300','0','5','136','16','750','4','123','87.5','3','119','90.44','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1305','0','5','171','109','56.88','4','115','67.25','1','115','67.25','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1310','0','5','50','0','0','4','39','74','2','37','78','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1315','0','5','157','86','82.56','4','157','92.36','4','145','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1320','0','5','20','33','-39.39','3','11','50','1','10','55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1325','0','5','136','20','580','4','118','82.35','3','112','86.76','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1330','0','5','76','73','4.11','4','51','59.21','1','45','67.11','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1335','0','5','118','195','-39.49','3','80','66.95','1','79','67.8','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1340','0','5','7','178','-96.07','4','5','71.43','4','5','71.43','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1345','0','5','69','22','213.64','4','52','71.01','2','49','75.36','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1350','0','5','83','197','-57.87','3','56','57.83','1','48','67.47','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1355','0','5','139','150','-7.33','4','100','66.19','1','92','71.94','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1400','0','5','132','48','175','4','108','72.73','2','96','81.82','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1405','0','5','153','113','35.4','4','122','70.59','2','108','79.74','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1410','0','5','135','150','-10','4','75','51.85','1','70','55.56','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1415','0','5','126','140','-10','4','105','67.46','1','85','83.33','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1420','0','5','128','1','12700','4','92','62.5','1','80','71.88','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1425','0','5','33','148','-77.7','2','18','48.48','1','16','54.55','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1430','0','5','198','119','66.39','4','189','83.84','3','166','95.45','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1435','0','5','133','147','-9.52','4','125','90.23','4','120','93.98','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1440','0','5','93','135','-31.11','3','69','66.67','1','62','74.19','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1445','0','5','191','37','416.22','4','134','67.54','1','129','70.16','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1450','0','5','54','91','-40.66','3','29','51.85','1','28','53.7','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1455','0','5','124','42','195.24','4','65','49.19','1','61','52.42','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1500','0','5','156','27','477.78','4','147','89.74','3','140','94.23','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1505','0','5','67','96','-30.21','3','63','80.6','3','54','94.03','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1510','0','5','166','20','730','4','117','57.83','1','96','70.48','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1515','0','5','196','42','366.67','4','142','66.33','1','130','72.45','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1520','0','5','66','190','-65.26','3','48','68.18','1','45','72.73','2'],['Attach','0001','SEOUL-METRO-MME1','20220531','1525','0','5','3','50','-94','4','3','100','4','3','100','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1530','0','5','103','100','3','4','86','75.73','2','78','83.5','3'],['Attach','0001','SEOUL-METRO-MME1','20220531','1535','0','5','46','98','-53.06','3','43','78.26','2','36','93.48','4'],['Attach','0001','SEOUL-METRO-MME1','20220531','1540','0','5','137','72','90.28','4','84','56.93','1','78','61.31','1'],['Attach','0001','SEOUL-METRO-MME1','20220531','1545','0','5','191','104','83.65','4','169','73.3','2','140','88.48','3'],                                         ['SR','0001','SEOUL-METRO-MME1','20220531','1250','0','5','947','663','42.84','4','644','68','1','643','67.9','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1255','0','5','67','411','-83.7','1','36','53.73','1','33','49.25','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1300','0','5','165','896','-81.58','1','165','100','4','150','90.91','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1305','0','5','497','726','-31.54','4','280','56.34','1','239','48.09','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1310','0','5','840','0','0','4','535','63.69','1','445','52.98','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1315','0','5','823','878','-6.26','4','603','73.27','2','573','69.62','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1320','0','5','644','787','-18.17','4','498','77.33','2','469','72.83','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1325','0','5','281','204','37.75','4','176','62.63','1','162','57.65','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1330','0','5','745','809','-7.91','4','448','60.13','1','424','56.91','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1335','0','5','51','49','4.08','4','34','66.67','1','32','62.75','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1340','0','5','719','272','164.34','4','708','98.47','4','658','91.52','4'],['SR','0001','SEOUL-METRO-MME1','20220531','1345','0','5','482','972','-50.41','4','417','86.51','3','340','70.54','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1350','0','5','523','86','508.14','4','392','74.95','2','322','61.57','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1355','0','5','92','513','-82.07','1','64','69.57','1','63','68.48','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1400','0','5','685','521','31.48','4','598','87.3','3','545','79.56','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1405','0','5','390','505','-22.77','4','248','63.59','1','239','61.28','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1410','0','5','844','818','3.18','4','448','53.08','1','427','50.59','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1415','0','5','293','773','-62.1','3','229','78.16','2','199','67.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1420','0','5','756','850','-11.06','4','437','57.8','1','379','50.13','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1425','0','5','287','903','-68.22','3','170','59.23','1','162','56.45','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1430','0','5','695','700','-0.71','4','407','58.56','1','391','56.26','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1435','0','5','292','724','-59.67','4','234','80.14','3','226','77.4','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1440','0','5','628','885','-29.04','4','549','87.42','3','511','81.37','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1445','0','5','610','301','102.66','4','467','76.56','2','421','69.02','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1450','0','5','389','621','-37.36','4','364','93.57','4','334','85.86','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1455','0','5','689','940','-26.7','4','569','82.58','3','561','81.42','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1500','0','5','118','281','-58.01','4','91','77.12','2','81','68.64','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1505','0','5','274','283','-3.18','4','197','71.9','2','173','63.14','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1510','0','5','244','315','-22.54','4','148','60.66','1','129','52.87','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1515','0','5','354','15','2260','2','347','98.02','4','315','88.98','3'],['SR','0001','SEOUL-METRO-MME1','20220531','1520','0','5','676','750','-9.87','4','468','69.23','1','398','58.88','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1525','0','5','767','788','-2.66','4','483','62.97','1','398','51.89','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1530','0','5','801','782','2.43','4','630','78.65','2','614','76.65','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1535','0','5','557','326','70.86','4','453','81.33','3','409','73.43','2'],['SR','0001','SEOUL-METRO-MME1','20220531','1540','0','5','123','996','-87.65','1','106','86.18','3','86','69.92','1'],['SR','0001','SEOUL-METRO-MME1','20220531','1545','0','5','678','697','-2.73','4','607','89.53','3','583','85.99','3'],  ] ['INDEX', 'MME_ID', 'MME_NAME', 'C_DATE', 'C_TIME', 'WEEKDAY', 'MIN', 'ATTEMPT', 'STD_ATT', 'ATT_RATE', 'ATT_RATE_LEVEL', 'SUCCESS', 'SUCC_RATE', 'SUCC_LEVEL', 'ANSWER', 'ANS_RATE', 'ANS_LEVEL']  | sort C_DATE, C_TIME, MME_ID, MME_NAME, INDEX   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME | concat HOUR, ":", MM as TIME  | where INDEX = 'Attach'    | fields  TIME as `일시`,  MME_ID as `장비 ID`,  MME_NAME as `장비명`,  INDEX as `지표`,  ATTEMPT as `시도호`,  STD_ATT as `기준 시도호`,  ATT_RATE as `시도호 증감율`,  SUCCESS as `접속호`,  SUCC_RATE as `접속율`,  ANSWER as `성공호`,  ANS_RATE as `성공율`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  EVENT_TIME >= '-- :' and EVENT_TIME <= '-- :'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort - C_DATE, - C_TIME, - STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  EVENT_TIME >= '-- :' and EVENT_TIME <= '-- :'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort C_DATE, C_TIME, STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""   | where STATISTICS_TYPE = 'Diameter'   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort - C_DATE, - C_TIME, - STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_HSS' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'   | where GROUP_ID in (200,400,300,500)   | fields EQUIP_NAME, C_DATE, C_TIME, EVENT_TIME, GROUP_ID, STATISTICS_TYPE, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, FAIL   | sort C_DATE, C_TIME, STATISTICS_TYPE   | replace STATISTICS_TYPE " Interface" "" | replace STATISTICS_TYPE " Stack" ""   | where STATISTICS_TYPE = 'Diameter'   | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, STATISTICS_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`, FAIL as `실패호`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'    | where PCRF_ID in ('0001')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort - C_DATE, - C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat YEAR, "-", MONTH, "-", DAY," ", HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_PCRF' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'    | where PCRF_ID in ('0001')   | where KPI_TYPE in ('PCEF', 'SPR', 'AF')   | fields EVENT_TIME, C_DATE, C_TIME, PCRF_ID, PCRF_NAME, KPI_TYPE, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL   | sort C_DATE, C_TIME, PCRF_ID,  PCRF_NAME, KPI_TYPE     | substr C_DATE 1 4 as YEAR | substr C_DATE 5 2 as MONTH | substr C_DATE 7 2 as DAY | substr C_TIME 1 2 as HOUR | substr C_TIME 3 2 as MM | concat HOUR, ":", MM as DATE_TIME   | fields  DATE_TIME as `일시`, PCRF_ID as `장비 ID`, PCRF_NAME as `장비명`, KPI_TYPE as `지표`, ATTEMPT as `시도호`, STD_ATT_5M as `기준 시도호`, ATT_RATE as `시도호 증감율`, SUCCESS as `성공호`, SUCC_RATE as `성공율`
model name = 'LTER_TB_PM_MME_SR' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'  | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_MME_ATTACH' model_owner = dv2team | where  EVENT_TIME >= '2022-05-31 12:50' and EVENT_TIME <= '2022-05-31 15:50'  | where MME_ID in ('')   | fields MME_ID, MME_NAME, C_DATE,  C_TIME,  WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL, ANSWER, ANS_RATE, ANS_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_DELETE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1250' and C_TIME <= '1550'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
model name = 'LTER_TB_PM_PGW_CREATE' model_owner = dv2team | where  C_DATE >= '20220531' and  C_DATE <= '20220531' and  C_TIME >= '1250' and C_TIME <= '1550'   | where PGW_ID in ('')   | fields  PGW_ID, PGW_NAME, C_DATE, C_TIME, WEEKDAY, MIN, ATTEMPT, STD_ATT_5M as STD_ATT, ATT_RATE, ATT_RATE_LEVEL, SUCCESS, SUCC_RATE, SUCC_RATE_LEVEL
